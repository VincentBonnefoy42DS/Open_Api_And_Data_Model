openapi: 3.0.1
info:
    title: Payment Method
    description: "TMF670 Defines a specific method of payment (e.g. direct debit with\
    \ all details associated)\n-\tMain payment method attributes are its type, details,\
    \ name, description, isPreffered, status, status date\nPayment Method API performs\
    \ the following operations on payment method.\n-\tRetrieval of a payment method\
    \ or a collection of payment method depending on filter criteria\n-\tPartial update\
    \ of a payment method\n-\tCreation of a payment method \n-\tNotification of events\
    \ on payment method:\no\tPayment method state change\no\tPayment method change\n\
    o\tPayment method created\no\tPayment method deleted \n\n\\n\\n\\nCopyright Â©\
    \ TM Forum 2020. All Rights Reserved\\n\\n\\n\"\n"
    version: 4.0.0
servers:
    -   url: https://serverRoot/tmf-api/paymentMethod/v4/
tags:
    -   name: paymentMethod
    -   name: notification listeners (client side)
    -   name: events subscription
paths:
    /paymentMethod:
        get:
            tags:
                - paymentMethod
            summary: List or find PaymentMethod objects
            description: This operation list or find PaymentMethod entities
            operationId: listPaymentMethod
            parameters:
                -   name: fields
                    in: query
                    description: Comma-separated properties to be provided in response
                    schema:
                        type: string
                -   name: offset
                    in: query
                    description: Requested index for start of resources to be provided in response
                    schema:
                        type: integer
                -   name: limit
                    in: query
                    description: Requested number of resources to be provided in response
                    schema:
                        type: integer
            responses:
                "200":
                    description: Success
                    headers:
                        X-Total-Count:
                            description: Total number of items matching criteria
                            schema:
                                type: integer
                        X-Result-Count:
                            description: Actual number of items returned in the response body
                            schema:
                                type: integer
                    content:
                        application/json;charset=utf-8:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/PaymentMethod'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
        post:
            tags:
                - paymentMethod
            summary: Creates a PaymentMethod
            description: This operation creates a PaymentMethod entity.
            operationId: createPaymentMethod
            requestBody:
                description: The PaymentMethod to be created
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/PaymentMethod_Create'
                required: true
            responses:
                "201":
                    description: Created
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/PaymentMethod'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: paymentMethod
    /paymentMethod/{id}:
        get:
            tags:
                - paymentMethod
            summary: Retrieves a PaymentMethod by ID
            description: This operation retrieves a PaymentMethod entity. Attribute selection
                is enabled for all first level attributes.
            operationId: retrievePaymentMethod
            parameters:
                -   name: id
                    in: path
                    description: Identifier of the PaymentMethod
                    required: true
                    schema:
                        type: string
                -   name: fields
                    in: query
                    description: Comma-separated properties to provide in response
                    schema:
                        type: string
            responses:
                "200":
                    description: Success
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/PaymentMethod'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
        delete:
            tags:
                - paymentMethod
            summary: Deletes a PaymentMethod
            description: This operation deletes a PaymentMethod entity.
            operationId: deletePaymentMethod
            parameters:
                -   name: id
                    in: path
                    description: Identifier of the PaymentMethod
                    required: true
                    schema:
                        type: string
            responses:
                "204":
                    description: Deleted
                    content: { }
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
        patch:
            tags:
                - paymentMethod
            summary: Updates partially a PaymentMethod
            description: This operation updates partially a PaymentMethod entity.
            operationId: patchPaymentMethod
            parameters:
                -   name: id
                    in: path
                    description: Identifier of the PaymentMethod
                    required: true
                    schema:
                        type: string
            requestBody:
                description: The PaymentMethod to be updated
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/PaymentMethod_Update'
                required: true
            responses:
                "200":
                    description: Updated
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/PaymentMethod'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: paymentMethod
    /hub:
        post:
            tags:
                - events subscription
            summary: Register a listener
            description: "Sets the communication endpoint address the service instance must\
        \ use to deliver information about its health state, execution state, failures\
        \ and metrics."
            operationId: registerListener
            requestBody:
                description: Data containing the callback endpoint to deliver the information
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/EventSubscriptionInput'
                required: true
            responses:
                "201":
                    description: Subscribed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /hub/{id}:
        delete:
            tags:
                - events subscription
            summary: Unregister a listener
            description: "Resets the communication endpoint address the service instance\
        \ must use to deliver information about its health state, execution state,\
        \ failures and metrics."
            operationId: unregisterListener
            parameters:
                -   name: id
                    in: path
                    description: The id of the registered listener
                    required: true
                    schema:
                        type: string
            responses:
                "204":
                    description: Deleted
                    content: { }
                "400":
                    description: Bad request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
    /listener/paymentMethodCreateEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity PaymentMethodCreateEvent
            description: Example of a client listener for receiving the notification PaymentMethodCreateEvent
            operationId: listenToPaymentMethodCreateEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/PaymentMethodCreateEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/paymentMethodAttributeValueChangeEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity PaymentMethodAttributeValueChangeEvent
            description: Example of a client listener for receiving the notification PaymentMethodAttributeValueChangeEvent
            operationId: listenToPaymentMethodAttributeValueChangeEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/PaymentMethodAttributeValueChangeEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/paymentMethodStatusChangeEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity PaymentMethodStatusChangeEvent
            description: Example of a client listener for receiving the notification PaymentMethodStatusChangeEvent
            operationId: listenToPaymentMethodStatusChangeEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/PaymentMethodStatusChangeEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/paymentMethodDeleteEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity PaymentMethodDeleteEvent
            description: Example of a client listener for receiving the notification PaymentMethodDeleteEvent
            operationId: listenToPaymentMethodDeleteEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/PaymentMethodDeleteEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
components:
    schemas:
        AccountRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier of the account
                href:
                    type: string
                    description: Reference of the account
                description:
                    type: string
                    description: Detailed description of the account
                name:
                    type: string
                    description: Name of the account
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: Account reference. A account may be a party account or a financial
                account.
        Addressable:
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
            description: Base schema for adressable entities
        Entity:
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: Base entity schema for use in TMForum Open-APIs
        EntityRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                name:
                    type: string
                    description: Name of the related entity.
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: Entity reference schema to be use for all entityRef class.
        Extensible:
            type: object
            properties:
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: Base Extensible schema for use in TMForum Open-APIs
        PaymentMethod:
            required:
                - '@type'
                - name
            properties:
                name:
                    type: string
                    description: Friendly name assigned to the payment method
                description:
                    type: string
                    description: Text description of the contents of the payment method
                isPreferred:
                    type: boolean
                    description: If the method is the preferred one by the owner. Typically
                        used when querying for the payment methods of a specific customer or account
                authorizationCode:
                    type: string
                    description: "Review: Authorization code provided by a financial institution.\
            \ Typically this would be populated for recurring payments using the method,\
            \ as payments have an authorization code of their own."
                status:
                    type: string
                    description: Status of the payment method
                statusDate:
                    type: string
                    description: The last time the payment method status changed.
                    format: date-time
                statusReason:
                    type: string
                    description: The reason for the last status change.
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@type':
                    type: string
                    description: "Type of payment method (e.g.: bank card, cash, voucher,etc). "
                    enum:
                        - cash
                        - digitalWallet
                        - tokenizedCard
                        - bankAccountTransfer
                        - bankAccountDebit
                        - bankCard
                        - voucher
                        - check
                        - bucketPaymentMethod
                        - accountPaymentMethod
                        - loyaltyPaymentMethod
                        - directDebit
                relatedParty:
                    $ref: '#/components/schemas/RelatedParty'
                relatedPlace:
                    $ref: '#/components/schemas/RelatedPlace'
                account:
                    type: array
                    description: Reference to the accounts that are linked to the payment method.
                        May be a party account or a financial account.
                    items:
                        $ref: '#/components/schemas/AccountRef'
            description: "A Payment Method is a pure-virtual super-class that defines a\
        \ specific method of payment such as Direct Debit, Cash, Digital Wallet,Tokenized\
        \ Card, Bank Account Transfer, Bank Account Debit, Bank Card, Voucher, Check,\
        \ Bucket PaymentMethod, Account PaymentMethod, and Loyalty PaymentMethod with\
        \ all details associated. Use the @type attribute to specify the concrete\
        \ type in the API calls.Defines a specific method of payment (e.g. direct\
        \ debit with all details associated)"
            allOf:
                -   $ref: '#/components/schemas/Entity'
        PaymentMethod_Create:
            required:
                - '@type'
                - name
            type: object
            properties:
                authorizationCode:
                    type: string
                    description: "Review: Authorization code provided by a financial institution.\
            \ Typically this would be populated for recurring payments using the method,\
            \ as payments have an authorization code of their own."
                    example: "1234567890"
                description:
                    type: string
                    description: Text description of the contents of the payment method
                    example: My gold mastercard.
                isPreferred:
                    type: boolean
                    description: If the method is the preferred one by the owner. Typically
                        used when querying for the payment methods of a specific customer or account
                    example: true
                name:
                    type: string
                    description: Friendly name assigned to the payment method
                    example: Main credit card
                status:
                    type: string
                    description: Status of the payment method
                    example: Active
                statusDate:
                    type: string
                    description: The last time the payment method status changed.
                    format: date-time
                statusReason:
                    type: string
                    description: The reason for the last status change.
                    example: "This payment method has expired, therefore its status is now inactive."
                account:
                    type: array
                    description: Reference to the accounts that are linked to the payment method.
                        May be a party account or a financial account.
                    items:
                        $ref: '#/components/schemas/AccountRef'
                relatedParty:
                    $ref: '#/components/schemas/RelatedParty'
                relatedPlace:
                    $ref: '#/components/schemas/RelatedPlace'
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "Type of payment method (e.g.: bank card, cash, voucher, etc)."
            description: |-
                A Payment Method is a pure-virtual super-class that defines a specific method of payment such as Direct Debit, Cash, Digital Wallet,Tokenized Card, Bank Account Transfer, Bank Account Debit, Bank Card, Voucher, Check, Bucket PaymentMethod, Account PaymentMethod, and Loyalty PaymentMethod with all details associated. Use the @type attribute to specify the concrete type in the API calls.
                Skipped properties: id,href
        PaymentMethod_Update:
            required:
                - name
            type: object
            properties:
                authorizationCode:
                    type: string
                    description: "Review: Authorization code provided by a financial institution.\
            \ Typically this would be populated for recurring payments using the method,\
            \ as payments have an authorization code of their own."
                    example: "1234567890"
                description:
                    type: string
                    description: Text description of the contents of the payment method
                    example: My gold mastercard.
                isPreferred:
                    type: boolean
                    description: If the method is the preferred one by the owner. Typically
                        used when querying for the payment methods of a specific customer or account
                    example: true
                name:
                    type: string
                    description: Friendly name assigned to the payment method
                    example: Main credit card
                status:
                    type: string
                    description: Status of the payment method
                    example: Active
                statusDate:
                    type: string
                    description: The last time the payment method status changed.
                    format: date-time
                statusReason:
                    type: string
                    description: The reason for the last status change.
                    example: "This payment method has expired, therefore its status is now inactive."
                account:
                    type: array
                    description: Reference to the accounts that are linked to the payment method.
                        May be a party account or a financial account.
                    items:
                        $ref: '#/components/schemas/AccountRef'
                relatedParty:
                    $ref: '#/components/schemas/RelatedParty'
                relatedPlace:
                    $ref: '#/components/schemas/RelatedPlace'
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
            description: |-
                A Payment Method is a pure-virtual super-class that defines a specific method of payment such as Direct Debit, Cash, Digital Wallet,Tokenized Card, Bank Account Transfer, Bank Account Debit, Bank Card, Voucher, Check, Bucket PaymentMethod, Account PaymentMethod, and Loyalty PaymentMethod with all details associated. Use the @type attribute to specify the concrete type in the API calls.
                Skipped properties: id,href,@baseType,@schemaLocation,@type
        RelatedParty:
            required:
                - '@referredType'
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                name:
                    type: string
                    description: Name of the related entity.
                role:
                    type: string
                    description: Role played by the related party
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: Related Entity reference. A related party defines party or party
                role linked to a specific entity.
        RelatedPlace:
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier of the place
                href:
                    type: string
                    description: Unique reference of the place
                name:
                    type: string
                    description: "A user-friendly name for the place, such as [Paris Store],\
            \ [London Store], [Main Home]"
                role:
                    type: string
                    description: "Role of the place, such as: [home delivery], [shop retrieval])"
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: "A  Place and an associated role as installation adress, delivery\
        \ address, etc...."
        TimePeriod:
            type: object
            properties:
                endDateTime:
                    type: string
                    description: "End of the time period, using IETC-RFC-3339 format"
                    format: date-time
                    example: 1985-04-12T23:20:50.52Z
                startDateTime:
                    type: string
                    description: "Start of the time period, using IETC-RFC-3339 format"
                    format: date-time
                    example: 1985-04-12T23:20:50.52Z
            description: "A period of time, either as a deadline (endDateTime only) a startDateTime\
        \ only, or both"
        EventSubscription:
            required:
                - callback
                - id
            type: object
            properties:
                id:
                    type: string
                    description: Id of the listener
                callback:
                    type: string
                    description: The callback being registered.
                query:
                    type: string
                    description: additional data to be passed
            description: Sets the communication endpoint address the service instance must
                use to deliver notification information
        EventSubscriptionInput:
            required:
                - callback
            type: object
            properties:
                callback:
                    type: string
                    description: The callback being registered.
                query:
                    type: string
                    description: additional data to be passed
            description: Sets the communication endpoint address the service instance must
                use to deliver notification information
        PaymentMethodCreateEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/PaymentMethodCreateEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        PaymentMethodCreateEventPayload:
            type: object
            properties:
                paymentMethod:
                    $ref: '#/components/schemas/PaymentMethod'
            description: The event data structure
        PaymentMethodAttributeValueChangeEvent:
            type: object
            properties:
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
                fieldPath:
                    type: string
                    description: The path identifying the object field concerned by this notification.
                event:
                    $ref: '#/components/schemas/PaymentMethodAttributeValueChangeEventPayload'
            description: The notification data structure
        PaymentMethodAttributeValueChangeEventPayload:
            type: object
            properties:
                paymentMethod:
                    $ref: '#/components/schemas/PaymentMethod'
            description: The event data structure
        PaymentMethodStatusChangeEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/PaymentMethodStatusChangeEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        PaymentMethodStatusChangeEventPayload:
            type: object
            properties:
                paymentMethod:
                    $ref: '#/components/schemas/PaymentMethod'
            description: The event data structure
        PaymentMethodDeleteEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/PaymentMethodDeleteEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        PaymentMethodDeleteEventPayload:
            type: object
            properties:
                paymentMethod:
                    $ref: '#/components/schemas/PaymentMethod'
            description: The event data structure
        DirectDebit:
            required:
                - accountNumber
                - bank
                - firstDebitDate
                - mandateType
                - owner
            properties:
                mandateId:
                    type: string
                    description: Unique mandate reference
                mandateStatus:
                    type: string
                    description: The status of the mandate(Active/Inactive/Pending)
                mandateType:
                    type: string
                    description: "The type of mandate e.g., single-use(single)/multi-use(recurring)"
                mandateCategory:
                    type: string
                    description: "The identification code of the Scheme e.g., core/b2b"
                signature:
                    type: string
                    description: The (e)Mandate electronic signature data
                signatureDate:
                    type: string
                    description: The date of signing of the (e)Mandate
                    format: date-time
                mandateStatusDate:
                    type: string
                    description: The date of the mandate status change
                    format: date-time
                firstDebitDate:
                    type: string
                    description: The first debit date. The debit date of the collection is the
                        day when the payment of the Debtor is due to the Creditor
                    format: date-time
                lastDebitDate:
                    type: string
                    description: The last debit date. The debit date of the collection is the
                        day when the payment of the Debtor is due to the Creditor
                    format: date-time
                cancellationDate:
                    type: string
                    description: The date on which the (e)Mandate has been cancelled by the
                        Debtor or the Creditor.
                    format: date-time
                accountNumber:
                    type: string
                    description: "The bank account number, this could refer to the iban or swift\
            \ number."
                accountNumberType:
                    type: string
                    description: "The type of account number (e.g.: IBAN, SWIFT, ...)"
                reference:
                    type: string
                    description: A reference that the party can later use to identify the direct
                        debit.
                BIC:
                    type: string
                    description: The Business Identifier Code/Swift code of the financial institution
                        where the account is located.
                owner:
                    type: string
                    description: The owner of the bank account. This is also the account name.
                bank:
                    type: string
                    description: The display name of the bank.
                attachment:
                    type: array
                    items:
                        $ref: '#/components/schemas/AttachmentRefOrValue'
            description: "Direct Debit is a fully automated payment instrument which is\
        \ generally used for recurrent payments. It allows a creditor to initiate\
        \ the payment order. In doing so, it exempts the debtor from having to send\
        \ a separate payment order at each due date"
            allOf:
                -   $ref: '#/components/schemas/PaymentMethod'
        AttachmentRefOrValue:
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier for this particular attachment
                href:
                    type: string
                    description: URI for this Attachment
                    format: uri
                attachmentType:
                    type: string
                    description: "Attachment type such as video, picture"
                content:
                    type: string
                    description: "The actual contents of the attachment object, if embedded,\
            \ encoded as base64"
                    format: base64
                description:
                    type: string
                    description: A narrative text describing the content of the attachment
                mimeType:
                    type: string
                    description: "Attachment mime type such as extension file for video, picture\
            \ and document"
                name:
                    type: string
                    description: The name of the attachment
                url:
                    type: string
                    description: "Uniform Resource Locator, is a web page address (a subset\
            \ of URI)"
                    format: uri
                size:
                    $ref: '#/components/schemas/Quantity'
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: "An attachment by value or by reference. An attachment complements\
        \ the description of an element, for example through a document, a video,\
        \ a picture."
        Voucher:
            required:
                - code
                - expirationDate
                - value
            properties:
                code:
                    type: string
                    description: Code that identifies the voucher.
                description:
                    type: string
                    description: "Description of the voucher i.e.: get one and receive one free."
                value:
                    $ref: '#/components/schemas/Quantity'
                discount:
                    type: string
                    description: The discount that the voucher applies when it's a discount
                        voucher.
                expirationDate:
                    type: string
                    description: The voucher's expiration date.
                    format: date-time
                campaign:
                    type: string
                    description: Campaign this voucher belongs to.
            description: A voucher method of payment.
            allOf:
                -   $ref: '#/components/schemas/PaymentMethod'
        TokenizedCard:
            required:
                - expirationDate
                - lastFourDigits
            properties:
                brand:
                    type: string
                    description: Card brand. Might be used for display purposes
                cardType:
                    type: string
                    description: Card type. Might be used for display purposes.
                lastFourDigits:
                    type: string
                    description: The last four digits of the credit card.
                tokenType:
                    type: string
                    description: "Token type (e.g.: emv)."
                token:
                    type: string
                    description: The token. A series of randomly generated numbers.
                issuer:
                    type: string
                    description: The entity that issued the token.
                expirationDate:
                    type: string
                    description: The tokenised card's expiration date.
                    format: date-time
                countryOfIssue:
                    type: string
                    description: "ISO 3166-1 Alpha-2 country code that designate the country\
            \ where the tokenised card was issued.e.g. GB, NG, FR."
            description: A Tokenized Card method of payment.
            allOf:
                -   $ref: '#/components/schemas/PaymentMethod'
        DigitalWallet:
            required:
                - service
                - walletId
                - walletUrl
            properties:
                service:
                    type: string
                    description: "Organization, platform or currency backing the wallet (e.g.:\
            \ PayPal, Yandex, BitCoinâ¦)."
                walletId:
                    type: string
                    description: Account identifier in that service.
                walletUrl:
                    type: string
                    description: "URI pointing at the digital wallet (e.g.: //paypal.me/johndoe)."
            description: A digital wallet method of payment.
            allOf:
                -   $ref: '#/components/schemas/PaymentMethod'
        Check:
            required:
                - bank
                - checkId
                - drawer
                - payee
                - signedDate
            properties:
                checkId:
                    type: string
                    description: Unique identifier of the check.
                drawer:
                    type: string
                    description: Person or entity writing the check.
                payee:
                    type: string
                    description: Person or entity the check is addressed to.
                signedDate:
                    type: string
                    description: Date when the check was signed.
                    format: date-time
                bank:
                    type: string
                    description: Bank performing the payment of the check.
            description: A check method of payment.
            allOf:
                -   $ref: '#/components/schemas/PaymentMethod'
        Cash:
            description: "A cash method of payment. It has no additional data, but it could\
        \ be extended to add information e.g.: the cashier who took the payment, the\
        \ person who paid, etc"
            allOf:
                -   $ref: '#/components/schemas/PaymentMethod'
        BankCard:
            required:
                - brand
                - cardNumber
                - expirationDate
                - nameOnCard
            properties:
                brand:
                    type: string
                    description: The card brand
                cardType:
                    type: string
                    description: "The type of card e.g. Credit, debit etc."
                cardNumber:
                    type: string
                    description: The bank card number.
                expirationDate:
                    type: string
                    description: Expiration date of the bank card.
                    format: date-time
                cvv:
                    type: string
                    description: "The security code (e.g.: CVV, CVV2) of the card."
                lastFourDigits:
                    type: string
                    description: The last four digits of the credit card.
                nameOnCard:
                    type: string
                    description: The name on the card.
                bank:
                    type: string
                    description: The bank that issued the card.
            description: A bank card method of payment.
            allOf:
                -   $ref: '#/components/schemas/PaymentMethod'
        BankAccountTransfer:
            required:
                - accountNumber
                - bank
                - owner
            properties:
                accountNumber:
                    type: string
                    description: "The bank account number, this could refer to the iban or swift\
            \ number."
                accountNumberType:
                    type: string
                    description: "The type of account number (e.g.: IBAN, SWIFT, ...)"
                BIC:
                    type: string
                    description: The Business Identifier Code/Swift code of the financial institution
                        where the account is located.
                owner:
                    type: string
                    description: The owner of the bank account. This is also the account name.
                bank:
                    type: string
                    description: The display name of the bank.
            description: A bank transfer method of payment.
            allOf:
                -   $ref: '#/components/schemas/PaymentMethod'
        BankAccountDebit:
            required:
                - accountNumber
                - bank
                - owner
            properties:
                accountNumber:
                    type: string
                    description: The Bank Account Number (this could refer to the IBAN or SWIFT
                        number)
                accountNumberType:
                    type: string
                    description: "The type of account number (e.g.: IBAN, SWIFT, ...)"
                BIC:
                    type: string
                    description: The Business Identifier Code/Swift code of the financial institution
                        where the account is located.
                owner:
                    type: string
                    description: The owner of the bank account. This is also the account name.
                bank:
                    type: string
                    description: The display name of the bank.
            description: A bank account debit method of payment. This could be extended
                to add any required authorization fields to allow recurring payments
            allOf:
                -   $ref: '#/components/schemas/PaymentMethod'
        Quantity:
            type: object
            properties:
                amount:
                    type: number
                    description: Numeric value in a given unit
                    format: float
                    default: 1.0
                units:
                    type: string
                    description: Unit
            description: An amount in a given unit
        Error:
            required:
                - code
                - reason
            type: object
            properties:
                code:
                    type: string
                    description: "Application relevant detail, defined in the API or a common\
            \ list."
                reason:
                    type: string
                    description: Explanation of the reason for the error which can be shown
                        to a client user.
                message:
                    type: string
                    description: More details and corrective actions related to the error which
                        can be shown to a client user.
                status:
                    type: string
                    description: HTTP Error code extension
                referenceError:
                    type: string
                    description: URI of documentation describing the error.
                    format: uri
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class."
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class entity name."
            description: "Used when an API throws an Error, typically with a HTTP error\
        \ response-code (3xx, 4xx, 5xx)"
x-original-swagger-version: "2.0"
