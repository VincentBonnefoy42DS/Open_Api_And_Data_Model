openapi: 3.0.1
info:
    title: Ai Management
    description: AI Management API
    version: 4.0.0
servers:
    -   url: https://serverRoot/tmf-api/AiM/v4/
tags:
    -   name: aiContractSpecification
    -   name: aiModel
    -   name: aiModelSpecification
    -   name: aiContract
    -   name: aiContractViolation
    -   name: alarm
    -   name: rule
    -   name: event
    -   name: monitor
    -   name: topic
    -   name: hub
    -   name: notification listeners (client side)
    -   name: events subscription
paths:
    /aiContractSpecification:
        get:
            tags:
                - aiContractSpecification
            summary: List or find AiContractSpecification objects
            description: This operation list or find AiContractSpecification entities
            operationId: listAiContractSpecification
            parameters:
                -   name: fields
                    in: query
                    description: Comma-separated properties to be provided in response
                    schema:
                        type: string
                -   name: offset
                    in: query
                    description: Requested index for start of resources to be provided in response
                    schema:
                        type: integer
                -   name: limit
                    in: query
                    description: Requested number of resources to be provided in response
                    schema:
                        type: integer
            responses:
                "200":
                    description: Success
                    headers:
                        X-Total-Count:
                            description: Total number of items matching criteria
                            schema:
                                type: integer
                        X-Result-Count:
                            description: Actual number of items returned in the response body
                            schema:
                                type: integer
                    content:
                        application/json;charset=utf-8:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/AiContractSpecification'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
        post:
            tags:
                - aiContractSpecification
            summary: Creates a AiContractSpecification
            description: This operation creates a AiContractSpecification entity.
            operationId: createAiContractSpecification
            requestBody:
                description: The AiContractSpecification to be created
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/AiContractSpecification_Create'
                required: true
            responses:
                "201":
                    description: Created
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/AiContractSpecification'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: aiContractSpecification
    /aiContractSpecification/{id}:
        get:
            tags:
                - aiContractSpecification
            summary: Retrieves a AiContractSpecification by ID
            description: This operation retrieves a AiContractSpecification entity. Attribute
                selection is enabled for all first level attributes.
            operationId: retrieveAiContractSpecification
            parameters:
                -   name: id
                    in: path
                    description: Identifier of the AiContractSpecification
                    required: true
                    schema:
                        type: string
                -   name: fields
                    in: query
                    description: Comma-separated properties to provide in response
                    schema:
                        type: string
            responses:
                "200":
                    description: Success
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/AiContractSpecification'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
        delete:
            tags:
                - aiContractSpecification
            summary: Deletes a AiContractSpecification
            description: This operation deletes a AiContractSpecification entity.
            operationId: deleteAiContractSpecification
            parameters:
                -   name: id
                    in: path
                    description: Identifier of the AiContractSpecification
                    required: true
                    schema:
                        type: string
            responses:
                "204":
                    description: Deleted
                    content: { }
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
        patch:
            tags:
                - aiContractSpecification
            summary: Updates partially a AiContractSpecification
            description: This operation updates partially a AiContractSpecification entity.
            operationId: patchAiContractSpecification
            parameters:
                -   name: id
                    in: path
                    description: Identifier of the AiContractSpecification
                    required: true
                    schema:
                        type: string
            requestBody:
                description: The AiContractSpecification to be updated
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/AiContractSpecification_Update'
                required: true
            responses:
                "200":
                    description: Updated
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/AiContractSpecification'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: aiContractSpecification
    /aiModel:
        get:
            tags:
                - aiModel
            summary: List or find AiModel objects
            description: This operation list or find AiModel entities
            operationId: listAiModel
            parameters:
                -   name: fields
                    in: query
                    description: Comma-separated properties to be provided in response
                    schema:
                        type: string
                -   name: offset
                    in: query
                    description: Requested index for start of resources to be provided in response
                    schema:
                        type: integer
                -   name: limit
                    in: query
                    description: Requested number of resources to be provided in response
                    schema:
                        type: integer
            responses:
                "200":
                    description: Success
                    headers:
                        X-Total-Count:
                            description: Total number of items matching criteria
                            schema:
                                type: integer
                        X-Result-Count:
                            description: Actual number of items returned in the response body
                            schema:
                                type: integer
                    content:
                        application/json;charset=utf-8:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/AiModel'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
        post:
            tags:
                - aiModel
            summary: Creates a AiModel
            description: This operation creates a AiModel entity.
            operationId: createAiModel
            requestBody:
                description: The AiModel to be created
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/AiModel_Create'
                required: true
            responses:
                "201":
                    description: Created
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/AiModel'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: aiModel
    /aiModel/{id}:
        get:
            tags:
                - aiModel
            summary: Retrieves a AiModel by ID
            description: This operation retrieves a AiModel entity. Attribute selection
                is enabled for all first level attributes.
            operationId: retrieveAiModel
            parameters:
                -   name: id
                    in: path
                    description: Identifier of the AiModel
                    required: true
                    schema:
                        type: string
                -   name: fields
                    in: query
                    description: Comma-separated properties to provide in response
                    schema:
                        type: string
            responses:
                "200":
                    description: Success
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/AiModel'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
        delete:
            tags:
                - aiModel
            summary: Deletes a AiModel
            description: This operation deletes a AiModel entity.
            operationId: deleteAiModel
            parameters:
                -   name: id
                    in: path
                    description: Identifier of the AiModel
                    required: true
                    schema:
                        type: string
            responses:
                "204":
                    description: Deleted
                    content: { }
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
        patch:
            tags:
                - aiModel
            summary: Updates partially a AiModel
            description: This operation updates partially a AiModel entity.
            operationId: patchAiModel
            parameters:
                -   name: id
                    in: path
                    description: Identifier of the AiModel
                    required: true
                    schema:
                        type: string
            requestBody:
                description: The AiModel to be updated
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/AiModel_Update'
                required: true
            responses:
                "200":
                    description: Updated
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/AiModel'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: aiModel
    /aiModelSpecification:
        get:
            tags:
                - aiModelSpecification
            summary: List or find AiModelSpecification objects
            description: This operation list or find AiModelSpecification entities
            operationId: listAiModelSpecification
            parameters:
                -   name: fields
                    in: query
                    description: Comma-separated properties to be provided in response
                    schema:
                        type: string
                -   name: offset
                    in: query
                    description: Requested index for start of resources to be provided in response
                    schema:
                        type: integer
                -   name: limit
                    in: query
                    description: Requested number of resources to be provided in response
                    schema:
                        type: integer
            responses:
                "200":
                    description: Success
                    headers:
                        X-Total-Count:
                            description: Total number of items matching criteria
                            schema:
                                type: integer
                        X-Result-Count:
                            description: Actual number of items returned in the response body
                            schema:
                                type: integer
                    content:
                        application/json;charset=utf-8:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/AiModelSpecification'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
        post:
            tags:
                - aiModelSpecification
            summary: Creates a AiModelSpecification
            description: This operation creates a AiModelSpecification entity.
            operationId: createAiModelSpecification
            requestBody:
                description: The AiModelSpecification to be created
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/AiModelSpecification_Create'
                required: true
            responses:
                "201":
                    description: Created
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/AiModelSpecification'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: aiModelSpecification
    /aiModelSpecification/{id}:
        get:
            tags:
                - aiModelSpecification
            summary: Retrieves a AiModelSpecification by ID
            description: This operation retrieves a AiModelSpecification entity. Attribute
                selection is enabled for all first level attributes.
            operationId: retrieveAiModelSpecification
            parameters:
                -   name: id
                    in: path
                    description: Identifier of the AiModelSpecification
                    required: true
                    schema:
                        type: string
                -   name: fields
                    in: query
                    description: Comma-separated properties to provide in response
                    schema:
                        type: string
            responses:
                "200":
                    description: Success
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/AiModelSpecification'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
        delete:
            tags:
                - aiModelSpecification
            summary: Deletes a AiModelSpecification
            description: This operation deletes a AiModelSpecification entity.
            operationId: deleteAiModelSpecification
            parameters:
                -   name: id
                    in: path
                    description: Identifier of the AiModelSpecification
                    required: true
                    schema:
                        type: string
            responses:
                "204":
                    description: Deleted
                    content: { }
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
        patch:
            tags:
                - aiModelSpecification
            summary: Updates partially a AiModelSpecification
            description: This operation updates partially a AiModelSpecification entity.
            operationId: patchAiModelSpecification
            parameters:
                -   name: id
                    in: path
                    description: Identifier of the AiModelSpecification
                    required: true
                    schema:
                        type: string
            requestBody:
                description: The AiModelSpecification to be updated
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/AiModelSpecification_Update'
                required: true
            responses:
                "200":
                    description: Updated
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/AiModelSpecification'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: aiModelSpecification
    /aiContract:
        get:
            tags:
                - aiContract
            summary: List or find AiContract objects
            description: This operation list or find AiContract entities
            operationId: listAiContract
            parameters:
                -   name: fields
                    in: query
                    description: Comma-separated properties to be provided in response
                    schema:
                        type: string
                -   name: offset
                    in: query
                    description: Requested index for start of resources to be provided in response
                    schema:
                        type: integer
                -   name: limit
                    in: query
                    description: Requested number of resources to be provided in response
                    schema:
                        type: integer
            responses:
                "200":
                    description: Success
                    headers:
                        X-Total-Count:
                            description: Total number of items matching criteria
                            schema:
                                type: integer
                        X-Result-Count:
                            description: Actual number of items returned in the response body
                            schema:
                                type: integer
                    content:
                        application/json;charset=utf-8:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/AiContract'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
        post:
            tags:
                - aiContract
            summary: Creates a AiContract
            description: This operation creates a AiContract entity.
            operationId: createAiContract
            requestBody:
                description: The AiContract to be created
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/AiContract_Create'
                required: true
            responses:
                "201":
                    description: Created
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/AiContract'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: aiContract
    /aiContract/{id}:
        get:
            tags:
                - aiContract
            summary: Retrieves a AiContract by ID
            description: This operation retrieves a AiContract entity. Attribute selection
                is enabled for all first level attributes.
            operationId: retrieveAiContract
            parameters:
                -   name: id
                    in: path
                    description: Identifier of the AiContract
                    required: true
                    schema:
                        type: string
                -   name: fields
                    in: query
                    description: Comma-separated properties to provide in response
                    schema:
                        type: string
            responses:
                "200":
                    description: Success
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/AiContract'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
        delete:
            tags:
                - aiContract
            summary: Deletes a AiContract
            description: This operation deletes a AiContract entity.
            operationId: deleteAiContract
            parameters:
                -   name: id
                    in: path
                    description: Identifier of the AiContract
                    required: true
                    schema:
                        type: string
            responses:
                "204":
                    description: Deleted
                    content: { }
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
        patch:
            tags:
                - aiContract
            summary: Updates partially a AiContract
            description: This operation updates partially a AiContract entity.
            operationId: patchAiContract
            parameters:
                -   name: id
                    in: path
                    description: Identifier of the AiContract
                    required: true
                    schema:
                        type: string
            requestBody:
                description: The AiContract to be updated
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/AiContract_Update'
                required: true
            responses:
                "200":
                    description: Updated
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/AiContract'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: aiContract
    /aiContractViolation:
        get:
            tags:
                - aiContractViolation
            summary: List or find AiContractViolation objects
            description: This operation list or find AiContractViolation entities
            operationId: listAiContractViolation
            parameters:
                -   name: fields
                    in: query
                    description: Comma-separated properties to be provided in response
                    schema:
                        type: string
                -   name: offset
                    in: query
                    description: Requested index for start of resources to be provided in response
                    schema:
                        type: integer
                -   name: limit
                    in: query
                    description: Requested number of resources to be provided in response
                    schema:
                        type: integer
            responses:
                "200":
                    description: Success
                    headers:
                        X-Total-Count:
                            description: Total number of items matching criteria
                            schema:
                                type: integer
                        X-Result-Count:
                            description: Actual number of items returned in the response body
                            schema:
                                type: integer
                    content:
                        application/json;charset=utf-8:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/AiContractViolation'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
        post:
            tags:
                - aiContractViolation
            summary: Creates a AiContractViolation
            description: This operation creates a AiContractViolation entity.
            operationId: createAiContractViolation
            requestBody:
                description: The AiContractViolation to be created
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/AiContractViolation_Create'
                required: true
            responses:
                "201":
                    description: Created
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/AiContractViolation'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: aiContractViolation
    /aiContractViolation/{id}:
        get:
            tags:
                - aiContractViolation
            summary: Retrieves a AiContractViolation by ID
            description: This operation retrieves a AiContractViolation entity. Attribute
                selection is enabled for all first level attributes.
            operationId: retrieveAiContractViolation
            parameters:
                -   name: id
                    in: path
                    description: Identifier of the AiContractViolation
                    required: true
                    schema:
                        type: string
                -   name: fields
                    in: query
                    description: Comma-separated properties to provide in response
                    schema:
                        type: string
            responses:
                "200":
                    description: Success
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/AiContractViolation'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
    /alarm:
        get:
            tags:
                - alarm
            summary: List or find Alarm objects
            description: This operation list or find Alarm entities
            operationId: listAlarm
            parameters:
                -   name: fields
                    in: query
                    description: Comma-separated properties to be provided in response
                    schema:
                        type: string
                -   name: offset
                    in: query
                    description: Requested index for start of resources to be provided in response
                    schema:
                        type: integer
                -   name: limit
                    in: query
                    description: Requested number of resources to be provided in response
                    schema:
                        type: integer
            responses:
                "200":
                    description: Success
                    headers:
                        X-Total-Count:
                            description: Total number of items matching criteria
                            schema:
                                type: integer
                        X-Result-Count:
                            description: Actual number of items returned in the response body
                            schema:
                                type: integer
                    content:
                        application/json;charset=utf-8:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Alarm'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
        post:
            tags:
                - alarm
            summary: Creates a Alarm
            description: This operation creates a Alarm entity.
            operationId: createAlarm
            requestBody:
                description: The Alarm to be created
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/Alarm_Create'
                required: true
            responses:
                "201":
                    description: Created
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Alarm'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: alarm
    /alarm/{id}:
        get:
            tags:
                - alarm
            summary: Retrieves a Alarm by ID
            description: This operation retrieves a Alarm entity. Attribute selection is
                enabled for all first level attributes.
            operationId: retrieveAlarm
            parameters:
                -   name: id
                    in: path
                    description: Identifier of the Alarm
                    required: true
                    schema:
                        type: string
                -   name: fields
                    in: query
                    description: Comma-separated properties to provide in response
                    schema:
                        type: string
            responses:
                "200":
                    description: Success
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Alarm'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
        delete:
            tags:
                - alarm
            summary: Deletes a Alarm
            description: This operation deletes a Alarm entity.
            operationId: deleteAlarm
            parameters:
                -   name: id
                    in: path
                    description: Identifier of the Alarm
                    required: true
                    schema:
                        type: string
            responses:
                "204":
                    description: Deleted
                    content: { }
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
        patch:
            tags:
                - alarm
            summary: Updates partially a Alarm
            description: This operation updates partially a Alarm entity.
            operationId: patchAlarm
            parameters:
                -   name: id
                    in: path
                    description: Identifier of the Alarm
                    required: true
                    schema:
                        type: string
            requestBody:
                description: The Alarm to be updated
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/Alarm_Update'
                required: true
            responses:
                "200":
                    description: Updated
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Alarm'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: alarm
    /rule:
        get:
            tags:
                - rule
            summary: List or find Rule objects
            description: This operation list or find Rule entities
            operationId: listRule
            parameters:
                -   name: fields
                    in: query
                    description: Comma-separated properties to be provided in response
                    schema:
                        type: string
                -   name: offset
                    in: query
                    description: Requested index for start of resources to be provided in response
                    schema:
                        type: integer
                -   name: limit
                    in: query
                    description: Requested number of resources to be provided in response
                    schema:
                        type: integer
            responses:
                "200":
                    description: Success
                    headers:
                        X-Total-Count:
                            description: Total number of items matching criteria
                            schema:
                                type: integer
                        X-Result-Count:
                            description: Actual number of items returned in the response body
                            schema:
                                type: integer
                    content:
                        application/json;charset=utf-8:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Rule'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
        post:
            tags:
                - rule
            summary: Creates a Rule
            description: This operation creates a Rule entity.
            operationId: createRule
            requestBody:
                description: The Rule to be created
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/Rule_Create'
                required: true
            responses:
                "201":
                    description: Created
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Rule'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: rule
    /rule/{id}:
        get:
            tags:
                - rule
            summary: Retrieves a Rule by ID
            description: This operation retrieves a Rule entity. Attribute selection is
                enabled for all first level attributes.
            operationId: retrieveRule
            parameters:
                -   name: id
                    in: path
                    description: Identifier of the Rule
                    required: true
                    schema:
                        type: string
                -   name: fields
                    in: query
                    description: Comma-separated properties to provide in response
                    schema:
                        type: string
            responses:
                "200":
                    description: Success
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Rule'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
        delete:
            tags:
                - rule
            summary: Deletes a Rule
            description: This operation deletes a Rule entity.
            operationId: deleteRule
            parameters:
                -   name: id
                    in: path
                    description: Identifier of the Rule
                    required: true
                    schema:
                        type: string
            responses:
                "204":
                    description: Deleted
                    content: { }
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
        patch:
            tags:
                - rule
            summary: Updates partially a Rule
            description: This operation updates partially a Rule entity.
            operationId: patchRule
            parameters:
                -   name: id
                    in: path
                    description: Identifier of the Rule
                    required: true
                    schema:
                        type: string
            requestBody:
                description: The Rule to be updated
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/Rule_Update'
                required: true
            responses:
                "200":
                    description: Updated
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Rule'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: rule
    /topic/{topicId}/event:
        get:
            tags:
                - event
            summary: List or find Event objects
            description: This operation list or find Event entities
            operationId: listEvent
            parameters:
                -   name: topicId
                    in: path
                    description: Identifier of the parent Topic entity
                    required: true
                    schema:
                        type: string
                -   name: fields
                    in: query
                    description: Comma-separated properties to be provided in response
                    schema:
                        type: string
                -   name: offset
                    in: query
                    description: Requested index for start of resources to be provided in response
                    schema:
                        type: integer
                -   name: limit
                    in: query
                    description: Requested number of resources to be provided in response
                    schema:
                        type: integer
            responses:
                "200":
                    description: Success
                    headers:
                        X-Total-Count:
                            description: Total number of items matching criteria
                            schema:
                                type: integer
                        X-Result-Count:
                            description: Actual number of items returned in the response body
                            schema:
                                type: integer
                    content:
                        application/json;charset=utf-8:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Event'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
        post:
            tags:
                - event
            summary: Creates a Event
            description: This operation creates a Event entity.
            operationId: createEvent
            parameters:
                -   name: topicId
                    in: path
                    description: Identifier of the parent Topic entity
                    required: true
                    schema:
                        type: string
            requestBody:
                description: The Event to be created
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/Event_Create'
                required: true
            responses:
                "201":
                    description: Created
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Event'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: event
    /topic/{topicId}/event/{id}:
        get:
            tags:
                - event
            summary: Retrieves a Event by ID
            description: This operation retrieves a Event entity. Attribute selection is
                enabled for all first level attributes.
            operationId: retrieveEvent
            parameters:
                -   name: topicId
                    in: path
                    description: Identifier of the parent Topic entity
                    required: true
                    schema:
                        type: string
                -   name: id
                    in: path
                    description: Identifier of the Event
                    required: true
                    schema:
                        type: string
                -   name: fields
                    in: query
                    description: Comma-separated properties to provide in response
                    schema:
                        type: string
            responses:
                "200":
                    description: Success
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Event'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
    /monitor:
        get:
            tags:
                - monitor
            summary: List or find Monitor objects
            description: This operation list or find Monitor entities
            operationId: listMonitor
            parameters:
                -   name: fields
                    in: query
                    description: Comma-separated properties to be provided in response
                    schema:
                        type: string
                -   name: offset
                    in: query
                    description: Requested index for start of resources to be provided in response
                    schema:
                        type: integer
                -   name: limit
                    in: query
                    description: Requested number of resources to be provided in response
                    schema:
                        type: integer
            responses:
                "200":
                    description: Success
                    headers:
                        X-Total-Count:
                            description: Total number of items matching criteria
                            schema:
                                type: integer
                        X-Result-Count:
                            description: Actual number of items returned in the response body
                            schema:
                                type: integer
                    content:
                        application/json;charset=utf-8:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Monitor'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
    /monitor/{id}:
        get:
            tags:
                - monitor
            summary: Retrieves a Monitor by ID
            description: This operation retrieves a Monitor entity. Attribute selection
                is enabled for all first level attributes.
            operationId: retrieveMonitor
            parameters:
                -   name: id
                    in: path
                    description: Identifier of the Monitor
                    required: true
                    schema:
                        type: string
                -   name: fields
                    in: query
                    description: Comma-separated properties to provide in response
                    schema:
                        type: string
            responses:
                "200":
                    description: Success
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Monitor'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
    /topic:
        get:
            tags:
                - topic
            summary: List or find Topic objects
            description: This operation list or find Topic entities
            operationId: listTopic
            parameters:
                -   name: fields
                    in: query
                    description: Comma-separated properties to be provided in response
                    schema:
                        type: string
                -   name: offset
                    in: query
                    description: Requested index for start of resources to be provided in response
                    schema:
                        type: integer
                -   name: limit
                    in: query
                    description: Requested number of resources to be provided in response
                    schema:
                        type: integer
            responses:
                "200":
                    description: Success
                    headers:
                        X-Total-Count:
                            description: Total number of items matching criteria
                            schema:
                                type: integer
                        X-Result-Count:
                            description: Actual number of items returned in the response body
                            schema:
                                type: integer
                    content:
                        application/json;charset=utf-8:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Topic'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
        post:
            tags:
                - topic
            summary: Creates a Topic
            description: This operation creates a Topic entity.
            operationId: createTopic
            requestBody:
                description: The Topic to be created
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/Topic_Create'
                required: true
            responses:
                "201":
                    description: Created
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Topic'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: topic
    /topic/{id}:
        get:
            tags:
                - topic
            summary: Retrieves a Topic by ID
            description: This operation retrieves a Topic entity. Attribute selection is
                enabled for all first level attributes.
            operationId: retrieveTopic
            parameters:
                -   name: id
                    in: path
                    description: Identifier of the Topic
                    required: true
                    schema:
                        type: string
                -   name: fields
                    in: query
                    description: Comma-separated properties to provide in response
                    schema:
                        type: string
            responses:
                "200":
                    description: Success
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Topic'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
        delete:
            tags:
                - topic
            summary: Deletes a Topic
            description: This operation deletes a Topic entity.
            operationId: deleteTopic
            parameters:
                -   name: id
                    in: path
                    description: Identifier of the Topic
                    required: true
                    schema:
                        type: string
            responses:
                "204":
                    description: Deleted
                    content: { }
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
    /topic/{topicId}/hub:
        get:
            tags:
                - hub
            summary: List or find Hub objects
            description: This operation list or find Hub entities
            operationId: listHub
            parameters:
                -   name: topicId
                    in: path
                    description: Identifier of the parent Topic entity
                    required: true
                    schema:
                        type: string
                -   name: fields
                    in: query
                    description: Comma-separated properties to be provided in response
                    schema:
                        type: string
                -   name: offset
                    in: query
                    description: Requested index for start of resources to be provided in response
                    schema:
                        type: integer
                -   name: limit
                    in: query
                    description: Requested number of resources to be provided in response
                    schema:
                        type: integer
            responses:
                "200":
                    description: Success
                    headers:
                        X-Total-Count:
                            description: Total number of items matching criteria
                            schema:
                                type: integer
                        X-Result-Count:
                            description: Actual number of items returned in the response body
                            schema:
                                type: integer
                    content:
                        application/json;charset=utf-8:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Hub'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
        post:
            tags:
                - hub
            summary: Creates a Hub
            description: This operation creates a Hub entity.
            operationId: createHub
            parameters:
                -   name: topicId
                    in: path
                    description: Identifier of the parent Topic entity
                    required: true
                    schema:
                        type: string
            requestBody:
                description: The Hub to be created
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/Hub_Create'
                required: true
            responses:
                "201":
                    description: Created
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Hub'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: hub
    /topic/{topicId}/hub/{id}:
        get:
            tags:
                - hub
            summary: Retrieves a Hub by ID
            description: This operation retrieves a Hub entity. Attribute selection is enabled
                for all first level attributes.
            operationId: retrieveHub
            parameters:
                -   name: topicId
                    in: path
                    description: Identifier of the parent Topic entity
                    required: true
                    schema:
                        type: string
                -   name: id
                    in: path
                    description: Identifier of the Hub
                    required: true
                    schema:
                        type: string
                -   name: fields
                    in: query
                    description: Comma-separated properties to provide in response
                    schema:
                        type: string
            responses:
                "200":
                    description: Success
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Hub'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
        delete:
            tags:
                - hub
            summary: Deletes a Hub
            description: This operation deletes a Hub entity.
            operationId: deleteHub
            parameters:
                -   name: topicId
                    in: path
                    description: Identifier of the parent Topic entity
                    required: true
                    schema:
                        type: string
                -   name: id
                    in: path
                    description: Identifier of the Hub
                    required: true
                    schema:
                        type: string
            responses:
                "204":
                    description: Deleted
                    content: { }
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
    /hub:
        post:
            tags:
                - events subscription
            summary: Register a listener
            description: "Sets the communication endpoint address the service instance must\
        \ use to deliver information about its health state, execution state, failures\
        \ and metrics."
            operationId: registerListener
            requestBody:
                description: Data containing the callback endpoint to deliver the information
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/EventSubscriptionInput'
                required: true
            responses:
                "201":
                    description: Subscribed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /hub/{id}:
        delete:
            tags:
                - events subscription
            summary: Unregister a listener
            description: "Resets the communication endpoint address the service instance\
        \ must use to deliver information about its health state, execution state,\
        \ failures and metrics."
            operationId: unregisterListener
            parameters:
                -   name: id
                    in: path
                    description: The id of the registered listener
                    required: true
                    schema:
                        type: string
            responses:
                "204":
                    description: Deleted
                    content: { }
                "400":
                    description: Bad request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
    /listener/aiContractSpecificationCreateEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity AiContractSpecificationCreateEvent
            description: Example of a client listener for receiving the notification AiContractSpecificationCreateEvent
            operationId: listenToAiContractSpecificationCreateEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/AiContractSpecificationCreateEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/aiContractSpecificationDeleteEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity AiContractSpecificationDeleteEvent
            description: Example of a client listener for receiving the notification AiContractSpecificationDeleteEvent
            operationId: listenToAiContractSpecificationDeleteEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/AiContractSpecificationDeleteEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/aiContractSpecificationAttributeValueChangeEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity AiContractSpecificationAttributeValueChangeEvent
            description: Example of a client listener for receiving the notification AiContractSpecificationAttributeValueChangeEvent
            operationId: listenToAiContractSpecificationAttributeValueChangeEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/AiContractSpecificationAttributeValueChangeEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/aiModelCreateEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity AiModelCreateEvent
            description: Example of a client listener for receiving the notification AiModelCreateEvent
            operationId: listenToAiModelCreateEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/AiModelCreateEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/aiModelAttributeValueChangeEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity AiModelAttributeValueChangeEvent
            description: Example of a client listener for receiving the notification AiModelAttributeValueChangeEvent
            operationId: listenToAiModelAttributeValueChangeEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/AiModelAttributeValueChangeEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/aiModelStateChangeEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity AiModelStateChangeEvent
            description: Example of a client listener for receiving the notification AiModelStateChangeEvent
            operationId: listenToAiModelStateChangeEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/AiModelStateChangeEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/aiModelDeleteEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity AiModelDeleteEvent
            description: Example of a client listener for receiving the notification AiModelDeleteEvent
            operationId: listenToAiModelDeleteEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/AiModelDeleteEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/aiModelSpecificationCreateEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity AiModelSpecificationCreateEvent
            description: Example of a client listener for receiving the notification AiModelSpecificationCreateEvent
            operationId: listenToAiModelSpecificationCreateEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/AiModelSpecificationCreateEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/aiModelSpecificationDeleteEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity AiModelSpecificationDeleteEvent
            description: Example of a client listener for receiving the notification AiModelSpecificationDeleteEvent
            operationId: listenToAiModelSpecificationDeleteEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/AiModelSpecificationDeleteEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/aiModelSpecificationAttributeValueChangeEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity AiModelSpecificationAttributeValueChangeEvent
            description: Example of a client listener for receiving the notification AiModelSpecificationAttributeValueChangeEvent
            operationId: listenToAiModelSpecificationAttributeValueChangeEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/AiModelSpecificationAttributeValueChangeEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/aiContractCreateEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity AiContractCreateEvent
            description: Example of a client listener for receiving the notification AiContractCreateEvent
            operationId: listenToAiContractCreateEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/AiContractCreateEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/aiContractAttributeValueChangeEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity AiContractAttributeValueChangeEvent
            description: Example of a client listener for receiving the notification AiContractAttributeValueChangeEvent
            operationId: listenToAiContractAttributeValueChangeEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/AiContractAttributeValueChangeEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/aiContractStateChangeEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity AiContractStateChangeEvent
            description: Example of a client listener for receiving the notification AiContractStateChangeEvent
            operationId: listenToAiContractStateChangeEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/AiContractStateChangeEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/aiContractDeleteEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity AiContractDeleteEvent
            description: Example of a client listener for receiving the notification AiContractDeleteEvent
            operationId: listenToAiContractDeleteEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/AiContractDeleteEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/aiContractViolationCreateEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity AiContractViolationCreateEvent
            description: Example of a client listener for receiving the notification AiContractViolationCreateEvent
            operationId: listenToAiContractViolationCreateEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/AiContractViolationCreateEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/aiContractViolationAttributeValueChangeEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity AiContractViolationAttributeValueChangeEvent
            description: Example of a client listener for receiving the notification AiContractViolationAttributeValueChangeEvent
            operationId: listenToAiContractViolationAttributeValueChangeEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/AiContractViolationAttributeValueChangeEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/aiContractViolationDeleteEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity AiContractViolationDeleteEvent
            description: Example of a client listener for receiving the notification AiContractViolationDeleteEvent
            operationId: listenToAiContractViolationDeleteEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/AiContractViolationDeleteEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/alarmCreateEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity AlarmCreateEvent
            description: Example of a client listener for receiving the notification AlarmCreateEvent
            operationId: listenToAlarmCreateEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/AlarmCreateEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/alarmAttributeValueChangeEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity AlarmAttributeValueChangeEvent
            description: Example of a client listener for receiving the notification AlarmAttributeValueChangeEvent
            operationId: listenToAlarmAttributeValueChangeEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/AlarmAttributeValueChangeEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/alarmStateChangeEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity AlarmStateChangeEvent
            description: Example of a client listener for receiving the notification AlarmStateChangeEvent
            operationId: listenToAlarmStateChangeEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/AlarmStateChangeEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/alarmDeleteEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity AlarmDeleteEvent
            description: Example of a client listener for receiving the notification AlarmDeleteEvent
            operationId: listenToAlarmDeleteEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/AlarmDeleteEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/ruleCreateEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity RuleCreateEvent
            description: Example of a client listener for receiving the notification RuleCreateEvent
            operationId: listenToRuleCreateEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/RuleCreateEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/ruleAttributeValueChangeEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity RuleAttributeValueChangeEvent
            description: Example of a client listener for receiving the notification RuleAttributeValueChangeEvent
            operationId: listenToRuleAttributeValueChangeEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/RuleAttributeValueChangeEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/ruleStateChangeEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity RuleStateChangeEvent
            description: Example of a client listener for receiving the notification RuleStateChangeEvent
            operationId: listenToRuleStateChangeEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/RuleStateChangeEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/ruleDeleteEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity RuleDeleteEvent
            description: Example of a client listener for receiving the notification RuleDeleteEvent
            operationId: listenToRuleDeleteEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/RuleDeleteEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/eventCreateEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity EventCreateEvent
            description: Example of a client listener for receiving the notification EventCreateEvent
            operationId: listenToEventCreateEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/EventCreateEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/monitorCreateEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity MonitorCreateEvent
            description: Example of a client listener for receiving the notification MonitorCreateEvent
            operationId: listenToMonitorCreateEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/MonitorCreateEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/monitorAttributeValueChangeEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity MonitorAttributeValueChangeEvent
            description: Example of a client listener for receiving the notification MonitorAttributeValueChangeEvent
            operationId: listenToMonitorAttributeValueChangeEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/MonitorAttributeValueChangeEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/monitorStateChangeEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity MonitorStateChangeEvent
            description: Example of a client listener for receiving the notification MonitorStateChangeEvent
            operationId: listenToMonitorStateChangeEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/MonitorStateChangeEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/monitorDeleteEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity MonitorDeleteEvent
            description: Example of a client listener for receiving the notification MonitorDeleteEvent
            operationId: listenToMonitorDeleteEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/MonitorDeleteEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/topicCreateEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity TopicCreateEvent
            description: Example of a client listener for receiving the notification TopicCreateEvent
            operationId: listenToTopicCreateEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/TopicCreateEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/topicChangeEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity TopicChangeEvent
            description: Example of a client listener for receiving the notification TopicChangeEvent
            operationId: listenToTopicChangeEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/TopicChangeEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/topicDeleteEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity TopicDeleteEvent
            description: Example of a client listener for receiving the notification TopicDeleteEvent
            operationId: listenToTopicDeleteEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/TopicDeleteEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
components:
    schemas:
        Addressable:
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
            description: Base schema for adressable entities
        AffectedService:
            type: object
            properties:
                id:
                    type: string
                href:
                    type: string
                    description: Provides the identifier of the service affected by the alarm
        AiContract:
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                approvalDate:
                    type: string
                    format: date-time
                approved:
                    type: boolean
                description:
                    type: string
                    description: Description of the Service Level Agreement (SLA)
                name:
                    type: string
                    description: Name of the Service Level Agreement (SLA)
                state:
                    type: string
                    description: State of the Service Level Agreement (SLA)
                version:
                    type: string
                    description: Version of the Service Level Agreement (SLA)
                aiContractSpecification:
                    $ref: '#/components/schemas/EntityRef'
                aiModel:
                    $ref: '#/components/schemas/EntityRef'
                characteristic:
                    type: array
                    items:
                        $ref: '#/components/schemas/Characteristic'
                relatedParty:
                    type: array
                    items:
                        $ref: '#/components/schemas/RelatedParty'
                rule:
                    type: array
                    items:
                        $ref: '#/components/schemas/Rule'
                template:
                    $ref: '#/components/schemas/TemplateRef'
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: "An Ai Contract represents a contract or arrangement, either written\
        \ or verbal and sometimes enforceable by law, such as a service level agreement\
        \ or a customer price agreement. An agreement involves a number of other business\
        \ entities, such as products, services, and resources and/or their specifications."
        AiContract_Create:
            required:
                - aiContractSpecification
                - aiModel
                - relatedParty
                - state
            type: object
            properties:
                approvalDate:
                    type: string
                    format: date-time
                approved:
                    type: boolean
                description:
                    type: string
                    description: Description of the Service Level Agreement (SLA)
                name:
                    type: string
                    description: Name of the Service Level Agreement (SLA)
                state:
                    type: string
                    description: State of the Service Level Agreement (SLA)
                version:
                    type: string
                    description: Version of the Service Level Agreement (SLA)
                aiContractSpecification:
                    $ref: '#/components/schemas/EntityRef'
                aiModel:
                    $ref: '#/components/schemas/EntityRef'
                characteristic:
                    type: array
                    items:
                        $ref: '#/components/schemas/Characteristic'
                relatedParty:
                    minItems: 1
                    type: array
                    items:
                        $ref: '#/components/schemas/RelatedParty'
                rule:
                    type: array
                    items:
                        $ref: '#/components/schemas/Rule'
                template:
                    $ref: '#/components/schemas/TemplateRef'
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: |-
                An Ai Contract represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications.
                Skipped properties: id,href
        AiContract_Update:
            type: object
            properties:
                approvalDate:
                    type: string
                    format: date-time
                approved:
                    type: boolean
                description:
                    type: string
                    description: Description of the Service Level Agreement (SLA)
                name:
                    type: string
                    description: Name of the Service Level Agreement (SLA)
                state:
                    type: string
                    description: State of the Service Level Agreement (SLA)
                version:
                    type: string
                    description: Version of the Service Level Agreement (SLA)
                aiContractSpecification:
                    $ref: '#/components/schemas/EntityRef'
                aiModel:
                    $ref: '#/components/schemas/EntityRef'
                characteristic:
                    type: array
                    items:
                        $ref: '#/components/schemas/Characteristic'
                relatedParty:
                    type: array
                    items:
                        $ref: '#/components/schemas/RelatedParty'
                rule:
                    type: array
                    items:
                        $ref: '#/components/schemas/Rule'
                template:
                    $ref: '#/components/schemas/TemplateRef'
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: |-
                An Ai Contract represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications.
                Skipped properties: id,href
        AiContractSpecification:
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                description:
                    type: string
                    description: Description of the specification
                isBundle:
                    type: boolean
                    description: "isBundle determines whether specification represents a single\
            \ specification (false), or a bundle of specifications (true)."
                lastUpdate:
                    type: string
                    description: Date and time of the last update of the specification
                    format: date-time
                lifecycleStatus:
                    type: string
                    description: Used to indicate the current lifecycle status of this catalog
                        item
                name:
                    type: string
                    description: Name given to the specification
                version:
                    type: string
                    description: specification version
                attachment:
                    type: array
                    description: "Attachments that may be of relevance to this specification,\
            \ such as picture, document, media"
                    items:
                        $ref: '#/components/schemas/AttachmentRefOrValue'
                constraint:
                    type: array
                    description: This is a list of constraint references applied to this specification
                    items:
                        $ref: '#/components/schemas/ConstraintRef'
                entitySpecRelationship:
                    type: array
                    description: Relationship to another specification
                    items:
                        $ref: '#/components/schemas/EntitySpecificationRelationship'
                relatedParty:
                    type: array
                    description: Parties who manage or otherwise have an interest in this specification
                    items:
                        $ref: '#/components/schemas/RelatedParty'
                specCharacteristic:
                    type: array
                    description: List of characteristics that the entity can take
                    items:
                        $ref: '#/components/schemas/CharacteristicSpecification'
                targetEntitySchema:
                    $ref: '#/components/schemas/TargetEntitySchema'
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: A template of an agreement that can be used when establishing partnerships
        AiContractSpecification_Create:
            required:
                - name
            type: object
            properties:
                description:
                    type: string
                    description: Description of the specification
                isBundle:
                    type: boolean
                    description: "isBundle determines whether specification represents a single\
            \ specification (false), or a bundle of specifications (true)."
                lastUpdate:
                    type: string
                    description: Date and time of the last update of the specification
                    format: date-time
                lifecycleStatus:
                    type: string
                    description: Used to indicate the current lifecycle status of this catalog
                        item
                name:
                    type: string
                    description: Name given to the specification
                version:
                    type: string
                    description: specification version
                attachment:
                    type: array
                    description: "Attachments that may be of relevance to this specification,\
            \ such as picture, document, media"
                    items:
                        $ref: '#/components/schemas/AttachmentRefOrValue'
                constraint:
                    type: array
                    description: This is a list of constraint references applied to this specification
                    items:
                        $ref: '#/components/schemas/ConstraintRef'
                entitySpecRelationship:
                    type: array
                    description: Relationship to another specification
                    items:
                        $ref: '#/components/schemas/EntitySpecificationRelationship'
                relatedParty:
                    type: array
                    description: Parties who manage or otherwise have an interest in this specification
                    items:
                        $ref: '#/components/schemas/RelatedParty'
                specCharacteristic:
                    type: array
                    description: List of characteristics that the entity can take
                    items:
                        $ref: '#/components/schemas/CharacteristicSpecification'
                targetEntitySchema:
                    $ref: '#/components/schemas/TargetEntitySchema'
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: |-
                A template of an agreement that can be used when establishing partnerships
                Skipped properties: id,href
        AiContractSpecification_Update:
            type: object
            properties:
                description:
                    type: string
                    description: Description of the specification
                isBundle:
                    type: boolean
                    description: "isBundle determines whether specification represents a single\
            \ specification (false), or a bundle of specifications (true)."
                lifecycleStatus:
                    type: string
                    description: Used to indicate the current lifecycle status of this catalog
                        item
                name:
                    type: string
                    description: Name given to the specification
                version:
                    type: string
                    description: specification version
                attachment:
                    type: array
                    description: "Attachments that may be of relevance to this specification,\
            \ such as picture, document, media"
                    items:
                        $ref: '#/components/schemas/AttachmentRefOrValue'
                constraint:
                    type: array
                    description: This is a list of constraint references applied to this specification
                    items:
                        $ref: '#/components/schemas/ConstraintRef'
                entitySpecRelationship:
                    type: array
                    description: Relationship to another specification
                    items:
                        $ref: '#/components/schemas/EntitySpecificationRelationship'
                relatedParty:
                    type: array
                    description: Parties who manage or otherwise have an interest in this specification
                    items:
                        $ref: '#/components/schemas/RelatedParty'
                specCharacteristic:
                    type: array
                    description: List of characteristics that the entity can take
                    items:
                        $ref: '#/components/schemas/CharacteristicSpecification'
                targetEntitySchema:
                    $ref: '#/components/schemas/TargetEntitySchema'
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: |-
                A template of an agreement that can be used when establishing partnerships
                Skipped properties: id,href,lastUpdate
        AiContractViolation:
            type: object
            properties:
                id:
                    type: string
                href:
                    type: string
                date:
                    type: string
                    format: date-time
                aiContract:
                    $ref: '#/components/schemas/EntityRef'
                relatedParty:
                    type: array
                    items:
                        $ref: '#/components/schemas/RelatedParty'
                violation:
                    $ref: '#/components/schemas/Violation'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
        AiContractViolation_Create:
            required:
                - aiContract
                - violation
            type: object
            properties:
                date:
                    type: string
                    format: date-time
                aiContract:
                    $ref: '#/components/schemas/EntityRef'
                relatedParty:
                    type: array
                    items:
                        $ref: '#/components/schemas/RelatedParty'
                violation:
                    $ref: '#/components/schemas/Violation'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: |2-
            
              Skipped properties: id,href
        AiModel:
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                category:
                    type: string
                    description: Is it a customer facing or resource facing service
                description:
                    type: string
                    description: Free-text description of the service
                endDate:
                    type: string
                    description: Date when the service ends
                    format: date-time
                hasStarted:
                    type: boolean
                    description: "If TRUE, this Service has already been started"
                isBundle:
                    type: boolean
                    description: "If true, the service is a ServiceBundle which regroup a service\
            \ hierachy. If false, the service is a 'atomic' service (hierachy leaf)."
                isServiceEnabled:
                    type: boolean
                    description: "If FALSE and hasStarted is FALSE, this particular Service\
            \ has NOT been enabled for use - if FALSE and hasStarted is TRUE then\
            \ the service has failed "
                isStateful:
                    type: boolean
                    description: "If TRUE, this Service can be changed without affecting any\
            \ other services"
                name:
                    type: string
                    description: Name of the service
                serviceDate:
                    type: string
                    description: Date when the service was created (whatever its status).
                serviceType:
                    type: string
                    description: Business type of the service
                startDate:
                    type: string
                    description: Date when the service starts
                    format: date-time
                startMode:
                    type: string
                    description: "This attribute is an enumerated integer that indicates how\
            \ the Service is started, such as: 0: Unknown; 1: Automatically by the\
            \ managed environment; 2: Automatically by the owning device; 3: Manually\
            \ by the Provider of the Service; 4: Manually by a Customer of the Provider;\
            \ 5: Any of the above"
                aiModelSpecification:
                    $ref: '#/components/schemas/AiModelSpecification'
                feature:
                    type: array
                    description: 'A list of feature associated with this service '
                    items:
                        $ref: '#/components/schemas/Feature'
                gpu:
                    $ref: '#/components/schemas/ResourceRef'
                note:
                    type: array
                    description: A list of notes made on this service
                    items:
                        $ref: '#/components/schemas/Note'
                place:
                    type: array
                    description: "A list of places (Place [*]). Used to define a place useful\
            \ for the service (for example a geographical place whre the service is\
            \ installed)"
                    items:
                        $ref: '#/components/schemas/RelatedPlaceRefOrValue'
                relatedEntity:
                    type: array
                    description: 'A list of related  entity in relationship with this service '
                    items:
                        $ref: '#/components/schemas/RelatedEntityRefOrValue'
                relatedParty:
                    type: array
                    description: "A list of related party references (RelatedParty [*]). A related\
            \ party defines party or party role linked to a specific entity"
                    items:
                        $ref: '#/components/schemas/RelatedParty'
                serviceCharacteristic:
                    type: array
                    description: "A list of characteristics that characterize this service (ServiceCharacteristic\
            \ [*]) "
                    items:
                        $ref: '#/components/schemas/Characteristic'
                serviceOrderItem:
                    type: array
                    description: A list of service order items related to this service
                    items:
                        $ref: '#/components/schemas/RelatedServiceOrderItem'
                serviceRelationship:
                    type: array
                    description: "A list of service relationships (ServiceRelationship [*]).\
            \ Describes links with other service(s) in the inventory."
                    items:
                        $ref: '#/components/schemas/ServiceRelationship'
                serviceSpecification:
                    $ref: '#/components/schemas/ServiceSpecificationRef'
                software:
                    type: array
                    description: Reference to Software in Inventory
                    items:
                        $ref: '#/components/schemas/SoftwareRef'
                state:
                    $ref: '#/components/schemas/ServiceStateType'
                supportingResource:
                    type: array
                    description: "A list of supporting resources (SupportingResource [*]).Note:\
            \ only Service of type RFS can be associated with Resources"
                    items:
                        $ref: '#/components/schemas/ResourceRef'
                supportingService:
                    type: array
                    description: "A list of supporting services (SupportingService [*]). A collection\
            \ of services that support this service (bundling, link CFS to RFS)"
                    items:
                        $ref: '#/components/schemas/ServiceRefOrValue'
                trainingData:
                    $ref: '#/components/schemas/EntityRef'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: AiModel is a base class for defining the AiModel hierarchy
        AiModel_Create:
            required:
                - aiModelSpecification
                - software
                - state
            type: object
            properties:
                category:
                    type: string
                    description: Is it a customer facing or resource facing service
                description:
                    type: string
                    description: Free-text description of the service
                endDate:
                    type: string
                    description: Date when the service ends
                    format: date-time
                hasStarted:
                    type: boolean
                    description: "If TRUE, this Service has already been started"
                isBundle:
                    type: boolean
                    description: "If true, the service is a ServiceBundle which regroup a service\
            \ hierachy. If false, the service is a 'atomic' service (hierachy leaf)."
                isServiceEnabled:
                    type: boolean
                    description: "If FALSE and hasStarted is FALSE, this particular Service\
            \ has NOT been enabled for use - if FALSE and hasStarted is TRUE then\
            \ the service has failed "
                isStateful:
                    type: boolean
                    description: "If TRUE, this Service can be changed without affecting any\
            \ other services"
                name:
                    type: string
                    description: Name of the service
                serviceDate:
                    type: string
                    description: Date when the service was created (whatever its status).
                serviceType:
                    type: string
                    description: Business type of the service
                startDate:
                    type: string
                    description: Date when the service starts
                    format: date-time
                startMode:
                    type: string
                    description: "This attribute is an enumerated integer that indicates how\
            \ the Service is started, such as: 0: Unknown; 1: Automatically by the\
            \ managed environment; 2: Automatically by the owning device; 3: Manually\
            \ by the Provider of the Service; 4: Manually by a Customer of the Provider;\
            \ 5: Any of the above"
                aiModelSpecification:
                    $ref: '#/components/schemas/AiModelSpecification'
                feature:
                    type: array
                    description: 'A list of feature associated with this service '
                    items:
                        $ref: '#/components/schemas/Feature'
                gpu:
                    $ref: '#/components/schemas/ResourceRef'
                note:
                    type: array
                    description: A list of notes made on this service
                    items:
                        $ref: '#/components/schemas/Note'
                place:
                    type: array
                    description: "A list of places (Place [*]). Used to define a place useful\
            \ for the service (for example a geographical place whre the service is\
            \ installed)"
                    items:
                        $ref: '#/components/schemas/RelatedPlaceRefOrValue'
                relatedEntity:
                    type: array
                    description: 'A list of related  entity in relationship with this service '
                    items:
                        $ref: '#/components/schemas/RelatedEntityRefOrValue'
                relatedParty:
                    type: array
                    description: "A list of related party references (RelatedParty [*]). A related\
            \ party defines party or party role linked to a specific entity"
                    items:
                        $ref: '#/components/schemas/RelatedParty'
                serviceCharacteristic:
                    type: array
                    description: "A list of characteristics that characterize this service (ServiceCharacteristic\
            \ [*]) "
                    items:
                        $ref: '#/components/schemas/Characteristic'
                serviceOrderItem:
                    type: array
                    description: A list of service order items related to this service
                    items:
                        $ref: '#/components/schemas/RelatedServiceOrderItem'
                serviceRelationship:
                    type: array
                    description: "A list of service relationships (ServiceRelationship [*]).\
            \ Describes links with other service(s) in the inventory."
                    items:
                        $ref: '#/components/schemas/ServiceRelationship'
                serviceSpecification:
                    $ref: '#/components/schemas/ServiceSpecificationRef'
                software:
                    minItems: 1
                    type: array
                    description: Reference to Software in Inventory
                    items:
                        $ref: '#/components/schemas/SoftwareRef'
                state:
                    $ref: '#/components/schemas/ServiceStateType'
                supportingResource:
                    type: array
                    description: "A list of supporting resources (SupportingResource [*]).Note:\
            \ only Service of type RFS can be associated with Resources"
                    items:
                        $ref: '#/components/schemas/ResourceRef'
                supportingService:
                    type: array
                    description: "A list of supporting services (SupportingService [*]). A collection\
            \ of services that support this service (bundling, link CFS to RFS)"
                    items:
                        $ref: '#/components/schemas/ServiceRefOrValue'
                trainingData:
                    $ref: '#/components/schemas/EntityRef'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: |-
                AiModel is a base class for defining the AiModel hierarchy
                Skipped properties: id,href
        AiModel_Update:
            type: object
            properties:
                category:
                    type: string
                    description: Is it a customer facing or resource facing service
                description:
                    type: string
                    description: Free-text description of the service
                endDate:
                    type: string
                    description: Date when the service ends
                    format: date-time
                hasStarted:
                    type: boolean
                    description: "If TRUE, this Service has already been started"
                isBundle:
                    type: boolean
                    description: "If true, the service is a ServiceBundle which regroup a service\
            \ hierachy. If false, the service is a 'atomic' service (hierachy leaf)."
                isServiceEnabled:
                    type: boolean
                    description: "If FALSE and hasStarted is FALSE, this particular Service\
            \ has NOT been enabled for use - if FALSE and hasStarted is TRUE then\
            \ the service has failed "
                isStateful:
                    type: boolean
                    description: "If TRUE, this Service can be changed without affecting any\
            \ other services"
                name:
                    type: string
                    description: Name of the service
                serviceType:
                    type: string
                    description: Business type of the service
                startDate:
                    type: string
                    description: Date when the service starts
                    format: date-time
                startMode:
                    type: string
                    description: "This attribute is an enumerated integer that indicates how\
            \ the Service is started, such as: 0: Unknown; 1: Automatically by the\
            \ managed environment; 2: Automatically by the owning device; 3: Manually\
            \ by the Provider of the Service; 4: Manually by a Customer of the Provider;\
            \ 5: Any of the above"
                aiModelSpecification:
                    $ref: '#/components/schemas/AiModelSpecification'
                feature:
                    type: array
                    description: 'A list of feature associated with this service '
                    items:
                        $ref: '#/components/schemas/Feature'
                gpu:
                    $ref: '#/components/schemas/ResourceRef'
                note:
                    type: array
                    description: A list of notes made on this service
                    items:
                        $ref: '#/components/schemas/Note'
                place:
                    type: array
                    description: "A list of places (Place [*]). Used to define a place useful\
            \ for the service (for example a geographical place whre the service is\
            \ installed)"
                    items:
                        $ref: '#/components/schemas/RelatedPlaceRefOrValue'
                relatedEntity:
                    type: array
                    description: 'A list of related  entity in relationship with this service '
                    items:
                        $ref: '#/components/schemas/RelatedEntityRefOrValue'
                relatedParty:
                    type: array
                    description: "A list of related party references (RelatedParty [*]). A related\
            \ party defines party or party role linked to a specific entity"
                    items:
                        $ref: '#/components/schemas/RelatedParty'
                serviceCharacteristic:
                    type: array
                    description: "A list of characteristics that characterize this service (ServiceCharacteristic\
            \ [*]) "
                    items:
                        $ref: '#/components/schemas/Characteristic'
                serviceOrderItem:
                    type: array
                    description: A list of service order items related to this service
                    items:
                        $ref: '#/components/schemas/RelatedServiceOrderItem'
                serviceRelationship:
                    type: array
                    description: "A list of service relationships (ServiceRelationship [*]).\
            \ Describes links with other service(s) in the inventory."
                    items:
                        $ref: '#/components/schemas/ServiceRelationship'
                serviceSpecification:
                    $ref: '#/components/schemas/ServiceSpecificationRef'
                software:
                    type: array
                    description: Reference to Software in Inventory
                    items:
                        $ref: '#/components/schemas/SoftwareRef'
                state:
                    $ref: '#/components/schemas/ServiceStateType'
                supportingResource:
                    type: array
                    description: "A list of supporting resources (SupportingResource [*]).Note:\
            \ only Service of type RFS can be associated with Resources"
                    items:
                        $ref: '#/components/schemas/ResourceRef'
                supportingService:
                    type: array
                    description: "A list of supporting services (SupportingService [*]). A collection\
            \ of services that support this service (bundling, link CFS to RFS)"
                    items:
                        $ref: '#/components/schemas/ServiceRefOrValue'
                trainingData:
                    $ref: '#/components/schemas/EntityRef'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: |-
                AiModel is a base class for defining the AiModel hierarchy
                Skipped properties: id,href,serviceDate
        AiModelSpecification:
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                deploymentRecord:
                    type: object
                    properties: { }
                description:
                    type: string
                    description: Description of the specification
                inheritedModel:
                    type: object
                    properties: { }
                isBundle:
                    type: boolean
                    description: "isBundle determines whether specification represents a single\
            \ specification (false), or a bundle of specifications (true)."
                lastUpdate:
                    type: string
                    description: Date and time of the last update of the specification
                    format: date-time
                lifecycleStatus:
                    type: string
                    description: Used to indicate the current lifecycle status of this catalog
                        item
                modelContractVersionHistory:
                    type: object
                    properties: { }
                modelDataSheet:
                    type: object
                    properties: { }
                modelEvaluationData:
                    type: object
                    properties: { }
                modelSpecificationHistory:
                    type: object
                    properties: { }
                modelTrainingData:
                    type: object
                    properties: { }
                name:
                    type: string
                    description: Name given to the specification
                version:
                    type: string
                    description: specification version
                attachment:
                    type: array
                    description: "Attachments that may be of relevance to this specification,\
            \ such as picture, document, media"
                    items:
                        $ref: '#/components/schemas/AttachmentRefOrValue'
                constraint:
                    type: array
                    description: This is a list of constraint references applied to this specification
                    items:
                        $ref: '#/components/schemas/ConstraintRef'
                entitySpecRelationship:
                    type: array
                    description: Relationship to another specification
                    items:
                        $ref: '#/components/schemas/EntitySpecificationRelationship'
                featureSpecification:
                    type: array
                    description: A list of Features for this specification.
                    items:
                        $ref: '#/components/schemas/FeatureSpecification'
                relatedParty:
                    type: array
                    description: Parties who manage or otherwise have an interest in this specification
                    items:
                        $ref: '#/components/schemas/RelatedParty'
                resourceSpecification:
                    type: array
                    description: "A list of resource specification references (ResourceSpecificationRef\
            \ [*]). The ResourceSpecification is required for a service specification\
            \ with type ResourceFacingServiceSpecification (RFSS)."
                    items:
                        $ref: '#/components/schemas/ResourceSpecificationRef'
                serviceLevelSpecification:
                    type: array
                    description: "A list of service level specifications related to this service\
            \ specification, and which will need to be satisifiable for corresponding\
            \ service instances; e.g. Gold, Platinum"
                    items:
                        $ref: '#/components/schemas/ServiceLevelSpecificationRef'
                serviceSpecRelationship:
                    type: array
                    description: "A list of service specifications related to this specification,\
            \ e.g. migration, substitution, dependency or exclusivity relationship"
                    items:
                        $ref: '#/components/schemas/ServiceSpecRelationship'
                specCharacteristic:
                    type: array
                    description: List of characteristics that the entity can take
                    items:
                        $ref: '#/components/schemas/CharacteristicSpecification'
                targetEntitySchema:
                    $ref: '#/components/schemas/TargetEntitySchema'
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: |-
                AiModelSpecification is a class that offers characteristics to describe a type of service.
                Functionally, it acts as a template by which Services may be instantiated. By sharing the same  specification, these services would therefore share the same set of characteristics.
        AiModelSpecification_Create:
            required:
                - name
            type: object
            properties:
                deploymentRecord:
                    type: object
                    properties: { }
                description:
                    type: string
                    description: Description of the specification
                inheritedModel:
                    type: object
                    properties: { }
                isBundle:
                    type: boolean
                    description: "isBundle determines whether specification represents a single\
            \ specification (false), or a bundle of specifications (true)."
                lastUpdate:
                    type: string
                    description: Date and time of the last update of the specification
                    format: date-time
                lifecycleStatus:
                    type: string
                    description: Used to indicate the current lifecycle status of this catalog
                        item
                modelContractVersionHistory:
                    type: object
                    properties: { }
                modelDataSheet:
                    type: object
                    properties: { }
                modelEvaluationData:
                    type: object
                    properties: { }
                modelSpecificationHistory:
                    type: object
                    properties: { }
                modelTrainingData:
                    type: object
                    properties: { }
                name:
                    type: string
                    description: Name given to the specification
                version:
                    type: string
                    description: specification version
                attachment:
                    type: array
                    description: "Attachments that may be of relevance to this specification,\
            \ such as picture, document, media"
                    items:
                        $ref: '#/components/schemas/AttachmentRefOrValue'
                constraint:
                    type: array
                    description: This is a list of constraint references applied to this specification
                    items:
                        $ref: '#/components/schemas/ConstraintRef'
                entitySpecRelationship:
                    type: array
                    description: Relationship to another specification
                    items:
                        $ref: '#/components/schemas/EntitySpecificationRelationship'
                featureSpecification:
                    type: array
                    description: A list of Features for this specification.
                    items:
                        $ref: '#/components/schemas/FeatureSpecification'
                relatedParty:
                    type: array
                    description: Parties who manage or otherwise have an interest in this specification
                    items:
                        $ref: '#/components/schemas/RelatedParty'
                resourceSpecification:
                    type: array
                    description: "A list of resource specification references (ResourceSpecificationRef\
            \ [*]). The ResourceSpecification is required for a service specification\
            \ with type ResourceFacingServiceSpecification (RFSS)."
                    items:
                        $ref: '#/components/schemas/ResourceSpecificationRef'
                serviceLevelSpecification:
                    type: array
                    description: "A list of service level specifications related to this service\
            \ specification, and which will need to be satisifiable for corresponding\
            \ service instances; e.g. Gold, Platinum"
                    items:
                        $ref: '#/components/schemas/ServiceLevelSpecificationRef'
                serviceSpecRelationship:
                    type: array
                    description: "A list of service specifications related to this specification,\
            \ e.g. migration, substitution, dependency or exclusivity relationship"
                    items:
                        $ref: '#/components/schemas/ServiceSpecRelationship'
                specCharacteristic:
                    type: array
                    description: List of characteristics that the entity can take
                    items:
                        $ref: '#/components/schemas/CharacteristicSpecification'
                targetEntitySchema:
                    $ref: '#/components/schemas/TargetEntitySchema'
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: |-
                AiModelSpecification is a class that offers characteristics to describe a type of service.
                Functionally, it acts as a template by which Services may be instantiated. By sharing the same  specification, these services would therefore share the same set of characteristics.
                Skipped properties: id,href
        AiModelSpecification_Update:
            type: object
            properties:
                deploymentRecord:
                    type: object
                    properties: { }
                description:
                    type: string
                    description: Description of the specification
                inheritedModel:
                    type: object
                    properties: { }
                isBundle:
                    type: boolean
                    description: "isBundle determines whether specification represents a single\
            \ specification (false), or a bundle of specifications (true)."
                lifecycleStatus:
                    type: string
                    description: Used to indicate the current lifecycle status of this catalog
                        item
                modelContractVersionHistory:
                    type: object
                    properties: { }
                modelDataSheet:
                    type: object
                    properties: { }
                modelEvaluationData:
                    type: object
                    properties: { }
                modelSpecificationHistory:
                    type: object
                    properties: { }
                modelTrainingData:
                    type: object
                    properties: { }
                name:
                    type: string
                    description: Name given to the specification
                version:
                    type: string
                    description: specification version
                attachment:
                    type: array
                    description: "Attachments that may be of relevance to this specification,\
            \ such as picture, document, media"
                    items:
                        $ref: '#/components/schemas/AttachmentRefOrValue'
                constraint:
                    type: array
                    description: This is a list of constraint references applied to this specification
                    items:
                        $ref: '#/components/schemas/ConstraintRef'
                entitySpecRelationship:
                    type: array
                    description: Relationship to another specification
                    items:
                        $ref: '#/components/schemas/EntitySpecificationRelationship'
                featureSpecification:
                    type: array
                    description: A list of Features for this specification.
                    items:
                        $ref: '#/components/schemas/FeatureSpecification'
                relatedParty:
                    type: array
                    description: Parties who manage or otherwise have an interest in this specification
                    items:
                        $ref: '#/components/schemas/RelatedParty'
                resourceSpecification:
                    type: array
                    description: "A list of resource specification references (ResourceSpecificationRef\
            \ [*]). The ResourceSpecification is required for a service specification\
            \ with type ResourceFacingServiceSpecification (RFSS)."
                    items:
                        $ref: '#/components/schemas/ResourceSpecificationRef'
                serviceLevelSpecification:
                    type: array
                    description: "A list of service level specifications related to this service\
            \ specification, and which will need to be satisifiable for corresponding\
            \ service instances; e.g. Gold, Platinum"
                    items:
                        $ref: '#/components/schemas/ServiceLevelSpecificationRef'
                serviceSpecRelationship:
                    type: array
                    description: "A list of service specifications related to this specification,\
            \ e.g. migration, substitution, dependency or exclusivity relationship"
                    items:
                        $ref: '#/components/schemas/ServiceSpecRelationship'
                specCharacteristic:
                    type: array
                    description: List of characteristics that the entity can take
                    items:
                        $ref: '#/components/schemas/CharacteristicSpecification'
                targetEntitySchema:
                    $ref: '#/components/schemas/TargetEntitySchema'
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: |-
                AiModelSpecification is a class that offers characteristics to describe a type of service.
                Functionally, it acts as a template by which Services may be instantiated. By sharing the same  specification, these services would therefore share the same set of characteristics.
                Skipped properties: id,href,lastUpdate
        Alarm:
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                ackState:
                    type: string
                    description: Provides the Acknowledgement State of the alarm (unacknowledged
                        | acknowledged).
                ackSystemId:
                    type: string
                    description: "Provides the name of the system that last changed the ackState\
            \ of an alarm, i.e. acknowledged or unacknowledged the alarm."
                ackUserId:
                    type: string
                    description: "Provides the id of the user who has last changed the ack state\
            \ of the alarm, i.e. acknowledged or unacknowledged the alarm."
                alarmChangedTime:
                    type: string
                    description: "Indicates the last date and time when the alarm is changed\
            \ on the alarm-owning system. Any change to the alarm whether coming from\
            \ the alarmed resource, or triggered by a change from the client is changing\
            \ this time."
                    format: date-time
                alarmClearedTime:
                    type: string
                    description: 'Indicates the time (as a date + time) at which the alarm is
            cleared at the source. '
                    format: date-time
                alarmDetails:
                    type: string
                    description: Contains further information on the alarm.
                alarmEscalation:
                    type: boolean
                    description: 'Indicates if this alarm has been escalated or not. '
                alarmRaisedTime:
                    type: string
                    description: Indicates the time (as a date + time) at which the alarm occurred
                        at its source.
                    format: date-time
                alarmReportingTime:
                    type: string
                    description: |-
                        Indicates the time (as a date + time) at which the alarm was reported by the owning OSS. It might be different from the alarmRaisedTime. For instance, if the alarm list is maintained by an EMS, the alarmRaisedtime would be the time the alarm
                          was detected by the NE, while the alarmReportingTime would be the time this alarm was stored in the alarm list of the EMS.
                    format: date-time
                alarmedObjectType:
                    type: string
                    description: The type (class) of the managed object associated with the
                        event.
                clearSystemId:
                    type: string
                    description: 'Provides the id of the system where the user who invoked the
            alarmCleared operation is located. '
                clearUserId:
                    type: string
                    description: Provides the id of the user who invoked the alarmCleared operation
                externalAlarmId:
                    type: string
                    description: An identifier of the alarm in the source system.
                isRootCause:
                    type: boolean
                    description: 'Indicates whether the alarm is a root cause alarm.. '
                plannedOutageIndicator:
                    type: string
                    description: "Indicates that the Managed Object (related to this alarm)\
            \ is in planned outage (in planned maintenance, or out-of-service). "
                probableCause:
                    type: string
                    description: Provides the probable cause of the alarm. The values are consistent
                        with ITU-T Recommendation X.733 or 3GPP TS 32.111-2 Annex B.
                proposedRepairedActions:
                    type: string
                    description: "Indicates proposed repair actions, if known to the system\
            \ emitting the alarm."
                reportingSystemId:
                    type: string
                    description: Reporting system identity.
                serviceAffecting:
                    type: boolean
                    description: Indicates whether the alarm affects service or not.
                sourceSystemId:
                    type: string
                    description: Source system identity.
                specificProblem:
                    type: string
                    description: Provides more specific information about the alarm.
                state:
                    type: string
                    description: Defines the alarm state during its life cycle (raised | updated
                        | cleared).
                affectedService:
                    type: array
                    items:
                        $ref: '#/components/schemas/AffectedService'
                alarmType:
                    $ref: '#/components/schemas/AlarmType'
                alarmedObject:
                    $ref: '#/components/schemas/AlarmedObject'
                comment:
                    type: array
                    items:
                        $ref: '#/components/schemas/Comment'
                correlatedAlarm:
                    type: array
                    items:
                        $ref: '#/components/schemas/AlarmRef'
                crossedThresholdInformation:
                    $ref: '#/components/schemas/CrossedThresholdInformation'
                parentAlarm:
                    type: array
                    items:
                        $ref: '#/components/schemas/AlarmRef'
                perceivedSeverity:
                    $ref: '#/components/schemas/PerceivedSeverity'
                place:
                    type: array
                    items:
                        $ref: '#/components/schemas/RelatedPlaceRefOrValue'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: This resource represents an alarm supporting the information model
                defined in ITU-T X.733.
        Alarm_Create:
            required:
                - alarmRaisedTime
                - alarmType
                - alarmedObject
                - perceivedSeverity
                - probableCause
                - sourceSystemId
                - state
            type: object
            properties:
                ackState:
                    type: string
                    description: Provides the Acknowledgement State of the alarm (unacknowledged
                        | acknowledged).
                ackSystemId:
                    type: string
                    description: "Provides the name of the system that last changed the ackState\
            \ of an alarm, i.e. acknowledged or unacknowledged the alarm."
                ackUserId:
                    type: string
                    description: "Provides the id of the user who has last changed the ack state\
            \ of the alarm, i.e. acknowledged or unacknowledged the alarm."
                alarmChangedTime:
                    type: string
                    description: "Indicates the last date and time when the alarm is changed\
            \ on the alarm-owning system. Any change to the alarm whether coming from\
            \ the alarmed resource, or triggered by a change from the client is changing\
            \ this time."
                    format: date-time
                alarmClearedTime:
                    type: string
                    description: 'Indicates the time (as a date + time) at which the alarm is
            cleared at the source. '
                    format: date-time
                alarmDetails:
                    type: string
                    description: Contains further information on the alarm.
                alarmEscalation:
                    type: boolean
                    description: 'Indicates if this alarm has been escalated or not. '
                alarmRaisedTime:
                    type: string
                    description: Indicates the time (as a date + time) at which the alarm occurred
                        at its source.
                    format: date-time
                alarmReportingTime:
                    type: string
                    description: |-
                        Indicates the time (as a date + time) at which the alarm was reported by the owning OSS. It might be different from the alarmRaisedTime. For instance, if the alarm list is maintained by an EMS, the alarmRaisedtime would be the time the alarm
                          was detected by the NE, while the alarmReportingTime would be the time this alarm was stored in the alarm list of the EMS.
                    format: date-time
                alarmedObjectType:
                    type: string
                    description: The type (class) of the managed object associated with the
                        event.
                clearSystemId:
                    type: string
                    description: 'Provides the id of the system where the user who invoked the
            alarmCleared operation is located. '
                clearUserId:
                    type: string
                    description: Provides the id of the user who invoked the alarmCleared operation
                externalAlarmId:
                    type: string
                    description: An identifier of the alarm in the source system.
                isRootCause:
                    type: boolean
                    description: 'Indicates whether the alarm is a root cause alarm.. '
                plannedOutageIndicator:
                    type: string
                    description: "Indicates that the Managed Object (related to this alarm)\
            \ is in planned outage (in planned maintenance, or out-of-service). "
                probableCause:
                    type: string
                    description: Provides the probable cause of the alarm. The values are consistent
                        with ITU-T Recommendation X.733 or 3GPP TS 32.111-2 Annex B.
                proposedRepairedActions:
                    type: string
                    description: "Indicates proposed repair actions, if known to the system\
            \ emitting the alarm."
                reportingSystemId:
                    type: string
                    description: Reporting system identity.
                serviceAffecting:
                    type: boolean
                    description: Indicates whether the alarm affects service or not.
                sourceSystemId:
                    type: string
                    description: Source system identity.
                specificProblem:
                    type: string
                    description: Provides more specific information about the alarm.
                state:
                    type: string
                    description: Defines the alarm state during its life cycle (raised | updated
                        | cleared).
                affectedService:
                    type: array
                    items:
                        $ref: '#/components/schemas/AffectedService'
                alarmType:
                    $ref: '#/components/schemas/AlarmType'
                alarmedObject:
                    $ref: '#/components/schemas/AlarmedObject'
                comment:
                    type: array
                    items:
                        $ref: '#/components/schemas/Comment'
                correlatedAlarm:
                    type: array
                    items:
                        $ref: '#/components/schemas/AlarmRef'
                crossedThresholdInformation:
                    $ref: '#/components/schemas/CrossedThresholdInformation'
                parentAlarm:
                    type: array
                    items:
                        $ref: '#/components/schemas/AlarmRef'
                perceivedSeverity:
                    $ref: '#/components/schemas/PerceivedSeverity'
                place:
                    type: array
                    items:
                        $ref: '#/components/schemas/RelatedPlaceRefOrValue'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: |-
                This resource represents an alarm supporting the information model defined in ITU-T X.733.
                Skipped properties: id,href
        Alarm_Update:
            type: object
            properties:
                ackState:
                    type: string
                    description: Provides the Acknowledgement State of the alarm (unacknowledged
                        | acknowledged).
                ackSystemId:
                    type: string
                    description: "Provides the name of the system that last changed the ackState\
            \ of an alarm, i.e. acknowledged or unacknowledged the alarm."
                ackUserId:
                    type: string
                    description: "Provides the id of the user who has last changed the ack state\
            \ of the alarm, i.e. acknowledged or unacknowledged the alarm."
                alarmChangedTime:
                    type: string
                    description: "Indicates the last date and time when the alarm is changed\
            \ on the alarm-owning system. Any change to the alarm whether coming from\
            \ the alarmed resource, or triggered by a change from the client is changing\
            \ this time."
                    format: date-time
                alarmClearedTime:
                    type: string
                    description: 'Indicates the time (as a date + time) at which the alarm is
            cleared at the source. '
                    format: date-time
                alarmDetails:
                    type: string
                    description: Contains further information on the alarm.
                alarmEscalation:
                    type: boolean
                    description: 'Indicates if this alarm has been escalated or not. '
                alarmReportingTime:
                    type: string
                    description: |-
                        Indicates the time (as a date + time) at which the alarm was reported by the owning OSS. It might be different from the alarmRaisedTime. For instance, if the alarm list is maintained by an EMS, the alarmRaisedtime would be the time the alarm
                          was detected by the NE, while the alarmReportingTime would be the time this alarm was stored in the alarm list of the EMS.
                    format: date-time
                alarmedObjectType:
                    type: string
                    description: The type (class) of the managed object associated with the
                        event.
                clearSystemId:
                    type: string
                    description: 'Provides the id of the system where the user who invoked the
            alarmCleared operation is located. '
                clearUserId:
                    type: string
                    description: Provides the id of the user who invoked the alarmCleared operation
                externalAlarmId:
                    type: string
                    description: An identifier of the alarm in the source system.
                isRootCause:
                    type: boolean
                    description: 'Indicates whether the alarm is a root cause alarm.. '
                plannedOutageIndicator:
                    type: string
                    description: "Indicates that the Managed Object (related to this alarm)\
            \ is in planned outage (in planned maintenance, or out-of-service). "
                probableCause:
                    type: string
                    description: Provides the probable cause of the alarm. The values are consistent
                        with ITU-T Recommendation X.733 or 3GPP TS 32.111-2 Annex B.
                proposedRepairedActions:
                    type: string
                    description: "Indicates proposed repair actions, if known to the system\
            \ emitting the alarm."
                reportingSystemId:
                    type: string
                    description: Reporting system identity.
                serviceAffecting:
                    type: boolean
                    description: Indicates whether the alarm affects service or not.
                specificProblem:
                    type: string
                    description: Provides more specific information about the alarm.
                state:
                    type: string
                    description: Defines the alarm state during its life cycle (raised | updated
                        | cleared).
                affectedService:
                    type: array
                    items:
                        $ref: '#/components/schemas/AffectedService'
                alarmType:
                    $ref: '#/components/schemas/AlarmType'
                alarmedObject:
                    $ref: '#/components/schemas/AlarmedObject'
                comment:
                    type: array
                    items:
                        $ref: '#/components/schemas/Comment'
                correlatedAlarm:
                    type: array
                    items:
                        $ref: '#/components/schemas/AlarmRef'
                crossedThresholdInformation:
                    $ref: '#/components/schemas/CrossedThresholdInformation'
                parentAlarm:
                    type: array
                    items:
                        $ref: '#/components/schemas/AlarmRef'
                perceivedSeverity:
                    $ref: '#/components/schemas/PerceivedSeverity'
                place:
                    type: array
                    items:
                        $ref: '#/components/schemas/RelatedPlaceRefOrValue'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: |-
                This resource represents an alarm supporting the information model defined in ITU-T X.733.
                Skipped properties: id,href,alarmRaisedTime,sourceSystemId
        AlarmRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                name:
                    type: string
                    description: Name of the related entity.
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
        AlarmType:
            type: string
            description: "Categorizes the alarm (X.733 8.1.1, 3GPP TS 32.111-2 Annex A)"
            enum:
                - communicationsAlarm
                - processingErrorAlarm
                - environmentalAlarm
                - qualityOfServiceAlarm
                - equipmentAlarm
                - integrityViolation
                - operationalViolation
                - physicalViolation
                - securityService
                - mechanismViolation
                - timeDomainViolation
        AlarmedObject:
            type: object
            properties:
                id:
                    type: string
                    description: The identifier of the managed object associated with the event.
                href:
                    type: string
                    description: A reference to the managed object associated with the event.
            description: Identifies the managed object instance associated with the alarm.
        AlgorithmParams:
            type: object
            properties:
                name:
                    type: string
                value:
                    type: string
        AlgorithmThresholdRule:
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                algorithmRef:
                    type: string
                name:
                    type: string
                    description: The name of the rule.
                perfAlarmSpecThresholdCrossingDescription:
                    type: string
                    description: A specific description of the threshold crossing (intended
                        to be populated e under the alarm under CrossedThreshold structure).
                thresholdRuleCondition:
                    type: string
                    description: "A concrete threshold may have two possible values: \\\"Raise\\\
            \" - a threshold was crossed or \\\"Clear\\\" - a threshold ceased crossing"
                thresholdRuleName:
                    type: string
                    description: "A word, term, or phrase by which a Performance threshold rule\
            \ is known and distinguished from other threshold rules"
                thresholdRuleSeverity:
                    type: string
                    description: A threshold can be generated in different severity levels.
                        A crossing for each level may require a different condition and possibly
                        trigger a different consequence. The supported severity levels are equivalent
                        to the possible severity level of alarms.
                algorithmParams:
                    type: array
                    items:
                        $ref: '#/components/schemas/AlgorithmParams'
                consequence:
                    type: array
                    description: A threshold crossing or a threshold ceased to be crossing results
                        in a Performance consequence.
                    items:
                        $ref: '#/components/schemas/Consequence'
                measurement:
                    $ref: '#/components/schemas/Measurement'
                performanceAlarmSpecification:
                    $ref: '#/components/schemas/PerformanceAlarmSpecification'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: A threshold rule that is a reference to an algorithm
        Any:
            type: object
        AssociationSpecificationRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                name:
                    type: string
                    description: Name of the related entity.
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: reference to an AssociationSpecification object
        Attachment:
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier for this particular attachment
                    example: 4aafacbd-11ff-4dc8-b445-305f2215715f
                href:
                    type: string
                    description: URI for this Attachment
                    format: uri
                    example: http://host/Attachment/4aafacbd-11ff-4dc8-b445-305f2215715f
                attachmentType:
                    type: string
                    description: "Attachment type such as video, picture"
                    example: video
                content:
                    type: string
                    description: "The actual contents of the attachment object, if embedded,\
            \ encoded as base64"
                    format: base64
                description:
                    type: string
                    description: A narrative text describing the content of the attachment
                    example: Photograph of the Product
                mimeType:
                    type: string
                    description: "Attachment mime type such as extension file for video, picture\
            \ and document"
                name:
                    type: string
                    description: The name of the attachment
                url:
                    type: string
                    description: "Uniform Resource Locator, is a web page address (a subset\
            \ of URI)"
                    format: uri
                    example: http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f
                size:
                    $ref: '#/components/schemas/Quantity'
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: "Complements the description of an element (for instance a product)\
        \ through video, pictures..."
        AttachmentRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: Unique-Identifier for this attachment
                href:
                    type: string
                    description: URL serving as reference for the attachment resource
                    format: uri
                description:
                    type: string
                    description: A narrative text describing the content of the attachment
                name:
                    type: string
                    description: Name of the related entity.
                url:
                    type: string
                    description: Link to the attachment media/content
                    format: uri
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: "Attachment reference. An attachment complements the description\
        \ of an element (for instance a product) through video, pictures"
        AttachmentRefOrValue:
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier for this particular attachment
                    example: 4aafacbd-11ff-4dc8-b445-305f2215715f
                href:
                    type: string
                    description: URI for this Attachment
                    format: uri
                    example: http://host/Attachment/4aafacbd-11ff-4dc8-b445-305f2215715f
                attachmentType:
                    type: string
                    description: "Attachment type such as video, picture"
                    example: video
                content:
                    type: string
                    description: "The actual contents of the attachment object, if embedded,\
            \ encoded as base64"
                    format: base64
                description:
                    type: string
                    description: A narrative text describing the content of the attachment
                    example: Photograph of the Product
                mimeType:
                    type: string
                    description: "Attachment mime type such as extension file for video, picture\
            \ and document"
                name:
                    type: string
                    description: The name of the attachment
                url:
                    type: string
                    description: "Uniform Resource Locator, is a web page address (a subset\
            \ of URI)"
                    format: uri
                    example: http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f
                size:
                    $ref: '#/components/schemas/Quantity'
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: "An attachment by value or by reference. An attachment complements\
        \ the description of an element, for example through a document, a video,\
        \ a picture."
        Characteristic:
            required:
                - name
                - value
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier of the characteristic
                name:
                    type: string
                    description: Name of the characteristic
                valueType:
                    type: string
                    description: Data type of the value of the characteristic
                characteristicRelationship:
                    type: array
                    items:
                        $ref: '#/components/schemas/CharacteristicRelationship'
                value:
                    $ref: '#/components/schemas/Any'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: Describes a given characteristic of an object or entity through
                a name/value pair.
        CharacteristicRelationship:
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier of the characteristic
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                relationshipType:
                    type: string
                    description: The type of relationship
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: Another Characteristic that is related to the current Characteristic;
        CharacteristicSpecification:
            type: object
            properties:
                id:
                    type: string
                    description: Unique ID for the characteristic
                configurable:
                    type: boolean
                    description: "If true, the Boolean indicates that the target Characteristic\
            \ is configurable"
                description:
                    type: string
                    description: A narrative that explains the CharacteristicSpecification.
                extensible:
                    type: boolean
                    description: An indicator that specifies that the values for the characteristic
                        can be extended by adding new values when instantiating a characteristic
                        for a resource.
                isUnique:
                    type: boolean
                    description: An indicator that specifies if a value is unique for the specification.
                        Possible values are; "unique while value is in effect" and "unique whether
                        value is in effect or not"
                maxCardinality:
                    type: integer
                    description: "The maximum number of instances a CharacteristicValue can\
            \ take on. For example, zero to five phone numbers in a group calling\
            \ plan, where five is the value for the maxCardinality."
                minCardinality:
                    type: integer
                    description: "The minimum number of instances a CharacteristicValue can\
            \ take on. For example, zero to five phone numbers in a group calling\
            \ plan, where zero is the value for the minCardinality."
                name:
                    type: string
                    description: "A word, term, or phrase by which this characteristic specification\
            \ is known and distinguished from other characteristic specifications."
                regex:
                    type: string
                    description: A rule or principle represented in regular expression used
                        to derive the value of a characteristic value.
                valueType:
                    type: string
                    description: "A kind of value that the characteristic can take on, such\
            \ as numeric, text and so forth"
                charSpecRelationship:
                    type: array
                    description: "An aggregation, migration, substitution, dependency or exclusivity\
            \ relationship between/among Specification Characteristics."
                    items:
                        $ref: '#/components/schemas/CharacteristicSpecificationRelationship'
                characteristicValueSpecification:
                    type: array
                    description: "A CharacteristicValueSpecification object is used to define\
            \ a set of attributes, each of which can be assigned to a corresponding\
            \ set of attributes in a CharacteristicSpecification object. The values\
            \ of the attributes in the CharacteristicValueSpecification object describe\
            \ the values of the attributes that a corresponding Characteristic object\
            \ can take on."
                    items:
                        $ref: '#/components/schemas/CharacteristicValueSpecification'
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@valueSchemaLocation':
                    type: string
                    description: This (optional) field provides a link to the schema describing
                        the value type.
            description: This class defines a characteristic specification.
        CharacteristicSpecificationBase:
            type: object
            properties:
                id:
                    type: string
                    description: Unique ID for the characteristic
                configurable:
                    type: boolean
                    description: "If true, the Boolean indicates that the target Characteristic\
            \ is configurable"
                description:
                    type: string
                    description: A narrative that explains the CharacteristicSpecification.
                extensible:
                    type: boolean
                    description: An indicator that specifies that the values for the characteristic
                        can be extended by adding new values when instantiating a characteristic
                        for a resource.
                isUnique:
                    type: boolean
                    description: An indicator that specifies if a value is unique for the specification.
                        Possible values are; "unique while value is in effect" and "unique whether
                        value is in effect or not"
                maxCardinality:
                    type: integer
                    description: "The maximum number of instances a CharacteristicValue can\
            \ take on. For example, zero to five phone numbers in a group calling\
            \ plan, where five is the value for the maxCardinality."
                minCardinality:
                    type: integer
                    description: "The minimum number of instances a CharacteristicValue can\
            \ take on. For example, zero to five phone numbers in a group calling\
            \ plan, where zero is the value for the minCardinality."
                name:
                    type: string
                    description: "A word, term, or phrase by which this characteristic specification\
            \ is known and distinguished from other characteristic specifications."
                regex:
                    type: string
                    description: A rule or principle represented in regular expression used
                        to derive the value of a characteristic value.
                valueType:
                    type: string
                    description: "A kind of value that the characteristic can take on, such\
            \ as numeric, text and so forth"
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@valueSchemaLocation':
                    type: string
                    description: This (optional) field provides a link to the schema describing
                        the value type.
            description: This class defines a characteristic specification.
        CharacteristicSpecificationRelationship:
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                characteristicSpecificationId:
                    type: string
                    description: Unique identifier of the characteristic within the specification
                name:
                    type: string
                    description: Name of the target characteristic within the specification
                parentSpecificationHref:
                    type: string
                    description: Hyperlink reference to the parent specification containing
                        the target characteristic
                    format: uri
                parentSpecificationId:
                    type: string
                    description: Unique identifier of the parent specification containing the
                        target characteristic
                relationshipType:
                    type: string
                    description: "Type of relationship such as aggregation, migration, substitution,\
            \ dependency, exclusivity"
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: "An aggregation, migration, substitution, dependency or exclusivity\
        \ relationship between/among Characteristic specifications. The specification\
        \ characteristic is embedded within the specification whose ID and href are\
        \ in this entity, and identified by its ID."
        CharacteristicValueSpecification:
            type: object
            properties:
                isDefault:
                    type: boolean
                    description: "If true, the Boolean Indicates if the value is the default\
            \ value for a characteristic"
                rangeInterval:
                    type: string
                    description: "An indicator that specifies the inclusion or exclusion of\
            \ the valueFrom and valueTo attributes. If applicable, possible values\
            \ are \"open\", \"closed\", \"closedBottom\" and \"closedTop\"."
                regex:
                    type: string
                    description: A regular expression constraint for given value
                unitOfMeasure:
                    type: string
                    description: "A length, surface, volume, dry measure, liquid measure, money,\
            \ weight, time, and the like. In general, a determinate quantity or magnitude\
            \ of the kind designated, taken as a standard of comparison for others\
            \ of the same kind, in assigning to them numerical values, as 1 foot,\
            \ 1 yard, 1 mile, 1 square foot."
                valueFrom:
                    type: integer
                    description: The low range value that a characteristic can take on
                valueTo:
                    type: integer
                    description: The upper range value that a characteristic can take on
                valueType:
                    type: string
                    description: "A kind of value that the characteristic value can take on,\
            \ such as numeric, text and so forth"
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                value:
                    $ref: '#/components/schemas/Any'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: specification of a value (number or text or an object) that can
                be assigned to a Characteristic.
        Comment:
            type: object
            properties:
                comment:
                    type: string
                    description: Indicates the text of the comment.
                systemId:
                    type: string
                    description: Indicates the system identifier on which the client set the
                        comment.
                time:
                    type: string
                    description: Indicates the time commenting the alarm
                    format: date-time
                userId:
                    type: string
                    description: Indicates the user commenting the alarm.
            description: Indicates the comments entered on the alarm.
        Consequence:
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                description:
                    type: string
                    description: A description of a Consequence
                name:
                    type: string
                    description: "A word, term, or phrase by which a Consequence is known and\
            \ distinguished from other measurements"
                prescribedAction:
                    type: string
                    description: The suggested action
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: A threshold crossing or a threshold ceased to be crossing results
                in a Performance consequence.
        ConstraintRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                name:
                    type: string
                    description: Name of the related entity.
                version:
                    type: string
                    description: constraint version
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: Constraint reference. The Constraint resource represents a policy/rule
                applied to an entity or entity spec.
        CrossedThresholdInformation:
            type: object
            properties:
                direction:
                    type: string
                    description: "Indicates the threshold crossing direction: up or down."
                granularity:
                    type: string
                    description: Indicates the granularity at which the indicator is evaluated
                        for threshold crossing
                indicatorName:
                    type: string
                    description: Indicates the name of indicator which crossed the threshold.
                indicatorUnit:
                    type: string
                    description: Indicates the unit of the measurement of the indicator corresponding
                        to the threshold that has been crossed.
                observedValue:
                    type: string
                    description: Indicates the value of the indicator which crossed the threshold.
                thresholdCrossingDescription:
                    type: string
                    description: Indicates further information on the threshold crossing alarm.
                threshold:
                    $ref: '#/components/schemas/ThresholdRef'
            description: Identifies the details of the threshold that has been crossed.
        Entity:
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: Base entity schema for use in TMForum Open-APIs
        EntityRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                name:
                    type: string
                    description: Name of the related entity.
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: Entity reference schema to be use for all entityRef class.
        EntitySpecification:
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                description:
                    type: string
                    description: Description of the specification
                isBundle:
                    type: boolean
                    description: "isBundle determines whether specification represents a single\
            \ specification (false), or a bundle of specifications (true)."
                lastUpdate:
                    type: string
                    description: Date and time of the last update of the specification
                    format: date-time
                lifecycleStatus:
                    type: string
                    description: Used to indicate the current lifecycle status of this catalog
                        item
                name:
                    type: string
                    description: Name given to the specification
                version:
                    type: string
                    description: specification version
                attachment:
                    type: array
                    description: "Attachments that may be of relevance to this specification,\
            \ such as picture, document, media"
                    items:
                        $ref: '#/components/schemas/AttachmentRefOrValue'
                constraint:
                    type: array
                    description: This is a list of constraint references applied to this specification
                    items:
                        $ref: '#/components/schemas/ConstraintRef'
                entitySpecRelationship:
                    type: array
                    description: Relationship to another specification
                    items:
                        $ref: '#/components/schemas/EntitySpecificationRelationship'
                relatedParty:
                    type: array
                    description: Parties who manage or otherwise have an interest in this specification
                    items:
                        $ref: '#/components/schemas/RelatedParty'
                specCharacteristic:
                    type: array
                    description: List of characteristics that the entity can take
                    items:
                        $ref: '#/components/schemas/CharacteristicSpecification'
                targetEntitySchema:
                    $ref: '#/components/schemas/TargetEntitySchema'
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: |-
                EntitySpecification is a class that offers characteristics to describe a type of entity. Entities are generic constructs that may be used to describe bespoke business entities that are not effectively covered by the existing SID model.
                Functionally, the entity specification acts as a template by which entities may be instantiated and described. By sharing the same specification, these entities would therefore share the same set of characteristics.
                Note: The ‘configurable’ attribute on the specCharacteristics determines if an entity instantiated from the entity specification can override the value of the attribute. When set to false, the entity instance may not define a value that differs from the value in the specification.
        EntitySpecificationRelationship:
            required:
                - relationshipType
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                name:
                    type: string
                    description: Name of the related entity.
                relationshipType:
                    type: string
                    description: "Type of relationship such as migration, substitution, dependency,\
            \ exclusivity"
                role:
                    type: string
                    description: The association role for this entity specification
                associationSpec:
                    $ref: '#/components/schemas/AssociationSpecificationRef'
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: "A migration, substitution, dependency or exclusivity relationship\
        \ between/among entity specifications."
        EntityValue:
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier of a related entity.
                href:
                    type: string
                    description: Reference of the related entity.
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: Base entity value  schema for use in TMForum Open-APIs
        Event:
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                correlationId:
                    type: string
                    description: The correlation id for this event.
                description:
                    type: string
                    description: An explnatory of the event.
                domain:
                    type: string
                    description: The domain of the event.
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                priority:
                    type: string
                    description: A priority.
                timeOccurred:
                    type: string
                    description: The time the event occurred.
                    format: date-time
                title:
                    type: string
                    description: The title of the event.
                analyticCharacteristic:
                    type: array
                    items:
                        $ref: '#/components/schemas/Characteristic'
                event:
                    $ref: '#/components/schemas/Any'
                relatedParty:
                    type: array
                    items:
                        $ref: '#/components/schemas/RelatedParty'
                reportingSystem:
                    $ref: '#/components/schemas/EntityRef'
                source:
                    $ref: '#/components/schemas/EntityRef'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: event with common attributes.
        Event_Create:
            type: object
            properties:
                correlationId:
                    type: string
                    description: The correlation id for this event.
                description:
                    type: string
                    description: An explnatory of the event.
                domain:
                    type: string
                    description: The domain of the event.
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                priority:
                    type: string
                    description: A priority.
                timeOccurred:
                    type: string
                    description: The time the event occurred.
                    format: date-time
                title:
                    type: string
                    description: The title of the event.
                analyticCharacteristic:
                    type: array
                    items:
                        $ref: '#/components/schemas/Characteristic'
                event:
                    $ref: '#/components/schemas/Any'
                relatedParty:
                    type: array
                    items:
                        $ref: '#/components/schemas/RelatedParty'
                reportingSystem:
                    $ref: '#/components/schemas/EntityRef'
                source:
                    $ref: '#/components/schemas/EntityRef'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: |-
                event with common attributes.
                Skipped properties: id,href
        Extensible:
            type: object
            properties:
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: Base Extensible schema for use in TMForum Open-APIs
        Feature:
            required:
                - featureCharacteristic
                - name
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier of the feature.
                isBundle:
                    type: boolean
                    description: True if this is a feature group. Default is false.
                isEnabled:
                    type: boolean
                    description: True if this feature is enabled. Default is true.
                name:
                    type: string
                    description: This is the name for the feature.
                constraint:
                    type: array
                    description: This is a list of feature constraints.
                    items:
                        $ref: '#/components/schemas/ConstraintRef'
                featureCharacteristic:
                    minItems: 1
                    type: array
                    description: This is a list of Characteristics for a particular feature.
                    items:
                        $ref: '#/components/schemas/Characteristic'
                featureRelationship:
                    type: array
                    items:
                        $ref: '#/components/schemas/FeatureRelationship'
            description: Configuration feature.
        FeatureRelationship:
            required:
                - name
                - relationshipType
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier of the target feature.
                name:
                    type: string
                    description: This is the name of the target feature.
                relationshipType:
                    type: string
                    description: This is the type of the feature relationship.
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
            description: Configuration feature
        FeatureSpecification:
            type: object
            properties:
                id:
                    type: string
                    description: "Identifier of the feature specification. Must be locally unique\
            \ within the containing specification, thus allowing direct access to\
            \ the feature spec."
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                isBundle:
                    type: boolean
                    description: A flag indicating if this is a feature group (true) or not
                        (false)
                isEnabled:
                    type: boolean
                    description: A flag indicating if the feature is enabled (true) or not (false)
                name:
                    type: string
                    description: Unique name given to the feature specification
                version:
                    type: string
                    description: Version of the feature specification
                constraint:
                    type: array
                    description: This is a list of feature constraints
                    items:
                        $ref: '#/components/schemas/ConstraintRef'
                featureSpecCharacteristic:
                    type: array
                    description: This is a list of characteristics for a particular feature
                    items:
                        $ref: '#/components/schemas/FeatureSpecificationCharacteristic'
                featureSpecRelationship:
                    type: array
                    description: "A dependency, exclusivity or aggratation relationship between/among\
            \ feature specifications."
                    items:
                        $ref: '#/components/schemas/FeatureSpecificationRelationship'
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: "Specification for resource, service or product features"
        FeatureSpecificationCharacteristic:
            required:
                - name
            type: object
            properties:
                id:
                    type: string
                    description: Unique ID for the characteristic
                configurable:
                    type: boolean
                    description: "If true, the Boolean indicates that the target Characteristic\
            \ is configurable"
                description:
                    type: string
                    description: A narrative that explains the CharacteristicSpecification.
                extensible:
                    type: boolean
                    description: An indicator that specifies that the values for the characteristic
                        can be extended by adding new values when instantiating a characteristic
                        for a resource.
                isUnique:
                    type: boolean
                    description: An indicator that specifies if a value is unique for the specification.
                        Possible values are; "unique while value is in effect" and "unique whether
                        value is in effect or not"
                maxCardinality:
                    type: integer
                    description: "The maximum number of instances a CharacteristicValue can\
            \ take on. For example, zero to five phone numbers in a group calling\
            \ plan, where five is the value for the maxCardinality."
                minCardinality:
                    type: integer
                    description: "The minimum number of instances a CharacteristicValue can\
            \ take on. For example, zero to five phone numbers in a group calling\
            \ plan, where zero is the value for the minCardinality."
                name:
                    type: string
                    description: "A word, term, or phrase by which this characteristic specification\
            \ is known and distinguished from other characteristic specifications."
                regex:
                    type: string
                    description: A rule or principle represented in regular expression used
                        to derive the value of a characteristic value.
                valueType:
                    type: string
                    description: "A kind of value that the characteristic can take on, such\
            \ as numeric, text and so forth"
                featureSpecCharRelationship:
                    type: array
                    description: "An aggregation, migration, substitution, dependency or exclusivity\
            \ relationship between/among feature characteristics."
                    items:
                        $ref: '#/components/schemas/FeatureSpecificationCharacteristicRelationship'
                featureSpecCharacteristicValue:
                    type: array
                    description: "Used to define a set of attributes, each of which can be assigned\
            \ to a corresponding set of attributes in a FeatureCharacteristic object."
                    items:
                        $ref: '#/components/schemas/CharacteristicValueSpecification'
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@valueSchemaLocation':
                    type: string
                    description: This (optional) field provides a link to the schema describing
                        the value type.
            description: Configuration feature characteristic specification.
        FeatureSpecificationCharacteristicRelationship:
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                characteristicId:
                    type: string
                    description: Unique identifier of the characteristic within the the target
                        feature specification
                featureId:
                    type: string
                    description: Unique identifier of the target feature specification within
                        the resource specification.
                name:
                    type: string
                    description: Name of the target characteristic
                relationshipType:
                    type: string
                    description: "Type of relationship such as aggregation, migration, substitution,\
            \ dependency, exclusivity"
                resourceSpecificationHref:
                    type: string
                    description: Hyperlink reference to the resource specification containing
                        the target feature and feature characteristic
                    format: uri
                resourceSpecificationId:
                    type: string
                    description: Unique identifier of the resource specification containing
                        the target feature and feature characteristic
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: "An aggregation, migration, substitution, dependency or exclusivity\
        \ relationship between/among FeatureSpecificationCharacteristics."
        FeatureSpecificationRelationship:
            required:
                - name
                - relationshipType
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                featureId:
                    type: string
                    description: Unique identifier of the target feature specification.
                name:
                    type: string
                    description: This is the name of the target feature specification.
                parentSpecificationHref:
                    type: string
                    description: Hyperlink reference to the parent specification containing
                        the target feature
                    format: uri
                parentSpecificationId:
                    type: string
                    description: Unique identifier of the parent specification containing the
                        target feature
                relationshipType:
                    type: string
                    description: This is the type of the feature specification relationship.
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: Relationship between feature specifications
        HeaderItem:
            required:
                - name
                - value
            type: object
            properties:
                name:
                    type: string
                    description: "The name of the header item, e.g. locale"
                value:
                    type: string
                    description: "The value of the header item, e.g. en-us"
            description: An item typically included in a request or response
        Hub:
            required:
                - callback
                - id
            type: object
            properties:
                id:
                    type: string
                    description: The unique-id for your subscription - referenced when updating
                        or deleting a subscription
                    example: 4aafacbd-11ff-4dc8-b445-305f2215715f
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                callback:
                    type: string
                    description: The URI that will be POSTed to when a notification is triggered
                    format: uri
                    example: http://host/resource/id/listener
                query:
                    type: string
                    description: This is a query string used to filter notifications in the
                        context of the notifier
                    example: status=active
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: A Hub is used to subscribe to an event notification
        Hub_Create:
            required:
                - callback
            type: object
            properties:
                callback:
                    type: string
                    description: The URI that will be POSTed to when a notification is triggered
                    format: uri
                    example: http://host/resource/id/listener
                query:
                    type: string
                    description: This is a query string used to filter notifications in the
                        context of the notifier
                    example: status=active
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: |-
                A Hub is used to subscribe to an event notification
                Skipped properties: id,href
        Measurement:
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                collectionType:
                    type: string
                    description: This attribute indicates different forms in which the measurement
                        data can be captured (please see details below)
                description:
                    type: string
                    description: A description of the measurement
                measurementFormula:
                    type: string
                    description: A formula that is used to calculate a measurement (a string)
                measurementType:
                    type: string
                    description: A category of the measurement (different SDOs may be using
                        different categories)
                measurementUnit:
                    type: string
                    description: "The unit of the measurement (e.g. second, bytes, Celsius,\
            \ etc.)"
                name:
                    type: string
                    description: "A word, term, or phrase by which a measurement is known and\
            \ distinguished from other measurements"
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: A counter/KPI to be used by the threshold rule
        Monitor:
            type: object
            properties:
                id:
                    type: string
                    description: Identifier of an instance of the monitor. Required to be unique
                        within the resource type.  Used in URIs as the identifier for specific
                        instances of a type
                href:
                    type: string
                    description: reference to this monitor
                sourceHref:
                    type: string
                    description: The monitored resource href
                state:
                    type: string
                    description: "The Monitor state of the resource.  InProgress, InError, Completed"
                request:
                    $ref: '#/components/schemas/Request'
                response:
                    $ref: '#/components/schemas/Response'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: Monitoring of resources
        Note:
            type: object
            properties:
                id:
                    type: string
                    description: "Identifier of the note within its containing entity (may or\
            \ may not be globally unique, depending on provider implementation)"
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                author:
                    type: string
                    description: Author of the note
                date:
                    type: string
                    description: Date of the note
                    format: date-time
                text:
                    type: string
                    description: Text of the note
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: Extra information about a given entity
        OrderItemActionType:
            type: string
            description: action to be performed on the product
            enum:
                - add
                - modify
                - delete
                - noChange
        PerceivedSeverity:
            type: string
            description: This datatype lists the possible severities that can be allocated
                to a Alarm. The values are consistent with ITU-T Recommendation X.733. This
                specification does not recommend the use of indeterminate.
            enum:
                - CRITICAL
                - MAJOR
                - MINOR
                - WARNING
                - INDETERMINATE
                - CLEARED
        PerformanceAlarmSpecification:
            type: object
            properties:
                perfAlarmSpecAdditionalText:
                    type: string
                perfAlarmSpecAlarmType:
                    type: string
                perfAlarmSpecProbableCause:
                    type: string
                perfAlarmSpecSpecificProblem:
                    type: string
                perfAlarmThresholdCrossingDescription:
                    type: string
                perfAlarmSpecSeverity:
                    $ref: '#/components/schemas/PerceivedSeverity'
                performanceConsequence:
                    $ref: '#/components/schemas/PerformanceConsequence'
            description: The specification of how to populate the alarm fields when generating
                a threshold crossing alarm.
        PerformanceConsequence:
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                description:
                    type: string
                    description: A description of a Consequence
                name:
                    type: string
                    description: "A word, term, or phrase by which a Consequence is known and\
            \ distinguished from other measurements"
                prescribedAction:
                    type: string
                    description: The suggested action
                alarmSpecification:
                    $ref: '#/components/schemas/PerformanceAlarmSpecification'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: A Consequence can be applied as a result of a threshold crossing
                or a threshold ceasing to be crossed
        Place:
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier of the place
                href:
                    type: string
                    description: Unique reference of the place
                name:
                    type: string
                    description: "A user-friendly name for the place, such as [Paris Store],\
            \ [London Store], [Main Home]"
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: Place reference. Place defines the places where the products are
                sold or delivered.
        PlaceRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                name:
                    type: string
                    description: Name of the related entity.
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: Place reference. PlaceRef defines the placeRefs where the products
                are sold or delivered.
        Quantity:
            type: object
            properties:
                amount:
                    type: number
                    description: Numeric value in a given unit
                    format: float
                    default: 1.0
                units:
                    type: string
                    description: Unit
            description: An amount in a given unit
        RelatedEntityRefOrValue:
            required:
                - role
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier of a related entity.
                href:
                    type: string
                    description: Reference of the related entity.
                name:
                    type: string
                    description: Name of the related entity.
                role:
                    type: string
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: "A reference to an entity, where the type of the entity is not\
        \ known in advance. A related entity defines a entity described by reference\
        \ or by value linked to a specific entity. The polymorphic attributes @type,\
        \ @schemaLocation & @referredType are related to the Entity and not the RelatedEntityRefOrValue\
        \ class itself"
        RelatedParty:
            required:
                - '@referredType'
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                name:
                    type: string
                    description: Name of the related entity.
                role:
                    type: string
                    description: Role played by the related party
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: Related Entity reference. A related party defines party or party
                role linked to a specific entity.
        RelatedPlaceRefOrValue:
            required:
                - role
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier of the place
                href:
                    type: string
                    description: Unique reference of the place
                name:
                    type: string
                    description: "A user-friendly name for the place, such as [Paris Store],\
            \ [London Store], [Main Home]"
                role:
                    type: string
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: "Related Entity reference. A related place defines a place described\
        \ by reference or by value linked to a specific entity. The polymorphic attributes\
        \ @type, @schemaLocation & @referredType are related to the place entity and\
        \ not the RelatedPlaceRefOrValue class itself"
        RelatedServiceOrderItem:
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                itemId:
                    type: string
                    description: Identifier of the order item where the service was managed
                role:
                    type: string
                    description: role of the service order item for this service
                serviceOrderHref:
                    type: string
                    description: Reference of the related entity.
                serviceOrderId:
                    type: string
                    description: Unique identifier of a related entity.
                itemAction:
                    $ref: '#/components/schemas/OrderItemActionType'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: RelatedServiceOrderItem (a ServiceOrder item) .The service order
                item which triggered service creation/change/termination.
        Request:
            required:
                - body
                - header
            type: object
            properties:
                body:
                    type: string
                    description: The body of the request. For example for an HTTP request might
                        contain content of a form .
                method:
                    type: string
                    description: "The protocol of the request, e.g. http"
                to:
                    type: string
                    description: "The target of the request, e.g. a URL for an HTTP request"
                header:
                    minItems: 1
                    type: array
                    description: "Items included in the header of the request. For example for\
            \ an HTTP request might contain requested locale, basic authentication."
                    items:
                        $ref: '#/components/schemas/HeaderItem'
            description: A response to a request
        ResourceRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                name:
                    type: string
                    description: Name of the related entity.
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
        ResourceSpecificationRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                name:
                    type: string
                    description: Name of the related entity.
                version:
                    type: string
                    description: Resource Specification version
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: |-
                Resources are physical or non-physical components (or some combination of these) within an enterprise's infrastructure or inventory. They are typically consumed or used by services (for example a physical port assigned to a service) or contribute to the realization of a Product (for example, a SIM card). They can be drawn from the Application, Computing and Network domains, and include, for example, Network Elements, software, IT systems, content and information, and technology components.
                A ResourceSpecification is an abstract base class for representing a generic means for implementing a particular type of Resource. In essence, a ResourceSpecification defines the common attributes and relationships of a set of related Resources, while Resource defines a specific instance that is based on a particular ResourceSpecification.
        Response:
            required:
                - body
                - header
            type: object
            properties:
                body:
                    type: string
                    description: The body of the response. For example for an HTTP response
                        might contain HTML for rendering.
                statusCode:
                    type: string
                    description: "The status of the response. For example for an HTTP response\
            \ would be codes such as 200, 400, etc."
                header:
                    minItems: 1
                    type: array
                    description: Items included in the header of the response. For example for
                        an HTTP response might contain negotiated locale.
                    items:
                        $ref: '#/components/schemas/HeaderItem'
            description: A response to a request
        Rule:
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                name:
                    type: string
                    description: The name of the rule.
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
        Rule_Create:
            required:
                - '@type'
                - name
            type: object
            properties:
                name:
                    type: string
                    description: The name of the rule.
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: |2-
            
              Skipped properties: id,href
        Rule_Update:
            type: object
            properties:
                name:
                    type: string
                    description: The name of the rule.
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: |2-
            
              Skipped properties: id,href
        RuleRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                name:
                    type: string
                    description: Name of the related entity.
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: "Rule reference. Rule is a common pattern or Template for the SLA\
        \ parameters, metrics, and thresholds"
        SLA:
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier of the Service Level Agreement (SLA)
                href:
                    type: string
                    description: Reference of the Service Level Agreement (SLA)
                approvalDate:
                    type: string
                    format: date-time
                approved:
                    type: boolean
                description:
                    type: string
                    description: Description of the Service Level Agreement (SLA)
                name:
                    type: string
                    description: Name of the Service Level Agreement (SLA)
                state:
                    type: string
                    description: State of the Service Level Agreement (SLA)
                version:
                    type: string
                    description: Version of the Service Level Agreement (SLA)
                relatedParty:
                    type: array
                    items:
                        $ref: '#/components/schemas/RelatedParty'
                rule:
                    type: array
                    items:
                        $ref: '#/components/schemas/Rule'
                template:
                    $ref: '#/components/schemas/TemplateRef'
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: "Part of a business agreement between a Service Provider and a\
        \ Customer, quantitatively specifying the service performance level the Service\
        \ Provider commits to deliver."
        Service:
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier of the service
                href:
                    type: string
                    description: Reference of the service
                category:
                    type: string
                    description: Is it a customer facing or resource facing service
                description:
                    type: string
                    description: Free-text description of the service
                endDate:
                    type: string
                    description: Date when the service ends
                    format: date-time
                hasStarted:
                    type: boolean
                    description: "If TRUE, this Service has already been started"
                isBundle:
                    type: boolean
                    description: "If true, the service is a ServiceBundle which regroup a service\
            \ hierachy. If false, the service is a 'atomic' service (hierachy leaf)."
                isServiceEnabled:
                    type: boolean
                    description: "If FALSE and hasStarted is FALSE, this particular Service\
            \ has NOT been enabled for use - if FALSE and hasStarted is TRUE then\
            \ the service has failed "
                isStateful:
                    type: boolean
                    description: "If TRUE, this Service can be changed without affecting any\
            \ other services"
                name:
                    type: string
                    description: Name of the service
                serviceDate:
                    type: string
                    description: Date when the service was created (whatever its status).
                serviceType:
                    type: string
                    description: Business type of the service
                startDate:
                    type: string
                    description: Date when the service starts
                    format: date-time
                startMode:
                    type: string
                    description: "This attribute is an enumerated integer that indicates how\
            \ the Service is started, such as: 0: Unknown; 1: Automatically by the\
            \ managed environment; 2: Automatically by the owning device; 3: Manually\
            \ by the Provider of the Service; 4: Manually by a Customer of the Provider;\
            \ 5: Any of the above"
                feature:
                    type: array
                    description: 'A list of feature associated with this service '
                    items:
                        $ref: '#/components/schemas/Feature'
                note:
                    type: array
                    description: A list of notes made on this service
                    items:
                        $ref: '#/components/schemas/Note'
                place:
                    type: array
                    description: "A list of places (Place [*]). Used to define a place useful\
            \ for the service (for example a geographical place whre the service is\
            \ installed)"
                    items:
                        $ref: '#/components/schemas/RelatedPlaceRefOrValue'
                relatedEntity:
                    type: array
                    description: 'A list of related  entity in relationship with this service '
                    items:
                        $ref: '#/components/schemas/RelatedEntityRefOrValue'
                relatedParty:
                    type: array
                    description: "A list of related party references (RelatedParty [*]). A related\
            \ party defines party or party role linked to a specific entity"
                    items:
                        $ref: '#/components/schemas/RelatedParty'
                serviceCharacteristic:
                    type: array
                    description: "A list of characteristics that characterize this service (ServiceCharacteristic\
            \ [*]) "
                    items:
                        $ref: '#/components/schemas/Characteristic'
                serviceOrderItem:
                    type: array
                    description: A list of service order items related to this service
                    items:
                        $ref: '#/components/schemas/RelatedServiceOrderItem'
                serviceRelationship:
                    type: array
                    description: "A list of service relationships (ServiceRelationship [*]).\
            \ Describes links with other service(s) in the inventory."
                    items:
                        $ref: '#/components/schemas/ServiceRelationship'
                serviceSpecification:
                    $ref: '#/components/schemas/ServiceSpecificationRef'
                state:
                    $ref: '#/components/schemas/ServiceStateType'
                supportingResource:
                    type: array
                    description: "A list of supporting resources (SupportingResource [*]).Note:\
            \ only Service of type RFS can be associated with Resources"
                    items:
                        $ref: '#/components/schemas/ResourceRef'
                supportingService:
                    type: array
                    description: "A list of supporting services (SupportingService [*]). A collection\
            \ of services that support this service (bundling, link CFS to RFS)"
                    items:
                        $ref: '#/components/schemas/ServiceRefOrValue'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: "Service is a base class for defining the Service hierarchy. All\
        \ Services are characterized as either being possibly visible and usable by\
        \ a Customer or not. This gives rise to the two subclasses of Service: CustomerFacingService\
        \ and ResourceFacingService."
        ServiceLevelSpecificationRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                name:
                    type: string
                    description: Name of the related entity.
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: "A Service Level Specification represents a pre-defined or negotiated\
        \ set of Service Level \nObjectives. In addition, certain consequences are\
        \ associated with not meeting the Service Level \nObjectives. Service Level\
        \ Agreements are expressed in terms of Service Level Specifications."
        ServiceRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                name:
                    type: string
                    description: Name of the related entity.
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: "Service reference, for when Service is used by other entities"
        ServiceRefOrValue:
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier of the service
                href:
                    type: string
                    description: Reference of the service
                category:
                    type: string
                    description: Is it a customer facing or resource facing service
                description:
                    type: string
                    description: Free-text description of the service
                endDate:
                    type: string
                    description: Date when the service ends
                    format: date-time
                hasStarted:
                    type: boolean
                    description: "If TRUE, this Service has already been started"
                isBundle:
                    type: boolean
                    description: "If true, the service is a ServiceBundle which regroup a service\
            \ hierachy. If false, the service is a 'atomic' service (hierachy leaf)."
                isServiceEnabled:
                    type: boolean
                    description: "If FALSE and hasStarted is FALSE, this particular Service\
            \ has NOT been enabled for use - if FALSE and hasStarted is TRUE then\
            \ the service has failed "
                isStateful:
                    type: boolean
                    description: "If TRUE, this Service can be changed without affecting any\
            \ other services"
                name:
                    type: string
                    description: Name of the service
                serviceDate:
                    type: string
                    description: Date when the service was created (whatever its status).
                serviceType:
                    type: string
                    description: Business type of the service
                startDate:
                    type: string
                    description: Date when the service starts
                    format: date-time
                startMode:
                    type: string
                    description: "This attribute is an enumerated integer that indicates how\
            \ the Service is started, such as: 0: Unknown; 1: Automatically by the\
            \ managed environment; 2: Automatically by the owning device; 3: Manually\
            \ by the Provider of the Service; 4: Manually by a Customer of the Provider;\
            \ 5: Any of the above"
                feature:
                    type: array
                    description: 'A list of feature associated with this service '
                    items:
                        $ref: '#/components/schemas/Feature'
                note:
                    type: array
                    description: A list of notes made on this service
                    items:
                        $ref: '#/components/schemas/Note'
                place:
                    type: array
                    description: "A list of places (Place [*]). Used to define a place useful\
            \ for the service (for example a geographical place whre the service is\
            \ installed)"
                    items:
                        $ref: '#/components/schemas/RelatedPlaceRefOrValue'
                relatedEntity:
                    type: array
                    description: 'A list of related  entity in relationship with this service '
                    items:
                        $ref: '#/components/schemas/RelatedEntityRefOrValue'
                relatedParty:
                    type: array
                    description: "A list of related party references (RelatedParty [*]). A related\
            \ party defines party or party role linked to a specific entity"
                    items:
                        $ref: '#/components/schemas/RelatedParty'
                serviceCharacteristic:
                    type: array
                    description: "A list of characteristics that characterize this service (ServiceCharacteristic\
            \ [*]) "
                    items:
                        $ref: '#/components/schemas/Characteristic'
                serviceOrderItem:
                    type: array
                    description: A list of service order items related to this service
                    items:
                        $ref: '#/components/schemas/RelatedServiceOrderItem'
                serviceRelationship:
                    type: array
                    description: "A list of service relationships (ServiceRelationship [*]).\
            \ Describes links with other service(s) in the inventory."
                    items:
                        $ref: '#/components/schemas/ServiceRelationship'
                serviceSpecification:
                    $ref: '#/components/schemas/ServiceSpecificationRef'
                state:
                    $ref: '#/components/schemas/ServiceStateType'
                supportingResource:
                    type: array
                    description: "A list of supporting resources (SupportingResource [*]).Note:\
            \ only Service of type RFS can be associated with Resources"
                    items:
                        $ref: '#/components/schemas/ResourceRef'
                supportingService:
                    type: array
                    description: "A list of supporting services (SupportingService [*]). A collection\
            \ of services that support this service (bundling, link CFS to RFS)"
                    items:
                        $ref: '#/components/schemas/ServiceRefOrValue'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: "A Service to be created defined by value or existing defined by\
        \ reference. The polymorphic attributes @type, @schemaLocation & @referredType\
        \ are related to the Service entity and not the RelatedServiceRefOrValue class\
        \ itself"
        ServiceRelationship:
            required:
                - relationshipType
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                relationshipType:
                    type: string
                service:
                    $ref: '#/components/schemas/ServiceRefOrValue'
                serviceRelationshipCharacteristic:
                    type: array
                    items:
                        $ref: '#/components/schemas/Characteristic'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
        ServiceSpecRelationship:
            required:
                - relationshipType
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                name:
                    type: string
                    description: Name of the related entity.
                relationshipType:
                    type: string
                    description: "Type of relationship such as dependency, substitution or exclusivity"
                role:
                    type: string
                    description: The association role for this service specification
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: "A dependency, substitution or exclusivity relationship between/among\
        \ service specifications."
        ServiceSpecification:
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                description:
                    type: string
                    description: Description of the specification
                isBundle:
                    type: boolean
                    description: "isBundle determines whether specification represents a single\
            \ specification (false), or a bundle of specifications (true)."
                lastUpdate:
                    type: string
                    description: Date and time of the last update of the specification
                    format: date-time
                lifecycleStatus:
                    type: string
                    description: Used to indicate the current lifecycle status of this catalog
                        item
                name:
                    type: string
                    description: Name given to the specification
                version:
                    type: string
                    description: specification version
                attachment:
                    type: array
                    description: "Attachments that may be of relevance to this specification,\
            \ such as picture, document, media"
                    items:
                        $ref: '#/components/schemas/AttachmentRefOrValue'
                constraint:
                    type: array
                    description: This is a list of constraint references applied to this specification
                    items:
                        $ref: '#/components/schemas/ConstraintRef'
                entitySpecRelationship:
                    type: array
                    description: Relationship to another specification
                    items:
                        $ref: '#/components/schemas/EntitySpecificationRelationship'
                featureSpecification:
                    type: array
                    description: A list of Features for this specification.
                    items:
                        $ref: '#/components/schemas/FeatureSpecification'
                relatedParty:
                    type: array
                    description: Parties who manage or otherwise have an interest in this specification
                    items:
                        $ref: '#/components/schemas/RelatedParty'
                resourceSpecification:
                    type: array
                    description: "A list of resource specification references (ResourceSpecificationRef\
            \ [*]). The ResourceSpecification is required for a service specification\
            \ with type ResourceFacingServiceSpecification (RFSS)."
                    items:
                        $ref: '#/components/schemas/ResourceSpecificationRef'
                serviceLevelSpecification:
                    type: array
                    description: "A list of service level specifications related to this service\
            \ specification, and which will need to be satisifiable for corresponding\
            \ service instances; e.g. Gold, Platinum"
                    items:
                        $ref: '#/components/schemas/ServiceLevelSpecificationRef'
                serviceSpecRelationship:
                    type: array
                    description: "A list of service specifications related to this specification,\
            \ e.g. migration, substitution, dependency or exclusivity relationship"
                    items:
                        $ref: '#/components/schemas/ServiceSpecRelationship'
                specCharacteristic:
                    type: array
                    description: List of characteristics that the entity can take
                    items:
                        $ref: '#/components/schemas/CharacteristicSpecification'
                targetEntitySchema:
                    $ref: '#/components/schemas/TargetEntitySchema'
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: |-
                ServiceSpecification is a class that offers characteristics to describe a type of service.
                Functionally, it acts as a template by which Services may be instantiated. By sharing the same specification, these services would therefore share the same set of characteristics.
        ServiceSpecificationRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                name:
                    type: string
                    description: Name of the related entity.
                version:
                    type: string
                    description: Service specification version
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: "Service specification reference: ServiceSpecification(s) required\
        \ to realize a ProductSpecification."
        ServiceStateType:
            type: string
            description: Valid values for the lifecycle state of the service
            enum:
                - feasibilityChecked
                - designed
                - reserved
                - inactive
                - active
                - terminated
        SimpleThresholdRule:
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                conformanceComparatorLower:
                    type: integer
                    description: An operator that when applied on a value (of conformanceTargetLower)
                        specifies whether a Performance threshold rule is crossed or ceased to
                        be crossed.
                conformanceComparatorUpper:
                    type: string
                    description: An operator that when applied on a value (of conformanceTargetUpper)
                        specifies whether a Performance threshold rule is crossed or ceased to
                        be crossed.
                conformanceTargetLower:
                    type: integer
                    description: "A value used to determine if the Performance threshold is\
            \ crossed or ceased to be crossed, serving as an lower value"
                conformanceTargetUpper:
                    type: integer
                    description: "A value used to determine if the Performance threshold is\
            \ crossed or ceased to be crossed, serving as an upper value"
                gracePeriods:
                    type: integer
                    description: The number of times an objective can remain un-updated in reference
                        to the conformancePeriod without a Performance threshold Consequence being
                        initiated
                name:
                    type: string
                    description: The name of the rule.
                perfAlarmSpecThresholdCrossingDescription:
                    type: string
                    description: A specific description of the threshold crossing (intended
                        to be populated e under the alarm under CrossedThreshold structure).
                thresholdRuleCondition:
                    type: string
                    description: "A concrete threshold may have two possible values: \\\"Raise\\\
            \" - a threshold was crossed or \\\"Clear\\\" - a threshold ceased crossing"
                thresholdRuleName:
                    type: string
                    description: "A word, term, or phrase by which a Performance threshold rule\
            \ is known and distinguished from other threshold rules"
                thresholdRuleSeverity:
                    type: string
                    description: A threshold can be generated in different severity levels.
                        A crossing for each level may require a different condition and possibly
                        trigger a different consequence. The supported severity levels are equivalent
                        to the possible severity level of alarms.
                thresholdTarget:
                    type: integer
                    description: A percent that is used to specify when a warning should be
                        used that indicates a Performance threshold is in danger of not being
                        met.
                conformancePeriod:
                    $ref: '#/components/schemas/TimePeriod'
                consequence:
                    type: array
                    description: A threshold crossing or a threshold ceased to be crossing results
                        in a Performance consequence.
                    items:
                        $ref: '#/components/schemas/Consequence'
                measurement:
                    $ref: '#/components/schemas/Measurement'
                performanceAlarmSpecification:
                    $ref: '#/components/schemas/PerformanceAlarmSpecification'
                tolerancePeriod:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: A threshold rule that is based on explicit definition of attributes
                that represent a Boolean expression
        SoftwareRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                name:
                    type: string
                    description: Name of the related entity.
                softwareVersion:
                    type: string
                    description: software version
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
        TargetEntitySchema:
            required:
                - '@schemaLocation'
                - '@type'
            type: object
            properties:
                '@schemaLocation':
                    type: string
                    description: This field provides a link to the schema describing the target
                        entity
                '@type':
                    type: string
                    description: Class type of the target entity
            description: The reference object to the schema and type of target entity which
                is described by a specification
        TemplateRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                href:
                    type: string
                description:
                    type: string
                name:
                    type: string
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
        ThresholdRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                name:
                    type: string
                    description: Name of the related entity.
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
        ThresholdRule:
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                name:
                    type: string
                    description: The name of the rule.
                perfAlarmSpecThresholdCrossingDescription:
                    type: string
                    description: A specific description of the threshold crossing (intended
                        to be populated e under the alarm under CrossedThreshold structure).
                thresholdRuleCondition:
                    type: string
                    description: "A concrete threshold may have two possible values: \\\"Raise\\\
            \" - a threshold was crossed or \\\"Clear\\\" - a threshold ceased crossing"
                thresholdRuleName:
                    type: string
                    description: "A word, term, or phrase by which a Performance threshold rule\
            \ is known and distinguished from other threshold rules"
                thresholdRuleSeverity:
                    type: string
                    description: A threshold can be generated in different severity levels.
                        A crossing for each level may require a different condition and possibly
                        trigger a different consequence. The supported severity levels are equivalent
                        to the possible severity level of alarms.
                consequence:
                    type: array
                    description: A threshold crossing or a threshold ceased to be crossing results
                        in a Performance consequence.
                    items:
                        $ref: '#/components/schemas/Consequence'
                measurement:
                    $ref: '#/components/schemas/Measurement'
                performanceAlarmSpecification:
                    $ref: '#/components/schemas/PerformanceAlarmSpecification'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: ThresholdRule A base entity for concrete definition of thresholds.This
                datatype  is  abstract
        TimePeriod:
            type: object
            properties:
                endDateTime:
                    type: string
                    description: "End of the time period, using IETC-RFC-3339 format"
                    format: date-time
                    example: 1985-04-12T23:20:50.52Z
                startDateTime:
                    type: string
                    description: "Start of the time period, using IETC-RFC-3339 format"
                    format: date-time
                    example: 1985-04-12T23:20:50.52Z
            description: "A period of time, either as a deadline (endDateTime only) a startDateTime\
        \ only, or both"
        Topic:
            type: object
            properties:
                id:
                    type: string
                    description: The identifier of the notification.
                href:
                    type: string
                    description: Reference of the related entity.
                contentQuery:
                    type: string
                    description: is the filter that will be applied on the content of the Event.
                headerQuery:
                    type: string
                    description: is the filter that will be applied on the Event header properties.
                name:
                    type: string
                    description: "use to identify grouping of events, per domain, per event\
            \ types, per access control-right and so on."
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: Is a event channel provided by the Event Streaming API
        Topic_Create:
            type: object
            properties:
                contentQuery:
                    type: string
                    description: is the filter that will be applied on the content of the Event.
                headerQuery:
                    type: string
                    description: is the filter that will be applied on the Event header properties.
                name:
                    type: string
                    description: "use to identify grouping of events, per domain, per event\
            \ types, per access control-right and so on."
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: |-
                Is a event channel provided by the Event Streaming API
                Skipped properties: id,href
        Violation:
            required:
                - actualValue
                - consequence
                - operator
                - referenceValue
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                actualValue:
                    type: string
                comment:
                    type: string
                consequence:
                    type: string
                operator:
                    type: string
                referenceValue:
                    type: string
                tolerance:
                    type: string
                unit:
                    type: string
                violationAverage:
                    type: string
                attachment:
                    $ref: '#/components/schemas/AttachmentRef'
                rule:
                    $ref: '#/components/schemas/RuleRef'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
        EventSubscription:
            required:
                - callback
                - id
            type: object
            properties:
                id:
                    type: string
                    description: Id of the listener
                callback:
                    type: string
                    description: The callback being registered.
                query:
                    type: string
                    description: additional data to be passed
            description: Sets the communication endpoint address the service instance must
                use to deliver notification information
        EventSubscriptionInput:
            required:
                - callback
            type: object
            properties:
                callback:
                    type: string
                    description: The callback being registered.
                query:
                    type: string
                    description: additional data to be passed
            description: Sets the communication endpoint address the service instance must
                use to deliver notification information
        AiContractSpecificationCreateEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/AiContractSpecificationCreateEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        AiContractSpecificationCreateEventPayload:
            type: object
            properties:
                aiContractSpecification:
                    $ref: '#/components/schemas/AiContractSpecification'
            description: The event data structure
        AiContractSpecificationDeleteEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/AiContractSpecificationDeleteEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        AiContractSpecificationDeleteEventPayload:
            type: object
            properties:
                aiContractSpecification:
                    $ref: '#/components/schemas/AiContractSpecification'
            description: The event data structure
        AiContractSpecificationAttributeValueChangeEvent:
            type: object
            properties:
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
                fieldPath:
                    type: string
                    description: The path identifying the object field concerned by this notification.
                event:
                    $ref: '#/components/schemas/AiContractSpecificationAttributeValueChangeEventPayload'
            description: The notification data structure
        AiContractSpecificationAttributeValueChangeEventPayload:
            type: object
            properties:
                aiContractSpecification:
                    $ref: '#/components/schemas/AiContractSpecification'
            description: The event data structure
        AiModelCreateEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/AiModelCreateEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        AiModelCreateEventPayload:
            type: object
            properties:
                aiModel:
                    $ref: '#/components/schemas/AiModel'
            description: The event data structure
        AiModelAttributeValueChangeEvent:
            type: object
            properties:
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
                fieldPath:
                    type: string
                    description: The path identifying the object field concerned by this notification.
                event:
                    $ref: '#/components/schemas/AiModelAttributeValueChangeEventPayload'
            description: The notification data structure
        AiModelAttributeValueChangeEventPayload:
            type: object
            properties:
                aiModel:
                    $ref: '#/components/schemas/AiModel'
            description: The event data structure
        AiModelStateChangeEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/AiModelStateChangeEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        AiModelStateChangeEventPayload:
            type: object
            properties:
                aiModel:
                    $ref: '#/components/schemas/AiModel'
            description: The event data structure
        AiModelDeleteEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/AiModelDeleteEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        AiModelDeleteEventPayload:
            type: object
            properties:
                aiModel:
                    $ref: '#/components/schemas/AiModel'
            description: The event data structure
        AiModelSpecificationCreateEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/AiModelSpecificationCreateEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        AiModelSpecificationCreateEventPayload:
            type: object
            properties:
                aiModelSpecification:
                    $ref: '#/components/schemas/AiModelSpecification'
            description: The event data structure
        AiModelSpecificationDeleteEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/AiModelSpecificationDeleteEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        AiModelSpecificationDeleteEventPayload:
            type: object
            properties:
                aiModelSpecification:
                    $ref: '#/components/schemas/AiModelSpecification'
            description: The event data structure
        AiModelSpecificationAttributeValueChangeEvent:
            type: object
            properties:
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
                fieldPath:
                    type: string
                    description: The path identifying the object field concerned by this notification.
                event:
                    $ref: '#/components/schemas/AiModelSpecificationAttributeValueChangeEventPayload'
            description: The notification data structure
        AiModelSpecificationAttributeValueChangeEventPayload:
            type: object
            properties:
                aiModelSpecification:
                    $ref: '#/components/schemas/AiModelSpecification'
            description: The event data structure
        AiContractCreateEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/AiContractCreateEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        AiContractCreateEventPayload:
            type: object
            properties:
                aiContract:
                    $ref: '#/components/schemas/AiContract'
            description: The event data structure
        AiContractAttributeValueChangeEvent:
            type: object
            properties:
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
                fieldPath:
                    type: string
                    description: The path identifying the object field concerned by this notification.
                event:
                    $ref: '#/components/schemas/AiContractAttributeValueChangeEventPayload'
            description: The notification data structure
        AiContractAttributeValueChangeEventPayload:
            type: object
            properties:
                aiContract:
                    $ref: '#/components/schemas/AiContract'
            description: The event data structure
        AiContractStateChangeEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/AiContractStateChangeEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        AiContractStateChangeEventPayload:
            type: object
            properties:
                aiContract:
                    $ref: '#/components/schemas/AiContract'
            description: The event data structure
        AiContractDeleteEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/AiContractDeleteEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        AiContractDeleteEventPayload:
            type: object
            properties:
                aiContract:
                    $ref: '#/components/schemas/AiContract'
            description: The event data structure
        AiContractViolationCreateEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/AiContractViolationCreateEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        AiContractViolationCreateEventPayload:
            type: object
            properties:
                aiContractViolation:
                    $ref: '#/components/schemas/AiContractViolation'
            description: The event data structure
        AiContractViolationAttributeValueChangeEvent:
            type: object
            properties:
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
                fieldPath:
                    type: string
                    description: The path identifying the object field concerned by this notification.
                event:
                    $ref: '#/components/schemas/AiContractViolationAttributeValueChangeEventPayload'
            description: The notification data structure
        AiContractViolationAttributeValueChangeEventPayload:
            type: object
            properties:
                aiContractViolation:
                    $ref: '#/components/schemas/AiContractViolation'
            description: The event data structure
        AiContractViolationDeleteEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/AiContractViolationDeleteEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        AiContractViolationDeleteEventPayload:
            type: object
            properties:
                aiContractViolation:
                    $ref: '#/components/schemas/AiContractViolation'
            description: The event data structure
        AlarmCreateEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/AlarmCreateEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        AlarmCreateEventPayload:
            type: object
            properties:
                alarm:
                    $ref: '#/components/schemas/Alarm'
            description: The event data structure
        AlarmAttributeValueChangeEvent:
            type: object
            properties:
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
                fieldPath:
                    type: string
                    description: The path identifying the object field concerned by this notification.
                event:
                    $ref: '#/components/schemas/AlarmAttributeValueChangeEventPayload'
            description: The notification data structure
        AlarmAttributeValueChangeEventPayload:
            type: object
            properties:
                alarm:
                    $ref: '#/components/schemas/Alarm'
            description: The event data structure
        AlarmStateChangeEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/AlarmStateChangeEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        AlarmStateChangeEventPayload:
            type: object
            properties:
                alarm:
                    $ref: '#/components/schemas/Alarm'
            description: The event data structure
        AlarmDeleteEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/AlarmDeleteEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        AlarmDeleteEventPayload:
            type: object
            properties:
                alarm:
                    $ref: '#/components/schemas/Alarm'
            description: The event data structure
        RuleCreateEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/RuleCreateEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        RuleCreateEventPayload:
            type: object
            properties:
                rule:
                    $ref: '#/components/schemas/Rule'
            description: The event data structure
        RuleAttributeValueChangeEvent:
            type: object
            properties:
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
                fieldPath:
                    type: string
                    description: The path identifying the object field concerned by this notification.
                event:
                    $ref: '#/components/schemas/RuleAttributeValueChangeEventPayload'
            description: The notification data structure
        RuleAttributeValueChangeEventPayload:
            type: object
            properties:
                rule:
                    $ref: '#/components/schemas/Rule'
            description: The event data structure
        RuleStateChangeEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/RuleStateChangeEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        RuleStateChangeEventPayload:
            type: object
            properties:
                rule:
                    $ref: '#/components/schemas/Rule'
            description: The event data structure
        RuleDeleteEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/RuleDeleteEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        RuleDeleteEventPayload:
            type: object
            properties:
                rule:
                    $ref: '#/components/schemas/Rule'
            description: The event data structure
        EventCreateEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/EventCreateEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        EventCreateEventPayload:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/Event'
            description: The event data structure
        MonitorCreateEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/MonitorCreateEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        MonitorCreateEventPayload:
            type: object
            properties:
                monitor:
                    $ref: '#/components/schemas/Monitor'
            description: The event data structure
        MonitorAttributeValueChangeEvent:
            type: object
            properties:
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
                fieldPath:
                    type: string
                    description: The path identifying the object field concerned by this notification.
                event:
                    $ref: '#/components/schemas/MonitorAttributeValueChangeEventPayload'
            description: The notification data structure
        MonitorAttributeValueChangeEventPayload:
            type: object
            properties:
                monitor:
                    $ref: '#/components/schemas/Monitor'
            description: The event data structure
        MonitorStateChangeEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/MonitorStateChangeEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        MonitorStateChangeEventPayload:
            type: object
            properties:
                monitor:
                    $ref: '#/components/schemas/Monitor'
            description: The event data structure
        MonitorDeleteEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/MonitorDeleteEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        MonitorDeleteEventPayload:
            type: object
            properties:
                monitor:
                    $ref: '#/components/schemas/Monitor'
            description: The event data structure
        TopicCreateEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/TopicCreateEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        TopicCreateEventPayload:
            type: object
            properties:
                topic:
                    $ref: '#/components/schemas/Topic'
            description: The event data structure
        TopicChangeEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/TopicChangeEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        TopicChangeEventPayload:
            type: object
            properties:
                topic:
                    $ref: '#/components/schemas/Topic'
            description: The event data structure
        TopicDeleteEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/TopicDeleteEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        TopicDeleteEventPayload:
            type: object
            properties:
                topic:
                    $ref: '#/components/schemas/Topic'
            description: The event data structure
        Error:
            required:
                - code
                - reason
            type: object
            properties:
                code:
                    type: string
                    description: "Application relevant detail, defined in the API or a common\
            \ list."
                reason:
                    type: string
                    description: Explanation of the reason for the error which can be shown
                        to a client user.
                message:
                    type: string
                    description: More details and corrective actions related to the error which
                        can be shown to a client user.
                status:
                    type: string
                    description: HTTP Error code extension
                referenceError:
                    type: string
                    description: URI of documentation describing the error.
                    format: uri
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class."
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class entity name."
            description: "Used when an API throws an Error, typically with a HTTP error\
        \ response-code (3xx, 4xx, 5xx)"
x-original-swagger-version: "2.0"
