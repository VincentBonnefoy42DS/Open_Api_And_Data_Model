openapi: 3.0.1
info:
    title: Shopping Cart
    description: "**TMF API Reference : TMF - 663 Shopping Cart**\n\n**Release : 19.0\
    \ - June 2019**\n\nThe Shoppoing Cart API provides a standardized mechanism for\
    \ the management of shopping carts. Including creation, update, retrieval, deletion\
    \ and notification of event. \nShopping Cart entity is used for the temporarily\
    \ selection and reservation of product offerings in e-commerce and retail purchase.\
    \ \nShopping cart supports purchase of both tangible and intangible goods and\
    \ service (e.g. handset, telecom network service). The charge includes the one-off\
    \ fee such as the fee for handset and the recurring fee such as the fee of a network\
    \ service. \nShopping Cart contains list of cart items, a reference to party or\
    \ party role (e.g. customer) or contact medium in case of unknown customer, In\
    \ addition the calculated total items price including promotions.\n\n\nCopyright\
    \ Â© TM Forum 2019. All Rights Reserved\n\n\n"
    version: 4.0.0
servers:
    -   url: https://serverRoot/tmf-api/shoppingCart/v4/
tags:
    -   name: shoppingCart
    -   name: notification listeners (client side)
    -   name: events subscription
paths:
    /shoppingCart:
        get:
            tags:
                - shoppingCart
            summary: List or find ShoppingCart objects
            description: This operation list or find ShoppingCart entities
            operationId: listShoppingCart
            parameters:
                -   name: fields
                    in: query
                    description: Comma-separated properties to be provided in response
                    schema:
                        type: string
                -   name: offset
                    in: query
                    description: Requested index for start of resources to be provided in response
                    schema:
                        type: integer
                -   name: limit
                    in: query
                    description: Requested number of resources to be provided in response
                    schema:
                        type: integer
            responses:
                "200":
                    description: Success
                    headers:
                        X-Total-Count:
                            description: Total number of items matching criteria
                            schema:
                                type: integer
                        X-Result-Count:
                            description: Actual number of items returned in the response body
                            schema:
                                type: integer
                    content:
                        application/json;charset=utf-8:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/ShoppingCart'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
        post:
            tags:
                - shoppingCart
            summary: Creates a ShoppingCart
            description: This operation creates a ShoppingCart entity.
            operationId: createShoppingCart
            requestBody:
                description: The ShoppingCart to be created
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/ShoppingCart_Create'
                required: true
            responses:
                "201":
                    description: Created
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/ShoppingCart'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: shoppingCart
    /shoppingCart/{id}:
        get:
            tags:
                - shoppingCart
            summary: Retrieves a ShoppingCart by ID
            description: This operation retrieves a ShoppingCart entity. Attribute selection
                is enabled for all first level attributes.
            operationId: retrieveShoppingCart
            parameters:
                -   name: id
                    in: path
                    description: Identifier of the ShoppingCart
                    required: true
                    schema:
                        type: string
                -   name: fields
                    in: query
                    description: Comma-separated properties to provide in response
                    schema:
                        type: string
            responses:
                "200":
                    description: Success
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/ShoppingCart'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
        delete:
            tags:
                - shoppingCart
            summary: Deletes a ShoppingCart
            description: This operation deletes a ShoppingCart entity.
            operationId: deleteShoppingCart
            parameters:
                -   name: id
                    in: path
                    description: Identifier of the ShoppingCart
                    required: true
                    schema:
                        type: string
            responses:
                "204":
                    description: Deleted
                    content: { }
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
        patch:
            tags:
                - shoppingCart
            summary: Updates partially a ShoppingCart
            description: This operation updates partially a ShoppingCart entity.
            operationId: patchShoppingCart
            parameters:
                -   name: id
                    in: path
                    description: Identifier of the ShoppingCart
                    required: true
                    schema:
                        type: string
            requestBody:
                description: The ShoppingCart to be updated
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/ShoppingCart_Update'
                required: true
            responses:
                "200":
                    description: Updated
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/ShoppingCart'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: shoppingCart
    /hub:
        post:
            tags:
                - events subscription
            summary: Register a listener
            description: "Sets the communication endpoint address the service instance must\
        \ use to deliver information about its health state, execution state, failures\
        \ and metrics."
            operationId: registerListener
            requestBody:
                description: Data containing the callback endpoint to deliver the information
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/EventSubscriptionInput'
                required: true
            responses:
                "201":
                    description: Subscribed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /hub/{id}:
        delete:
            tags:
                - events subscription
            summary: Unregister a listener
            description: "Resets the communication endpoint address the service instance\
        \ must use to deliver information about its health state, execution state,\
        \ failures and metrics."
            operationId: unregisterListener
            parameters:
                -   name: id
                    in: path
                    description: The id of the registered listener
                    required: true
                    schema:
                        type: string
            responses:
                "204":
                    description: Deleted
                    content: { }
                "400":
                    description: Bad request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
    /listener/shoppingCartCreateEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity ShoppingCartCreateEvent
            description: Example of a client listener for receiving the notification ShoppingCartCreateEvent
            operationId: listenToShoppingCartCreateEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/ShoppingCartCreateEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/shoppingCartAttributeValueChangeEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity ShoppingCartAttributeValueChangeEvent
            description: Example of a client listener for receiving the notification ShoppingCartAttributeValueChangeEvent
            operationId: listenToShoppingCartAttributeValueChangeEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/ShoppingCartAttributeValueChangeEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/shoppingCartDeleteEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity ShoppingCartDeleteEvent
            description: Example of a client listener for receiving the notification ShoppingCartDeleteEvent
            operationId: listenToShoppingCartDeleteEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/ShoppingCartDeleteEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
components:
    schemas:
        Addressable:
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class entity name"
            description: Base schema for adressable entities
        AgreementItemRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                agreementItemId:
                    type: string
                    description: Identifier of the agreement
                name:
                    type: string
                    description: Name of the related entity.
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                    example: ResourceSpecification
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                    example: https://mycsp.com:8080/tmf-api/schema/Resource/LogicalResourceSpecification.schema.json
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                    example: LogicalResourceSpecification
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: "Agreement reference. An agreement represents a contract or arrangement,\
        \ either written or verbal and sometimes enforceable by law, such as a service\
        \ level agreement or a customer price agreement. An agreement involves a number\
        \ of other business entities, such as products, services, and resources and/or\
        \ their specifications."
        BillingAccountRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier of the billing account
                href:
                    type: string
                    description: Reference of the billing account
                name:
                    type: string
                    description: Name of the billing account
                ratingType:
                    type: string
                    description: Indicates whether the account follows a specific payment option
                        such as prepaid or postpaid
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class entity name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: BillingAccount reference. A BillingAccount is a detailed description
                of a bill structure.
        CartItem:
            type: object
            properties:
                id:
                    type: string
                    description: "Identifier of the cart item (generally it is a sequence number\
            \ 01, 02, 03, ...) in the shopping cart"
                quantity:
                    type: integer
                    description: Quantity of cart items
                itemTotalPrice:
                    type: array
                    items:
                        $ref: '#/components/schemas/CartPrice'
                action:
                    $ref: '#/components/schemas/CartItemActionType'
                cartItem:
                    type: array
                    items:
                        $ref: '#/components/schemas/CartItem'
                cartItemRelationship:
                    type: array
                    items:
                        $ref: '#/components/schemas/CartItemRelationship'
                itemPrice:
                    type: array
                    items:
                        $ref: '#/components/schemas/CartPrice'
                itemTerm:
                    type: array
                    items:
                        $ref: '#/components/schemas/CartTerm'
                note:
                    type: array
                    items:
                        $ref: '#/components/schemas/Note'
                product:
                    $ref: '#/components/schemas/ProductRefOrValue'
                productOffering:
                    $ref: '#/components/schemas/ProductOfferingRef'
                status:
                    $ref: '#/components/schemas/CartItemStatusType'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class entity name"
            description: "An identified part of the shopping cart. A shopping cart  is decomposed\
        \ into one or more shopping cart item. Cart item represents a product offering\
        \ or bundled product offering that user wish to purchase, as well as the pricing\
        \ of the product offering, reference to product in case of configured characteristic\
        \ or installation address. Cart items can be related to other cart item to\
        \ related bundled offerings or reference cart Items to a shipping options"
        CartItemActionType:
            type: string
            description: action to be performed on the product
            enum:
                - add
                - modify
                - delete
                - noChange
        CartItemRelationship:
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier of the referred cart item
                relationshipType:
                    type: string
                    description: Type of the cart item relationship
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class entity name"
            description: "Relationship among cart items mainly other than hierarchical relationships\
        \ such as \"RelyOn\", \"DependentOn\", \"Shipping\" etc."
        CartItemStatusType:
            type: string
            description: Possible values for the status of the cart item
            enum:
                - active
                - saveForLater
        CartPrice:
            type: object
            properties:
                description:
                    type: string
                    description: A narrative that explains in detail the semantics of this order
                        item price.
                name:
                    type: string
                    description: A short descriptive name such as "Subscription price".
                priceType:
                    type: string
                    description: "A category that describes the price, such as recurring, discount,\
            \ allowance, penalty, and so forth"
                recurringChargePeriod:
                    type: string
                    description: "Could be month, week..."
                unitOfMeasure:
                    type: string
                    description: "Could be minutes, GB..."
                price:
                    $ref: '#/components/schemas/Price'
                priceAlteration:
                    type: array
                    items:
                        $ref: '#/components/schemas/PriceAlteration'
                productOfferingPrice:
                    $ref: '#/components/schemas/ProductOfferingPriceRef'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class entity name"
            description: "An amount, usually of money, that represents the actual price\
        \ paid by the customer for this item. May represent the total price of the\
        \ shopping cart or the total of the cart item depending on the relation"
        CartTerm:
            type: object
            properties:
                description:
                    type: string
                name:
                    type: string
                duration:
                    $ref: '#/components/schemas/Quantity'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class entity name"
        Characteristic:
            required:
                - '@type'
                - name
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier of the characteristic
                name:
                    type: string
                    description: Name of the characteristic
                valueType:
                    type: string
                    description: Data type of the value of the characteristic
                characteristicRelationship:
                    type: array
                    items:
                        $ref: '#/components/schemas/CharacteristicRelationship'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                    example: ResourceSpecification
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                    example: https://mycsp.com:8080/tmf-api/schema/Resource/LogicalResourceSpecification.schema.json
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                    example: LogicalResourceSpecification
            description: Describes a given characteristic of an object or entity through
                a name/value pair.
        CharacteristicRelationship:
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier of the characteristic
                relationshipType:
                    type: string
                    description: The type of relationship
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class entity name"
            description: Another Characteristic that is related to the current Characteristic;
        ContactMedium:
            type: object
            properties:
                mediumType:
                    type: string
                    description: "Type of the contact medium, such as: email address, telephone\
            \ number, postal address"
                preferred:
                    type: boolean
                    description: "If true, indicates that is the preferred contact medium"
                characteristic:
                    $ref: '#/components/schemas/MediumCharacteristic'
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class entity name"
            description: Indicates the contact medium that could be used to contact the
                party.
        EntityRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                name:
                    type: string
                    description: Name of the related entity.
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                    example: ResourceSpecification
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                    example: https://mycsp.com:8080/tmf-api/schema/Resource/LogicalResourceSpecification.schema.json
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                    example: LogicalResourceSpecification
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: Entity reference schema to be use for all entityRef class.
        Extensible:
            type: object
            properties:
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                    example: ResourceSpecification
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                    example: https://mycsp.com:8080/tmf-api/schema/Resource/LogicalResourceSpecification.schema.json
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                    example: LogicalResourceSpecification
            description: Base Extensible schema for use in TMForum Open-APIs
        MediumCharacteristic:
            type: object
            properties:
                city:
                    type: string
                    description: The city
                contactType:
                    type: string
                    description: "The type of contact, for example: phone number such as mobile,\
            \ fixed home, fixed office. postal address such as shipping instalationâ¦"
                country:
                    type: string
                    description: The country
                emailAddress:
                    type: string
                    description: Full email address in standard format
                faxNumber:
                    type: string
                    description: The fax number of the contact
                phoneNumber:
                    type: string
                    description: The primary phone number of the contact
                postCode:
                    type: string
                    description: Postcode
                socialNetworkId:
                    type: string
                    description: Identifier as a member of a social network
                stateOrProvince:
                    type: string
                    description: State or province
                street1:
                    type: string
                    description: Describes the street
                street2:
                    type: string
                    description: Complementary street description
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class entity name"
            description: Describes the contact medium characteristics that could be used
                to contact a party (an individual or an organization)
        Money:
            type: object
            properties:
                unit:
                    type: string
                    description: Currency (ISO4217 norm uses 3 letters to define the currency)
                value:
                    type: number
                    description: A positive floating point number
                    format: float
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class entity name"
            description: A base / value business entity used to represent money
        Note:
            type: object
            properties:
                id:
                    type: string
                    description: "Identifier of the note within its containing entity (may or\
            \ may not be globally unique, depending on provider implementation)"
                author:
                    type: string
                    description: Author of the note
                date:
                    type: string
                    description: Date of the note
                    format: date-time
                text:
                    type: string
                    description: Text of the note
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class entity name"
            description: Extra information about a given entity
        Place:
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier of the place
                href:
                    type: string
                    description: Unique reference of the place
                name:
                    type: string
                    description: "A user-friendly name for the place, such as [Paris Store],\
            \ [London Store], [Main Home]"
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class entity name"
            description: Place reference. Place defines the places where the products are
                sold or delivered.
        PlaceRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                name:
                    type: string
                    description: Name of the related entity.
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                    example: ResourceSpecification
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                    example: https://mycsp.com:8080/tmf-api/schema/Resource/LogicalResourceSpecification.schema.json
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                    example: LogicalResourceSpecification
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: Place reference. PlaceRef defines the placeRefs where the products
                are sold or delivered.
        Price:
            type: object
            properties:
                percentage:
                    type: number
                    description: Percentage to apply for ProdOfferPriceAlteration
                    format: float
                taxRate:
                    type: number
                    description: Tax rate
                    format: float
                dutyFreeAmount:
                    $ref: '#/components/schemas/Money'
                taxIncludedAmount:
                    $ref: '#/components/schemas/Money'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class entity name"
            description: "Provides all amounts (tax included, duty free, tax rate), used\
        \ currency and percentage to apply for Price Alteration."
        PriceAlteration:
            required:
                - price
                - priceType
            type: object
            properties:
                applicationDuration:
                    type: integer
                    description: Duration during which the alteration applies on the order item
                        price (for instance 2 months free of charge for the recurring charge)
                description:
                    type: string
                    description: A narrative that explains in detail the semantics of this order
                        item price alteration
                name:
                    type: string
                    description: Name of the order item price alteration
                priceType:
                    type: string
                    description: "A category that describes the price such as recurring, one\
            \ time and usage."
                priority:
                    type: integer
                    description: Priority level for applying this alteration among all the defined
                        alterations on the order item price
                recurringChargePeriod:
                    type: string
                    description: "Could be month, week..."
                unitOfMeasure:
                    type: string
                    description: "Could be minutes, GB..."
                price:
                    $ref: '#/components/schemas/Price'
                productOfferingPrice:
                    $ref: '#/components/schemas/ProductOfferingPriceRef'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class entity name"
            description: "Is an amount, usually of money, that modifies the price charged\
        \ for an order item."
        Product:
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier of the product
                href:
                    type: string
                    description: Reference of the product
                description:
                    type: string
                    description: Is the description of the product. It could be copied from
                        the description of the Product Offering.
                isBundle:
                    type: boolean
                    description: "If true, the product is a ProductBundle which is an instantiation\
            \ of a BundledProductOffering. If false, the product is a ProductComponent\
            \ which is an instantiation of a SimpleProductOffering."
                isCustomerVisible:
                    type: boolean
                    description: "If true, the product is visible by the customer."
                name:
                    type: string
                    description: Name of the product. It could be the same as the name of the
                        product offering
                orderDate:
                    type: string
                    description: Is the date when the product was ordered
                    format: date-time
                productSerialNumber:
                    type: string
                    description: Is the serial number for the product. This is typically applicable
                        to tangible products e.g. Broadband Router.
                randomAtt:
                    type: string
                startDate:
                    type: string
                    description: Is the date from which the product starts
                    format: date-time
                terminationDate:
                    type: string
                    description: Is the date when the product was terminated
                    format: date-time
                agreement:
                    type: array
                    items:
                        $ref: '#/components/schemas/AgreementItemRef'
                billingAccount:
                    $ref: '#/components/schemas/BillingAccountRef'
                place:
                    type: array
                    items:
                        $ref: '#/components/schemas/RelatedPlaceRefOrValue'
                product:
                    type: array
                    items:
                        $ref: '#/components/schemas/ProductRefOrValue'
                productCharacteristic:
                    type: array
                    items:
                        $ref: '#/components/schemas/Characteristic'
                productOffering:
                    $ref: '#/components/schemas/ProductOfferingRef'
                productOrderItem:
                    type: array
                    items:
                        $ref: '#/components/schemas/RelatedProductOrderItem'
                productPrice:
                    type: array
                    items:
                        $ref: '#/components/schemas/ProductPrice'
                productRelationship:
                    type: array
                    items:
                        $ref: '#/components/schemas/ProductRelationship'
                productSpecification:
                    $ref: '#/components/schemas/ProductSpecificationRef'
                productTerm:
                    type: array
                    items:
                        $ref: '#/components/schemas/ProductTerm'
                realizingResource:
                    type: array
                    items:
                        $ref: '#/components/schemas/ResourceRef'
                realizingService:
                    type: array
                    items:
                        $ref: '#/components/schemas/ServiceRef'
                relatedParty:
                    type: array
                    items:
                        $ref: '#/components/schemas/RelatedParty'
                status:
                    $ref: '#/components/schemas/ProductStatusType'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class entity name"
            description: A product offering procured by a customer or other interested party
                playing a party role. A product is realized as one or more service(s) and
                / or resource(s).
        ProductOfferingPriceRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                name:
                    type: string
                    description: Name of the related entity.
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                    example: ResourceSpecification
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                    example: https://mycsp.com:8080/tmf-api/schema/Resource/LogicalResourceSpecification.schema.json
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                    example: LogicalResourceSpecification
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: "ProductPriceOffering reference. An amount, usually of money, that\
        \ is asked for or allowed when a ProductOffering is bought, rented, or leased"
        ProductOfferingRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                name:
                    type: string
                    description: Name of the related entity.
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                    example: ResourceSpecification
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                    example: https://mycsp.com:8080/tmf-api/schema/Resource/LogicalResourceSpecification.schema.json
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                    example: LogicalResourceSpecification
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: "ProductOffering reference. A product offering represents entities\
        \ that are orderable from the provider of the catalog, this resource includes\
        \ pricing information."
        ProductPrice:
            required:
                - price
                - priceType
            type: object
            properties:
                description:
                    type: string
                    description: A narrative that explains in detail the semantics of this product
                        price.
                name:
                    type: string
                    description: A short descriptive name such as "Subscription price".
                priceType:
                    type: string
                    description: "A category that describes the price, such as recurring, discount,\
            \ allowance, penalty, and so forth."
                recurringChargePeriod:
                    type: string
                    description: "Could be month, week..."
                unitOfMeasure:
                    type: string
                    description: "Could be minutes, GB..."
                billingAccount:
                    $ref: '#/components/schemas/BillingAccountRef'
                price:
                    $ref: '#/components/schemas/Price'
                productOfferingPrice:
                    $ref: '#/components/schemas/ProductOfferingPriceRef'
                productPriceAlteration:
                    type: array
                    items:
                        $ref: '#/components/schemas/PriceAlteration'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class entity name"
            description: "An amount, usually of money, that represents the actual price\
        \ paid by a Customer for a purchase, a rent or a lease of a Product. The price\
        \ is valid for a defined period of time."
        ProductRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                name:
                    type: string
                    description: Name of the related entity.
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                    example: ResourceSpecification
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                    example: https://mycsp.com:8080/tmf-api/schema/Resource/LogicalResourceSpecification.schema.json
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                    example: LogicalResourceSpecification
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
        ProductRefOrValue:
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier of the product
                href:
                    type: string
                    description: Reference of the product
                description:
                    type: string
                    description: Is the description of the product. It could be copied from
                        the description of the Product Offering.
                isBundle:
                    type: boolean
                    description: "If true, the product is a ProductBundle which is an instantiation\
            \ of a BundledProductOffering. If false, the product is a ProductComponent\
            \ which is an instantiation of a SimpleProductOffering."
                isCustomerVisible:
                    type: boolean
                    description: "If true, the product is visible by the customer."
                name:
                    type: string
                    description: Name of the product. It could be the same as the name of the
                        product offering
                orderDate:
                    type: string
                    description: Is the date when the product was ordered
                    format: date-time
                productSerialNumber:
                    type: string
                    description: Is the serial number for the product. This is typically applicable
                        to tangible products e.g. Broadband Router.
                randomAtt:
                    type: string
                startDate:
                    type: string
                    description: Is the date from which the product starts
                    format: date-time
                terminationDate:
                    type: string
                    description: Is the date when the product was terminated
                    format: date-time
                agreement:
                    type: array
                    items:
                        $ref: '#/components/schemas/AgreementItemRef'
                billingAccount:
                    $ref: '#/components/schemas/BillingAccountRef'
                place:
                    type: array
                    items:
                        $ref: '#/components/schemas/RelatedPlaceRefOrValue'
                product:
                    type: array
                    items:
                        $ref: '#/components/schemas/ProductRefOrValue'
                productCharacteristic:
                    type: array
                    items:
                        $ref: '#/components/schemas/Characteristic'
                productOffering:
                    $ref: '#/components/schemas/ProductOfferingRef'
                productOrderItem:
                    type: array
                    items:
                        $ref: '#/components/schemas/RelatedProductOrderItem'
                productPrice:
                    type: array
                    items:
                        $ref: '#/components/schemas/ProductPrice'
                productRelationship:
                    type: array
                    items:
                        $ref: '#/components/schemas/ProductRelationship'
                productSpecification:
                    $ref: '#/components/schemas/ProductSpecificationRef'
                productTerm:
                    type: array
                    items:
                        $ref: '#/components/schemas/ProductTerm'
                realizingResource:
                    type: array
                    items:
                        $ref: '#/components/schemas/ResourceRef'
                realizingService:
                    type: array
                    items:
                        $ref: '#/components/schemas/ServiceRef'
                relatedParty:
                    type: array
                    items:
                        $ref: '#/components/schemas/RelatedParty'
                status:
                    $ref: '#/components/schemas/ProductStatusType'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                    example: ResourceSpecification
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                    example: https://mycsp.com:8080/tmf-api/schema/Resource/LogicalResourceSpecification.schema.json
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                    example: LogicalResourceSpecification
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: "A product to be created defined by value or existing defined by\
        \ reference. The polymorphic attributes @type, @schemaLocation & @referredType\
        \ are related to the product entity and not the RelatedProductRefOrValue class\
        \ itself"
        ProductRelationship:
            required:
                - product
                - relationshipType
            type: object
            properties:
                relationshipType:
                    type: string
                    description: "Type of the product relationship, such as [bundled] if the\
            \ product is a bundle and you want to describe the bundled products inside\
            \ this bundle; [reliesOn] if the product needs another already owned product\
            \ to rely on (e.g. an option on an already owned mobile access product)\
            \ [targets] or [isTargeted] (depending on the way of expressing the link)\
            \ for any other kind of links that may be useful"
                product:
                    $ref: '#/components/schemas/ProductRefOrValue'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class entity name"
            description: "Linked products to the one instantiate, such as [bundled] if the\
        \ product is a bundle and you want to describe the bundled products inside\
        \ this bundle; [reliesOn] if the product needs another already owned product\
        \ to rely on (e.g. an option on an already owned mobile access product) [targets]\
        \ or [isTargeted] (depending on the way of expressing the link) for any other\
        \ kind of links that may be useful"
        ProductSpecificationRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                name:
                    type: string
                    description: Name of the related entity.
                version:
                    type: string
                    description: Version of the product specification
                targetProductSchema:
                    $ref: '#/components/schemas/TargetProductSchema'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                    example: ResourceSpecification
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                    example: https://mycsp.com:8080/tmf-api/schema/Resource/LogicalResourceSpecification.schema.json
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                    example: LogicalResourceSpecification
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: "Product specification reference: A ProductSpecification is a detailed\
        \ description of a tangible or intangible object made available externally\
        \ in the form of a ProductOffering to customers or other parties playing a\
        \ party role."
        ProductStatusType:
            type: string
            description: Possible values for the status of the product
            enum:
                - created
                - pendingActive
                - cancelled
                - active
                - pendingTerminate
                - terminated
                - suspended
                - 'aborted '
        ProductTerm:
            type: object
            properties:
                description:
                    type: string
                    description: Description of the productTerm
                name:
                    type: string
                    description: Name of the productTerm
                duration:
                    $ref: '#/components/schemas/Quantity'
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class entity name"
            description: Description of a productTerm linked to this product. This represent
                a commitment with a duration
        Quantity:
            type: object
            properties:
                amount:
                    type: number
                    description: Numeric value in a given unit
                    format: float
                    default: 1.0
                units:
                    type: string
                    description: Unit
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class entity name"
            description: An amount in a given unit
        RelatedParty:
            required:
                - '@referredType'
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                name:
                    type: string
                    description: Name of the related entity.
                role:
                    type: string
                    description: Role played by the related party
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                    example: ResourceSpecification
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                    example: https://mycsp.com:8080/tmf-api/schema/Resource/LogicalResourceSpecification.schema.json
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                    example: LogicalResourceSpecification
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: Related Entity reference. A related party defines party or party
                role linked to a specific entity.
        RelatedPlaceRefOrValue:
            required:
                - role
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier of the place
                href:
                    type: string
                    description: Unique reference of the place
                name:
                    type: string
                    description: "A user-friendly name for the place, such as [Paris Store],\
            \ [London Store], [Main Home]"
                role:
                    type: string
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                    example: ResourceSpecification
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                    example: https://mycsp.com:8080/tmf-api/schema/Resource/LogicalResourceSpecification.schema.json
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                    example: LogicalResourceSpecification
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: "Related Entity reference. A related place defines a place described\
        \ by reference or by value linked to a specific entity. The polymorphic attributes\
        \ @type, @schemaLocation & @referredType are related to the place entity and\
        \ not the RelatedPlaceRefOrValue class itself"
        RelatedProductOrderItem:
            required:
                - orderItemId
                - productOrderId
            type: object
            properties:
                orderItemAction:
                    type: string
                    description: Action of the order item for this product
                orderItemId:
                    type: string
                    description: Identifier of the order item where the product was managed
                productOrderHref:
                    type: string
                    description: Reference of the related entity.
                productOrderId:
                    type: string
                    description: Unique identifier of a related entity.
                role:
                    type: string
                    description: role of the product order item for this product
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class entity name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: RelatedProductOrderItem (ProductOrder item) .The product order
                item which triggered product creation/change/termination.
        ResourceRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                name:
                    type: string
                    description: Name of the resource
                value:
                    type: string
                    description: "The resource value that can be used to identify a resource\
            \ with a public key (e.g.: a tel nr, an msisdn)"
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                    example: ResourceSpecification
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                    example: https://mycsp.com:8080/tmf-api/schema/Resource/LogicalResourceSpecification.schema.json
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                    example: LogicalResourceSpecification
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
        ServiceRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                name:
                    type: string
                    description: Name of the related entity.
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                    example: ResourceSpecification
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                    example: https://mycsp.com:8080/tmf-api/schema/Resource/LogicalResourceSpecification.schema.json
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                    example: LogicalResourceSpecification
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: "Service reference, for when Service is used by other entities"
        ShoppingCart:
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier created on provider side (e.g. Order Capture
                        system)
                href:
                    type: string
                    description: Hyperlink to access the shopping cart
                cartItem:
                    type: array
                    items:
                        $ref: '#/components/schemas/CartItem'
                cartTotalPrice:
                    type: array
                    description: "Total amount of the shopping cart, usually of money, that\
            \ represents the actual price paid by the Customer for cart (considering\
            \ only \"Active\" cart items)"
                    items:
                        $ref: '#/components/schemas/CartPrice'
                contactMedium:
                    type: array
                    items:
                        $ref: '#/components/schemas/ContactMedium'
                relatedParty:
                    type: array
                    items:
                        $ref: '#/components/schemas/RelatedParty'
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class entity name"
            description: "Shopping Cart resource is used for the temporarily selection and\
        \ reservation of product offerings in e-commerce, call center and retail purchase.\
        \ Shopping cart supports purchase of both physical and digital goods and service\
        \ (e.g. handset, telecom network service). Shopping Cart contain list of cart\
        \ items, a reference to customer (partyRole) or contact medium in case customer\
        \ not exist, and the total items price including promotions"
        ShoppingCart_Create:
            type: object
            properties:
                cartItem:
                    type: array
                    items:
                        $ref: '#/components/schemas/CartItem'
                cartTotalPrice:
                    type: array
                    description: "Total amount of the shopping cart, usually of money, that\
            \ represents the actual price paid by the Customer for cart (considering\
            \ only \"Active\" cart items)"
                    items:
                        $ref: '#/components/schemas/CartPrice'
                contactMedium:
                    type: array
                    items:
                        $ref: '#/components/schemas/ContactMedium'
                relatedParty:
                    type: array
                    items:
                        $ref: '#/components/schemas/RelatedParty'
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class entity name"
            description: |-
                Shopping Cart resource is used for the temporarily selection and reservation of product offerings in e-commerce, call center and retail purchase. Shopping cart supports purchase of both physical and digital goods and service (e.g. handset, telecom network service). Shopping Cart contain list of cart items, a reference to customer (partyRole) or contact medium in case customer not exist, and the total items price including promotions
                Skipped properties: id,href
        ShoppingCart_Update:
            type: object
            properties:
                cartItem:
                    type: array
                    items:
                        $ref: '#/components/schemas/CartItem'
                contactMedium:
                    type: array
                    items:
                        $ref: '#/components/schemas/ContactMedium'
                relatedParty:
                    type: array
                    items:
                        $ref: '#/components/schemas/RelatedParty'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class entity name"
            description: |-
                Shopping Cart resource is used for the temporarily selection and reservation of product offerings in e-commerce, call center and retail purchase. Shopping cart supports purchase of both physical and digital goods and service (e.g. handset, telecom network service). Shopping Cart contain list of cart items, a reference to customer (partyRole) or contact medium in case customer not exist, and the total items price including promotions
                Skipped properties: id,href,validFor,cartTotalPrice
        TargetProductSchema:
            required:
                - '@schemaLocation'
                - '@type'
            type: object
            properties:
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: This field provides a link to the schema describing the target
                        product
                    format: uri
                '@type':
                    type: string
                    description: Class type of the target product
            description: The reference object to the schema and type of target product which
                is described by product specification
        TimePeriod:
            type: object
            properties:
                endDateTime:
                    type: string
                    description: "End of the time period, using IETC-RFC-3339 format"
                    format: date-time
                    example: 1985-04-12T23:20:50.52Z
                startDateTime:
                    type: string
                    description: "Start of the time period, using IETC-RFC-3339 format. If you\
            \ define a start, you must also define an end"
                    format: date-time
                    example: 1985-04-12T23:20:50.52Z
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class entity name"
            description: "A period of time, either as a deadline (endDateTime only) a startDateTime\
        \ only, or both"
        EventSubscription:
            required:
                - callback
                - id
            type: object
            properties:
                id:
                    type: string
                    description: Id of the listener
                callback:
                    type: string
                    description: The callback being registered.
                query:
                    type: string
                    description: additional data to be passed
            description: Sets the communication endpoint address the service instance must
                use to deliver notification information
        EventSubscriptionInput:
            required:
                - callback
            type: object
            properties:
                callback:
                    type: string
                    description: The callback being registered.
                query:
                    type: string
                    description: additional data to be passed
            description: Sets the communication endpoint address the service instance must
                use to deliver notification information
        ShoppingCartCreateEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/ShoppingCartCreateEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        ShoppingCartCreateEventPayload:
            type: object
            properties:
                shoppingCart:
                    $ref: '#/components/schemas/ShoppingCart'
            description: The event data structure
        ShoppingCartAttributeValueChangeEvent:
            type: object
            properties:
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
                fieldPath:
                    type: string
                    description: The path identifying the object field concerned by this notification.
                event:
                    $ref: '#/components/schemas/ShoppingCartAttributeValueChangeEventPayload'
            description: The notification data structure
        ShoppingCartAttributeValueChangeEventPayload:
            type: object
            properties:
                shoppingCart:
                    $ref: '#/components/schemas/ShoppingCart'
            description: The event data structure
        ShoppingCartDeleteEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/ShoppingCartDeleteEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        ShoppingCartDeleteEventPayload:
            type: object
            properties:
                shoppingCart:
                    $ref: '#/components/schemas/ShoppingCart'
            description: The event data structure
        Error:
            required:
                - code
                - reason
            type: object
            properties:
                code:
                    type: string
                    description: "Application relevant detail, defined in the API or a common\
            \ list."
                reason:
                    type: string
                    description: Explanation of the reason for the error which can be shown
                        to a client user.
                message:
                    type: string
                    description: More details and corrective actions related to the error which
                        can be shown to a client user.
                status:
                    type: string
                    description: HTTP Error code extension
                referenceError:
                    type: string
                    description: URI of documentation describing the error.
                    format: uri
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class."
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class entity name."
            description: "Used when an API throws an Error, typically with a HTTP error\
        \ response-code (3xx, 4xx, 5xx)"
x-original-swagger-version: "2.0"
