openapi: 3.0.1
info:
    title: Resource Function Activation and Configuration
    description: Provisioning and lifecycle management of Resource Functions
    version: 4.0.0
servers:
    -   url: https://serverRoot/tmf-api/resourceFunctionActivation/v4/
tags:
    -   name: resourceFunction
    -   name: monitor
    -   name: heal
    -   name: scale
    -   name: migrate
    -   name: notification listeners (client side)
    -   name: events subscription
paths:
    /resourceFunction:
        get:
            tags:
                - resourceFunction
            summary: List or find ResourceFunction objects
            description: This operation list or find ResourceFunction entities
            operationId: listResourceFunction
            parameters:
                -   name: fields
                    in: query
                    description: Comma-separated properties to be provided in response
                    schema:
                        type: string
                -   name: offset
                    in: query
                    description: Requested index for start of resources to be provided in response
                    schema:
                        type: integer
                -   name: limit
                    in: query
                    description: Requested number of resources to be provided in response
                    schema:
                        type: integer
            responses:
                "200":
                    description: Success
                    headers:
                        X-Total-Count:
                            description: Total number of items matching criteria
                            schema:
                                type: integer
                        X-Result-Count:
                            description: Actual number of items returned in the response body
                            schema:
                                type: integer
                    content:
                        application/json;charset=utf-8:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/ResourceFunction'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
        post:
            tags:
                - resourceFunction
            summary: Creates a ResourceFunction
            description: This operation creates a ResourceFunction entity.
            operationId: createResourceFunction
            requestBody:
                description: The ResourceFunction to be created
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/ResourceFunction_Create'
                required: true
            responses:
                "201":
                    description: Created
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/ResourceFunction'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: resourceFunction
    /resourceFunction/{id}:
        get:
            tags:
                - resourceFunction
            summary: Retrieves a ResourceFunction by ID
            description: This operation retrieves a ResourceFunction entity. Attribute selection
                is enabled for all first level attributes.
            operationId: retrieveResourceFunction
            parameters:
                -   name: id
                    in: path
                    description: Identifier of the ResourceFunction
                    required: true
                    schema:
                        type: string
                -   name: fields
                    in: query
                    description: Comma-separated properties to provide in response
                    schema:
                        type: string
            responses:
                "200":
                    description: Success
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/ResourceFunction'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
        delete:
            tags:
                - resourceFunction
            summary: Deletes a ResourceFunction
            description: This operation deletes a ResourceFunction entity.
            operationId: deleteResourceFunction
            parameters:
                -   name: id
                    in: path
                    description: Identifier of the ResourceFunction
                    required: true
                    schema:
                        type: string
            responses:
                "204":
                    description: Deleted
                    content: { }
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
        patch:
            tags:
                - resourceFunction
            summary: Updates partially a ResourceFunction
            description: This operation updates partially a ResourceFunction entity.
            operationId: patchResourceFunction
            parameters:
                -   name: id
                    in: path
                    description: Identifier of the ResourceFunction
                    required: true
                    schema:
                        type: string
            requestBody:
                description: The ResourceFunction to be updated
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/ResourceFunction_Update'
                required: true
            responses:
                "200":
                    description: Updated
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/ResourceFunction'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: resourceFunction
    /monitor:
        get:
            tags:
                - monitor
            summary: List or find Monitor objects
            description: This operation list or find Monitor entities
            operationId: listMonitor
            parameters:
                -   name: fields
                    in: query
                    description: Comma-separated properties to be provided in response
                    schema:
                        type: string
                -   name: offset
                    in: query
                    description: Requested index for start of resources to be provided in response
                    schema:
                        type: integer
                -   name: limit
                    in: query
                    description: Requested number of resources to be provided in response
                    schema:
                        type: integer
            responses:
                "200":
                    description: Success
                    headers:
                        X-Total-Count:
                            description: Total number of items matching criteria
                            schema:
                                type: integer
                        X-Result-Count:
                            description: Actual number of items returned in the response body
                            schema:
                                type: integer
                    content:
                        application/json;charset=utf-8:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Monitor'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
    /monitor/{id}:
        get:
            tags:
                - monitor
            summary: Retrieves a Monitor by ID
            description: This operation retrieves a Monitor entity. Attribute selection
                is enabled for all first level attributes.
            operationId: retrieveMonitor
            parameters:
                -   name: id
                    in: path
                    description: Identifier of the Monitor
                    required: true
                    schema:
                        type: string
                -   name: fields
                    in: query
                    description: Comma-separated properties to provide in response
                    schema:
                        type: string
            responses:
                "200":
                    description: Success
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Monitor'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
    /heal:
        get:
            tags:
                - heal
            summary: List or find Heal objects
            description: This operation list or find Heal entities
            operationId: listHeal
            parameters:
                -   name: fields
                    in: query
                    description: Comma-separated properties to be provided in response
                    schema:
                        type: string
                -   name: offset
                    in: query
                    description: Requested index for start of resources to be provided in response
                    schema:
                        type: integer
                -   name: limit
                    in: query
                    description: Requested number of resources to be provided in response
                    schema:
                        type: integer
            responses:
                "200":
                    description: Success
                    headers:
                        X-Total-Count:
                            description: Total number of items matching criteria
                            schema:
                                type: integer
                        X-Result-Count:
                            description: Actual number of items returned in the response body
                            schema:
                                type: integer
                    content:
                        application/json;charset=utf-8:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Heal'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
        post:
            tags:
                - heal
            summary: Creates a Heal
            description: This operation creates a Heal entity.
            operationId: createHeal
            requestBody:
                description: The Heal to be created
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/Heal_Create'
                required: true
            responses:
                "201":
                    description: Created
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Heal'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: heal
    /heal/{id}:
        get:
            tags:
                - heal
            summary: Retrieves a Heal by ID
            description: This operation retrieves a Heal entity. Attribute selection is
                enabled for all first level attributes.
            operationId: retrieveHeal
            parameters:
                -   name: id
                    in: path
                    description: Identifier of the Heal
                    required: true
                    schema:
                        type: string
                -   name: fields
                    in: query
                    description: Comma-separated properties to provide in response
                    schema:
                        type: string
            responses:
                "200":
                    description: Success
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Heal'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
    /scale:
        get:
            tags:
                - scale
            summary: List or find Scale objects
            description: This operation list or find Scale entities
            operationId: listScale
            parameters:
                -   name: fields
                    in: query
                    description: Comma-separated properties to be provided in response
                    schema:
                        type: string
                -   name: offset
                    in: query
                    description: Requested index for start of resources to be provided in response
                    schema:
                        type: integer
                -   name: limit
                    in: query
                    description: Requested number of resources to be provided in response
                    schema:
                        type: integer
            responses:
                "200":
                    description: Success
                    headers:
                        X-Total-Count:
                            description: Total number of items matching criteria
                            schema:
                                type: integer
                        X-Result-Count:
                            description: Actual number of items returned in the response body
                            schema:
                                type: integer
                    content:
                        application/json;charset=utf-8:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Scale'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
        post:
            tags:
                - scale
            summary: Creates a Scale
            description: This operation creates a Scale entity.
            operationId: createScale
            requestBody:
                description: The Scale to be created
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/Scale_Create'
                required: true
            responses:
                "201":
                    description: Created
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Scale'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: scale
    /scale/{id}:
        get:
            tags:
                - scale
            summary: Retrieves a Scale by ID
            description: This operation retrieves a Scale entity. Attribute selection is
                enabled for all first level attributes.
            operationId: retrieveScale
            parameters:
                -   name: id
                    in: path
                    description: Identifier of the Scale
                    required: true
                    schema:
                        type: string
                -   name: fields
                    in: query
                    description: Comma-separated properties to provide in response
                    schema:
                        type: string
            responses:
                "200":
                    description: Success
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Scale'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
    /migrate:
        get:
            tags:
                - migrate
            summary: List or find Migrate objects
            description: This operation list or find Migrate entities
            operationId: listMigrate
            parameters:
                -   name: fields
                    in: query
                    description: Comma-separated properties to be provided in response
                    schema:
                        type: string
                -   name: offset
                    in: query
                    description: Requested index for start of resources to be provided in response
                    schema:
                        type: integer
                -   name: limit
                    in: query
                    description: Requested number of resources to be provided in response
                    schema:
                        type: integer
            responses:
                "200":
                    description: Success
                    headers:
                        X-Total-Count:
                            description: Total number of items matching criteria
                            schema:
                                type: integer
                        X-Result-Count:
                            description: Actual number of items returned in the response body
                            schema:
                                type: integer
                    content:
                        application/json;charset=utf-8:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Migrate'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
        post:
            tags:
                - migrate
            summary: Creates a Migrate
            description: This operation creates a Migrate entity.
            operationId: createMigrate
            requestBody:
                description: The Migrate to be created
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/Migrate_Create'
                required: true
            responses:
                "201":
                    description: Created
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Migrate'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: migrate
    /migrate/{id}:
        get:
            tags:
                - migrate
            summary: Retrieves a Migrate by ID
            description: This operation retrieves a Migrate entity. Attribute selection
                is enabled for all first level attributes.
            operationId: retrieveMigrate
            parameters:
                -   name: id
                    in: path
                    description: Identifier of the Migrate
                    required: true
                    schema:
                        type: string
                -   name: fields
                    in: query
                    description: Comma-separated properties to provide in response
                    schema:
                        type: string
            responses:
                "200":
                    description: Success
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Migrate'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
    /hub:
        post:
            tags:
                - events subscription
            summary: Register a listener
            description: "Sets the communication endpoint address the service instance must\
        \ use to deliver information about its health state, execution state, failures\
        \ and metrics."
            operationId: registerListener
            requestBody:
                description: Data containing the callback endpoint to deliver the information
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/EventSubscriptionInput'
                required: true
            responses:
                "201":
                    description: Subscribed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /hub/{id}:
        delete:
            tags:
                - events subscription
            summary: Unregister a listener
            description: "Resets the communication endpoint address the service instance\
        \ must use to deliver information about its health state, execution state,\
        \ failures and metrics."
            operationId: unregisterListener
            parameters:
                -   name: id
                    in: path
                    description: The id of the registered listener
                    required: true
                    schema:
                        type: string
            responses:
                "204":
                    description: Deleted
                    content: { }
                "400":
                    description: Bad request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
    /listener/resourceFunctionCreateEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity ResourceFunctionCreateEvent
            description: Example of a client listener for receiving the notification ResourceFunctionCreateEvent
            operationId: listenToResourceFunctionCreateEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/ResourceFunctionCreateEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/resourceFunctionAttributeValueChangeEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity ResourceFunctionAttributeValueChangeEvent
            description: Example of a client listener for receiving the notification ResourceFunctionAttributeValueChangeEvent
            operationId: listenToResourceFunctionAttributeValueChangeEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/ResourceFunctionAttributeValueChangeEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/resourceFunctionStateChangeEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity ResourceFunctionStateChangeEvent
            description: Example of a client listener for receiving the notification ResourceFunctionStateChangeEvent
            operationId: listenToResourceFunctionStateChangeEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/ResourceFunctionStateChangeEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/resourceFunctionDeleteEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity ResourceFunctionDeleteEvent
            description: Example of a client listener for receiving the notification ResourceFunctionDeleteEvent
            operationId: listenToResourceFunctionDeleteEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/ResourceFunctionDeleteEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/monitorCreateEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity MonitorCreateEvent
            description: Example of a client listener for receiving the notification MonitorCreateEvent
            operationId: listenToMonitorCreateEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/MonitorCreateEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/monitorAttributeValueChangeEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity MonitorAttributeValueChangeEvent
            description: Example of a client listener for receiving the notification MonitorAttributeValueChangeEvent
            operationId: listenToMonitorAttributeValueChangeEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/MonitorAttributeValueChangeEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/monitorStateChangeEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity MonitorStateChangeEvent
            description: Example of a client listener for receiving the notification MonitorStateChangeEvent
            operationId: listenToMonitorStateChangeEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/MonitorStateChangeEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/monitorDeleteEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity MonitorDeleteEvent
            description: Example of a client listener for receiving the notification MonitorDeleteEvent
            operationId: listenToMonitorDeleteEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/MonitorDeleteEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/healCreateEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity HealCreateEvent
            description: Example of a client listener for receiving the notification HealCreateEvent
            operationId: listenToHealCreateEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/HealCreateEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/healAttributeValueChangeEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity HealAttributeValueChangeEvent
            description: Example of a client listener for receiving the notification HealAttributeValueChangeEvent
            operationId: listenToHealAttributeValueChangeEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/HealAttributeValueChangeEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/healStateChangeEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity HealStateChangeEvent
            description: Example of a client listener for receiving the notification HealStateChangeEvent
            operationId: listenToHealStateChangeEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/HealStateChangeEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/healDeleteEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity HealDeleteEvent
            description: Example of a client listener for receiving the notification HealDeleteEvent
            operationId: listenToHealDeleteEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/HealDeleteEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/scaleCreateEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity ScaleCreateEvent
            description: Example of a client listener for receiving the notification ScaleCreateEvent
            operationId: listenToScaleCreateEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/ScaleCreateEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/scaleAttributeValueChangeEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity ScaleAttributeValueChangeEvent
            description: Example of a client listener for receiving the notification ScaleAttributeValueChangeEvent
            operationId: listenToScaleAttributeValueChangeEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/ScaleAttributeValueChangeEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/scaleStateChangeEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity ScaleStateChangeEvent
            description: Example of a client listener for receiving the notification ScaleStateChangeEvent
            operationId: listenToScaleStateChangeEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/ScaleStateChangeEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/scaleDeleteEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity ScaleDeleteEvent
            description: Example of a client listener for receiving the notification ScaleDeleteEvent
            operationId: listenToScaleDeleteEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/ScaleDeleteEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/migrateCreateEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity MigrateCreateEvent
            description: Example of a client listener for receiving the notification MigrateCreateEvent
            operationId: listenToMigrateCreateEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/MigrateCreateEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/migrateAttributeValueChangeEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity MigrateAttributeValueChangeEvent
            description: Example of a client listener for receiving the notification MigrateAttributeValueChangeEvent
            operationId: listenToMigrateAttributeValueChangeEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/MigrateAttributeValueChangeEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/migrateStateChangeEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity MigrateStateChangeEvent
            description: Example of a client listener for receiving the notification MigrateStateChangeEvent
            operationId: listenToMigrateStateChangeEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/MigrateStateChangeEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/migrateDeleteEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity MigrateDeleteEvent
            description: Example of a client listener for receiving the notification MigrateDeleteEvent
            operationId: listenToMigrateDeleteEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/MigrateDeleteEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
components:
    schemas:
        Addressable:
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
            description: Base schema for adressable entities
        Any:
            type: object
        Attachment:
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier for this particular attachment
                    example: 4aafacbd-11ff-4dc8-b445-305f2215715f
                href:
                    type: string
                    description: URI for this Attachment
                    format: uri
                    example: http://host/Attachment/4aafacbd-11ff-4dc8-b445-305f2215715f
                attachmentType:
                    type: string
                    description: "Attachment type such as video, picture"
                    example: video
                content:
                    type: string
                    description: "The actual contents of the attachment object, if embedded,\
            \ encoded as base64"
                    format: base64
                description:
                    type: string
                    description: A narrative text describing the content of the attachment
                    example: Photograph of the Product
                mimeType:
                    type: string
                    description: "Attachment mime type such as extension file for video, picture\
            \ and document"
                name:
                    type: string
                    description: The name of the attachment
                url:
                    type: string
                    description: "Uniform Resource Locator, is a web page address (a subset\
            \ of URI)"
                    format: uri
                    example: http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f
                size:
                    $ref: '#/components/schemas/Quantity'
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: "Complements the description of an element (for instance a product)\
        \ through video, pictures..."
        AttachmentRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: Unique-Identifier for this attachment
                href:
                    type: string
                    description: URL serving as reference for the attachment resource
                    format: uri
                description:
                    type: string
                    description: A narrative text describing the content of the attachment
                name:
                    type: string
                    description: Name of the related entity.
                url:
                    type: string
                    description: Link to the attachment media/content
                    format: uri
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: "Attachment reference. An attachment complements the description\
        \ of an element (for instance a product) through video, pictures"
        AttachmentRefOrValue:
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier for this particular attachment
                    example: 4aafacbd-11ff-4dc8-b445-305f2215715f
                href:
                    type: string
                    description: URI for this Attachment
                    format: uri
                    example: http://host/Attachment/4aafacbd-11ff-4dc8-b445-305f2215715f
                attachmentType:
                    type: string
                    description: "Attachment type such as video, picture"
                    example: video
                content:
                    type: string
                    description: "The actual contents of the attachment object, if embedded,\
            \ encoded as base64"
                    format: base64
                description:
                    type: string
                    description: A narrative text describing the content of the attachment
                    example: Photograph of the Product
                mimeType:
                    type: string
                    description: "Attachment mime type such as extension file for video, picture\
            \ and document"
                name:
                    type: string
                    description: The name of the attachment
                url:
                    type: string
                    description: "Uniform Resource Locator, is a web page address (a subset\
            \ of URI)"
                    format: uri
                    example: http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f
                size:
                    $ref: '#/components/schemas/Quantity'
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: "An attachment by value or by reference. An attachment complements\
        \ the description of an element, for example through a document, a video,\
        \ a picture."
        Characteristic:
            required:
                - name
                - value
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier of the characteristic
                name:
                    type: string
                    description: Name of the characteristic
                valueType:
                    type: string
                    description: Data type of the value of the characteristic
                characteristicRelationship:
                    type: array
                    items:
                        $ref: '#/components/schemas/CharacteristicRelationship'
                value:
                    $ref: '#/components/schemas/Any'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: Describes a given characteristic of an object or entity through
                a name/value pair.
        CharacteristicRelationship:
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier of the characteristic
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                relationshipType:
                    type: string
                    description: The type of relationship
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: Another Characteristic that is related to the current Characteristic;
        Connection:
            required:
                - associationType
                - endpoint
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier for graph edge.
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                associationType:
                    type: string
                    description: Association type.
                name:
                    type: string
                    description: Descriptive name for graph edge.
                endpoint:
                    $ref: '#/components/schemas/EndpointRef'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: An edge in a resource graph.
        ConnectionPointRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                name:
                    type: string
                    description: Name of the related entity.
                version:
                    type: string
                    description: Connection point version
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: Connection point reference. A connection point provides a service
                access point (SAP) for input and/or output of the resource function.
        ConstraintRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                name:
                    type: string
                    description: Name of the related entity.
                version:
                    type: string
                    description: constraint version
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: Constraint reference. The Constraint resource represents a policy/rule
                applied to an entity or entity spec.
        EndpointRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                isRoot:
                    type: boolean
                    description: "Directionality: true when endpoint is a source, false when\
            \ a sink. If true for all endpoints connectivity is bidirectional. Default\
            \ is true."
                    default: true
                name:
                    type: string
                    description: Name of the related entity.
                connectionPoint:
                    $ref: '#/components/schemas/ConnectionPointRef'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: A vertex in a resource graph.
        Entity:
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: Base entity schema for use in TMForum Open-APIs
        EntityRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                name:
                    type: string
                    description: Name of the related entity.
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: Entity reference schema to be use for all entityRef class.
        Extensible:
            type: object
            properties:
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: Base Extensible schema for use in TMForum Open-APIs
        Feature:
            required:
                - featureCharacteristic
                - name
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier of the feature.
                isBundle:
                    type: boolean
                    description: True if this is a feature group. Default is false.
                isEnabled:
                    type: boolean
                    description: True if this feature is enabled. Default is true.
                name:
                    type: string
                    description: This is the name for the feature.
                constraint:
                    type: array
                    description: This is a list of feature constraints.
                    items:
                        $ref: '#/components/schemas/ConstraintRef'
                featureCharacteristic:
                    minItems: 1
                    type: array
                    description: This is a list of Characteristics for a particular feature.
                    items:
                        $ref: '#/components/schemas/Characteristic'
                featureRelationship:
                    type: array
                    items:
                        $ref: '#/components/schemas/FeatureRelationship'
            description: Configuration feature.
        FeatureRelationship:
            required:
                - name
                - relationshipType
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier of the target feature.
                name:
                    type: string
                    description: This is the name of the target feature.
                relationshipType:
                    type: string
                    description: This is the type of the feature relationship.
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
            description: Configuration feature
        HeaderItem:
            required:
                - name
                - value
            type: object
            properties:
                name:
                    type: string
                    description: "The name of the header item, e.g. locale"
                value:
                    type: string
                    description: "The value of the header item, e.g. en-us"
            description: An item typically included in a request or response
        Heal:
            required:
                - cause
                - degreeOfHealing
                - resourceFunction
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier of the Heal task resource
                href:
                    type: string
                    description: Reference to the Heal task resource
                    format: uri
                cause:
                    type: string
                    description: Reason why healing is being requested
                degreeOfHealing:
                    type: string
                    description: Indicates the degree of healing required
                healAction:
                    type: string
                    description: Exact action to be taken as part of the heal process or a pointer
                        to a script to be run
                name:
                    type: string
                    description: Name of the Heal task resource
                startTime:
                    type: string
                    description: The time when the heal action needs to commence. This allows
                        a delay to be added
                additionalParms:
                    type: array
                    description: Additional parameters to be sent to the heal action as name
                        value pairs
                    items:
                        $ref: '#/components/schemas/Characteristic'
                healPolicy:
                    $ref: '#/components/schemas/HealPolicyRef'
                resourceFunction:
                    $ref: '#/components/schemas/ResourceFunctionRef'
                state:
                    $ref: '#/components/schemas/TaskStateType'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: Task Resource used to request healing of a Resource Function
        Heal_Create:
            required:
                - cause
                - degreeOfHealing
                - resourceFunction
            type: object
            properties:
                cause:
                    type: string
                    description: Reason why healing is being requested
                degreeOfHealing:
                    type: string
                    description: Indicates the degree of healing required
                healAction:
                    type: string
                    description: Exact action to be taken as part of the heal process or a pointer
                        to a script to be run
                name:
                    type: string
                    description: Name of the Heal task resource
                startTime:
                    type: string
                    description: The time when the heal action needs to commence. This allows
                        a delay to be added
                additionalParms:
                    type: array
                    description: Additional parameters to be sent to the heal action as name
                        value pairs
                    items:
                        $ref: '#/components/schemas/Characteristic'
                healPolicy:
                    $ref: '#/components/schemas/HealPolicyRef'
                resourceFunction:
                    $ref: '#/components/schemas/ResourceFunctionRef'
                state:
                    $ref: '#/components/schemas/TaskStateType'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: |-
                Task Resource used to request healing of a Resource Function
                Skipped properties: id,href
        HealPolicyRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                name:
                    type: string
                    description: Name of the related entity.
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: Heal policy reference.
        LogicalResource:
            required:
                - href
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                category:
                    type: string
                    description: "Category of the concrete resource. e.g Gold, Silver for MSISDN\
            \ concrete resource"
                description:
                    type: string
                    description: free-text description of the resource
                endOperatingDate:
                    type: string
                    description: A date time( DateTime). The date till the resource is operating
                    format: date-time
                name:
                    type: string
                    description: A string used to give a name to the resource
                resourceVersion:
                    type: string
                    description: A field that identifies the specific version of an instance
                        of a resource.
                startOperatingDate:
                    type: string
                    description: A date time( DateTime). The date from which the resource is
                        operating
                    format: date-time
                value:
                    type: string
                    description: the value of the logical resource. E.g '0746712345' for  MSISDN's
                activationFeature:
                    type: array
                    description: Configuration features
                    items:
                        $ref: '#/components/schemas/Feature'
                administrativeState:
                    $ref: '#/components/schemas/ResourceAdministrativeStateType'
                attachment:
                    type: array
                    items:
                        $ref: '#/components/schemas/AttachmentRefOrValue'
                note:
                    type: array
                    items:
                        $ref: '#/components/schemas/Note'
                operationalState:
                    $ref: '#/components/schemas/ResourceOperationalStateType'
                place:
                    $ref: '#/components/schemas/RelatedPlaceRefOrValue'
                relatedParty:
                    type: array
                    items:
                        $ref: '#/components/schemas/RelatedParty'
                resourceCharacteristic:
                    type: array
                    items:
                        $ref: '#/components/schemas/Characteristic'
                resourceRelationship:
                    type: array
                    items:
                        $ref: '#/components/schemas/ResourceRelationship'
                resourceSpecification:
                    $ref: '#/components/schemas/ResourceSpecificationRef'
                resourceStatus:
                    $ref: '#/components/schemas/ResourceStatusType'
                usageState:
                    $ref: '#/components/schemas/ResourceUsageStateType'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: "Logic resource is a type of resource that describes the common\
        \ set of attributes shared by all concrete logical resources (e.g. TPE, MSISDN,\
        \ IP Addresses) in the inventory."
        Migrate:
            required:
                - cause
                - resourceFunction
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier of the Migrate task resource
                href:
                    type: string
                    description: Reference to the Migrate task resource
                    format: uri
                adminStateModification:
                    type: string
                    description: SubState required before migrate is carried out
                cause:
                    type: string
                    description: Reason why migration is being requested
                completionMode:
                    type: string
                    description: In what mode is the migrate operation to be performed
                name:
                    type: string
                    description: Name of the Migrate task resource
                priority:
                    type: integer
                    description: Priority of the migrate operation
                startTime:
                    type: string
                    description: The time when the migration needs to commence. This allows
                        a delay to be added
                addConnectionPoint:
                    type: array
                    description: Connection points to be added when function is migrated
                    items:
                        $ref: '#/components/schemas/ConnectionPointRef'
                characteristics:
                    type: array
                    description: Additional attributes to pass to the migrate operation
                    items:
                        $ref: '#/components/schemas/Characteristic'
                place:
                    $ref: '#/components/schemas/PlaceRef'
                removeConnectionPoint:
                    type: array
                    description: Connection points to be removed when function is migrated
                    items:
                        $ref: '#/components/schemas/ConnectionPointRef'
                resourceFunction:
                    $ref: '#/components/schemas/ResourceFunctionRef'
                state:
                    $ref: '#/components/schemas/TaskStateType'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: Task resource used to request migration of the Resource Function
        Migrate_Create:
            required:
                - cause
                - resourceFunction
            type: object
            properties:
                adminStateModification:
                    type: string
                    description: SubState required before migrate is carried out
                cause:
                    type: string
                    description: Reason why migration is being requested
                completionMode:
                    type: string
                    description: In what mode is the migrate operation to be performed
                name:
                    type: string
                    description: Name of the Migrate task resource
                priority:
                    type: integer
                    description: Priority of the migrate operation
                startTime:
                    type: string
                    description: The time when the migration needs to commence. This allows
                        a delay to be added
                addConnectionPoint:
                    type: array
                    description: Connection points to be added when function is migrated
                    items:
                        $ref: '#/components/schemas/ConnectionPointRef'
                characteristics:
                    type: array
                    description: Additional attributes to pass to the migrate operation
                    items:
                        $ref: '#/components/schemas/Characteristic'
                place:
                    $ref: '#/components/schemas/PlaceRef'
                removeConnectionPoint:
                    type: array
                    description: Connection points to be removed when function is migrated
                    items:
                        $ref: '#/components/schemas/ConnectionPointRef'
                resourceFunction:
                    $ref: '#/components/schemas/ResourceFunctionRef'
                state:
                    $ref: '#/components/schemas/TaskStateType'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: |-
                Task resource used to request migration of the Resource Function
                Skipped properties: id,href
        Monitor:
            type: object
            properties:
                id:
                    type: string
                    description: Identifier of an instance of the monitor. Required to be unique
                        within the resource type.  Used in URIs as the identifier for specific
                        instances of a type
                href:
                    type: string
                    description: reference to this monitor
                sourceHref:
                    type: string
                    description: The monitored resource href
                state:
                    type: string
                    description: "The Monitor state of the resource.  InProgress, InError, Completed"
                request:
                    $ref: '#/components/schemas/Request'
                response:
                    $ref: '#/components/schemas/Response'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: Monitoring of resources
        Note:
            type: object
            properties:
                id:
                    type: string
                    description: Identifier of the note within its containing entity
                    example: ""
                author:
                    type: string
                    description: Author of the note
                    example: ""
                date:
                    type: string
                    description: Date of the note
                    format: date-time
                text:
                    type: string
                    description: Text of the note
                    example: ""
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: Extra information about a given entity
        Place:
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier of the place
                href:
                    type: string
                    description: Unique reference of the place
                name:
                    type: string
                    description: "A user-friendly name for the place, such as [Paris Store],\
            \ [London Store], [Main Home]"
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: Place reference. Place defines the places where the products are
                sold or delivered.
        PlaceRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                name:
                    type: string
                    description: Name of the related entity.
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: Place reference. PlaceRef defines the placeRefs where the products
                are sold or delivered.
        Quantity:
            type: object
            properties:
                amount:
                    type: number
                    description: Numeric value in a given unit
                    format: float
                    default: 1.0
                units:
                    type: string
                    description: Unit
            description: An amount in a given unit
        RelatedParty:
            required:
                - '@referredType'
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                name:
                    type: string
                    description: Name of the related entity.
                role:
                    type: string
                    description: Role played by the related party
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: Related Entity reference. A related party defines party or party
                role linked to a specific entity.
        RelatedPlaceRefOrValue:
            required:
                - role
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier of the place
                href:
                    type: string
                    description: Unique reference of the place
                name:
                    type: string
                    description: "A user-friendly name for the place, such as [Paris Store],\
            \ [London Store], [Main Home]"
                role:
                    type: string
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: "Related Entity reference. A related place defines a place described\
        \ by reference or by value linked to a specific entity. The polymorphic attributes\
        \ @type, @schemaLocation & @referredType are related to the place entity and\
        \ not the RelatedPlaceRefOrValue class itself"
        Request:
            required:
                - body
                - header
            type: object
            properties:
                body:
                    type: string
                    description: The body of the request. For example for an HTTP request might
                        contain content of a form .
                method:
                    type: string
                    description: "The protocol of the request, e.g. http"
                to:
                    type: string
                    description: "The target of the request, e.g. a URL for an HTTP request"
                header:
                    minItems: 1
                    type: array
                    description: "Items included in the header of the request. For example for\
            \ an HTTP request might contain requested locale, basic authentication."
                    items:
                        $ref: '#/components/schemas/HeaderItem'
            description: A response to a request
        Resource:
            required:
                - href
                - id
            type: object
            properties:
                id:
                    type: string
                    description: Identifier of an instance of the resource. Required to be unique
                        within the resource type.  Used in URIs as the identifier for specific
                        instances of a type.
                href:
                    type: string
                    description: The URI for the object itself.
                category:
                    type: string
                    description: "Category of the concrete resource. e.g Gold, Silver for MSISDN\
            \ concrete resource"
                description:
                    type: string
                    description: free-text description of the resource
                endOperatingDate:
                    type: string
                    description: A date time( DateTime). The date till the resource is operating
                    format: date-time
                name:
                    type: string
                    description: A string used to give a name to the resource
                resourceVersion:
                    type: string
                    description: A field that identifies the specific version of an instance
                        of a resource.
                startOperatingDate:
                    type: string
                    description: A date time( DateTime). The date from which the resource is
                        operating
                    format: date-time
                activationFeature:
                    type: array
                    description: Configuration features
                    items:
                        $ref: '#/components/schemas/Feature'
                administrativeState:
                    $ref: '#/components/schemas/ResourceAdministrativeStateType'
                attachment:
                    type: array
                    items:
                        $ref: '#/components/schemas/AttachmentRefOrValue'
                note:
                    type: array
                    items:
                        $ref: '#/components/schemas/Note'
                operationalState:
                    $ref: '#/components/schemas/ResourceOperationalStateType'
                place:
                    $ref: '#/components/schemas/RelatedPlaceRefOrValue'
                relatedParty:
                    type: array
                    items:
                        $ref: '#/components/schemas/RelatedParty'
                resourceCharacteristic:
                    type: array
                    items:
                        $ref: '#/components/schemas/Characteristic'
                resourceRelationship:
                    type: array
                    items:
                        $ref: '#/components/schemas/ResourceRelationship'
                resourceSpecification:
                    $ref: '#/components/schemas/ResourceSpecificationRef'
                resourceStatus:
                    $ref: '#/components/schemas/ResourceStatusType'
                usageState:
                    $ref: '#/components/schemas/ResourceUsageStateType'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: "Resource is an abstract entity that describes the common set of\
        \ attributes shared by all concrete resources (e.g. TPE, EQUIPMENT) in the\
        \ inventory."
        ResourceAdministrativeStateType:
            type: string
            description: ResourceAdministrativeStateType enumerations
            enum:
                - locked
                - unlocked
                - shutdown
        ResourceFunction:
            required:
                - href
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                category:
                    type: string
                    description: "Category of the concrete resource. e.g Gold, Silver for MSISDN\
            \ concrete resource"
                description:
                    type: string
                    description: free-text description of the resource
                endOperatingDate:
                    type: string
                    description: A date time( DateTime). The date till the resource is operating
                    format: date-time
                functionType:
                    type: string
                    description: A type of the Resource Function as specified by the provider
                        of the API.
                name:
                    type: string
                    description: A string used to give a name to the resource
                priority:
                    type: integer
                    description: Priority of the Resource Function. Decides what happens in
                        a contention scenario.
                resourceVersion:
                    type: string
                    description: A field that identifies the specific version of an instance
                        of a resource.
                role:
                    type: string
                    description: Role of the Resource Function. Used when Resource Function
                        is a component of a composite Resource Function and the exact role of
                        the service within the composite is not clear from descriptor/location.
                startOperatingDate:
                    type: string
                    description: A date time( DateTime). The date from which the resource is
                        operating
                    format: date-time
                value:
                    type: string
                    description: the value of the logical resource. E.g '0746712345' for  MSISDN's
                activationFeature:
                    type: array
                    description: Configuration features
                    items:
                        $ref: '#/components/schemas/Feature'
                administrativeState:
                    $ref: '#/components/schemas/ResourceAdministrativeStateType'
                attachment:
                    type: array
                    items:
                        $ref: '#/components/schemas/AttachmentRefOrValue'
                autoModification:
                    type: array
                    description: List of the kinds of auto-modifications that are applied to
                        a given network service e.g what can be scaled.
                    items:
                        $ref: '#/components/schemas/Characteristic'
                connectionPoint:
                    type: array
                    description: External connection points of the resource function. These
                        are the service access points (SAP) where inputs and outputs of the function
                        are available.
                    items:
                        $ref: '#/components/schemas/ConnectionPointRef'
                connectivity:
                    type: array
                    description: Internal connectivity of contained resource functions.
                    items:
                        $ref: '#/components/schemas/ResourceGraph'
                note:
                    type: array
                    items:
                        $ref: '#/components/schemas/Note'
                operationalState:
                    $ref: '#/components/schemas/ResourceOperationalStateType'
                place:
                    $ref: '#/components/schemas/RelatedPlaceRefOrValue'
                relatedParty:
                    type: array
                    items:
                        $ref: '#/components/schemas/RelatedParty'
                resourceCharacteristic:
                    type: array
                    items:
                        $ref: '#/components/schemas/Characteristic'
                resourceRelationship:
                    type: array
                    items:
                        $ref: '#/components/schemas/ResourceRelationship'
                resourceSpecification:
                    $ref: '#/components/schemas/ResourceSpecificationRef'
                resourceStatus:
                    $ref: '#/components/schemas/ResourceStatusType'
                schedule:
                    type: array
                    description: This is a reference to a schedule. Allows consumers to schedule
                        modifications to the service at certain times.
                    items:
                        $ref: '#/components/schemas/ScheduleRef'
                usageState:
                    $ref: '#/components/schemas/ResourceUsageStateType'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: A ResourceFunction is a behavior to transform inputs of any nature
                into outputs of any nature independently from the way it is provided.
        ResourceFunction_Create:
            required:
                - name
                - resourceSpecification
            type: object
            properties:
                category:
                    type: string
                    description: "Category of the concrete resource. e.g Gold, Silver for MSISDN\
            \ concrete resource"
                description:
                    type: string
                    description: free-text description of the resource
                endOperatingDate:
                    type: string
                    description: A date time( DateTime). The date till the resource is operating
                    format: date-time
                functionType:
                    type: string
                    description: A type of the Resource Function as specified by the provider
                        of the API.
                name:
                    type: string
                    description: A string used to give a name to the resource
                priority:
                    type: integer
                    description: Priority of the Resource Function. Decides what happens in
                        a contention scenario.
                resourceVersion:
                    type: string
                    description: A field that identifies the specific version of an instance
                        of a resource.
                role:
                    type: string
                    description: Role of the Resource Function. Used when Resource Function
                        is a component of a composite Resource Function and the exact role of
                        the service within the composite is not clear from descriptor/location.
                startOperatingDate:
                    type: string
                    description: A date time( DateTime). The date from which the resource is
                        operating
                    format: date-time
                value:
                    type: string
                    description: the value of the logical resource. E.g '0746712345' for  MSISDN's
                activationFeature:
                    type: array
                    description: Configuration features
                    items:
                        $ref: '#/components/schemas/Feature'
                administrativeState:
                    $ref: '#/components/schemas/ResourceAdministrativeStateType'
                attachment:
                    type: array
                    items:
                        $ref: '#/components/schemas/AttachmentRefOrValue'
                autoModification:
                    type: array
                    description: List of the kinds of auto-modifications that are applied to
                        a given network service e.g what can be scaled.
                    items:
                        $ref: '#/components/schemas/Characteristic'
                connectionPoint:
                    type: array
                    description: External connection points of the resource function. These
                        are the service access points (SAP) where inputs and outputs of the function
                        are available.
                    items:
                        $ref: '#/components/schemas/ConnectionPointRef'
                connectivity:
                    type: array
                    description: Internal connectivity of contained resource functions.
                    items:
                        $ref: '#/components/schemas/ResourceGraph'
                note:
                    type: array
                    items:
                        $ref: '#/components/schemas/Note'
                operationalState:
                    $ref: '#/components/schemas/ResourceOperationalStateType'
                place:
                    $ref: '#/components/schemas/RelatedPlaceRefOrValue'
                relatedParty:
                    type: array
                    items:
                        $ref: '#/components/schemas/RelatedParty'
                resourceCharacteristic:
                    type: array
                    items:
                        $ref: '#/components/schemas/Characteristic'
                resourceRelationship:
                    type: array
                    items:
                        $ref: '#/components/schemas/ResourceRelationship'
                resourceSpecification:
                    $ref: '#/components/schemas/ResourceSpecificationRef'
                resourceStatus:
                    $ref: '#/components/schemas/ResourceStatusType'
                schedule:
                    type: array
                    description: This is a reference to a schedule. Allows consumers to schedule
                        modifications to the service at certain times.
                    items:
                        $ref: '#/components/schemas/ScheduleRef'
                usageState:
                    $ref: '#/components/schemas/ResourceUsageStateType'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: |-
                A ResourceFunction is a behavior to transform inputs of any nature into outputs of any nature independently from the way it is provided.
                Skipped properties: id,href
        ResourceFunction_Update:
            type: object
            properties:
                category:
                    type: string
                    description: "Category of the concrete resource. e.g Gold, Silver for MSISDN\
            \ concrete resource"
                description:
                    type: string
                    description: free-text description of the resource
                endOperatingDate:
                    type: string
                    description: A date time( DateTime). The date till the resource is operating
                    format: date-time
                functionType:
                    type: string
                    description: A type of the Resource Function as specified by the provider
                        of the API.
                name:
                    type: string
                    description: A string used to give a name to the resource
                priority:
                    type: integer
                    description: Priority of the Resource Function. Decides what happens in
                        a contention scenario.
                resourceVersion:
                    type: string
                    description: A field that identifies the specific version of an instance
                        of a resource.
                role:
                    type: string
                    description: Role of the Resource Function. Used when Resource Function
                        is a component of a composite Resource Function and the exact role of
                        the service within the composite is not clear from descriptor/location.
                startOperatingDate:
                    type: string
                    description: A date time( DateTime). The date from which the resource is
                        operating
                    format: date-time
                value:
                    type: string
                    description: the value of the logical resource. E.g '0746712345' for  MSISDN's
                activationFeature:
                    type: array
                    description: Configuration features
                    items:
                        $ref: '#/components/schemas/Feature'
                administrativeState:
                    $ref: '#/components/schemas/ResourceAdministrativeStateType'
                attachment:
                    type: array
                    items:
                        $ref: '#/components/schemas/AttachmentRefOrValue'
                autoModification:
                    type: array
                    description: List of the kinds of auto-modifications that are applied to
                        a given network service e.g what can be scaled.
                    items:
                        $ref: '#/components/schemas/Characteristic'
                connectionPoint:
                    type: array
                    description: External connection points of the resource function. These
                        are the service access points (SAP) where inputs and outputs of the function
                        are available.
                    items:
                        $ref: '#/components/schemas/ConnectionPointRef'
                connectivity:
                    type: array
                    description: Internal connectivity of contained resource functions.
                    items:
                        $ref: '#/components/schemas/ResourceGraph'
                note:
                    type: array
                    items:
                        $ref: '#/components/schemas/Note'
                operationalState:
                    $ref: '#/components/schemas/ResourceOperationalStateType'
                place:
                    $ref: '#/components/schemas/RelatedPlaceRefOrValue'
                relatedParty:
                    type: array
                    items:
                        $ref: '#/components/schemas/RelatedParty'
                resourceCharacteristic:
                    type: array
                    items:
                        $ref: '#/components/schemas/Characteristic'
                resourceRelationship:
                    type: array
                    items:
                        $ref: '#/components/schemas/ResourceRelationship'
                resourceSpecification:
                    $ref: '#/components/schemas/ResourceSpecificationRef'
                resourceStatus:
                    $ref: '#/components/schemas/ResourceStatusType'
                schedule:
                    type: array
                    description: This is a reference to a schedule. Allows consumers to schedule
                        modifications to the service at certain times.
                    items:
                        $ref: '#/components/schemas/ScheduleRef'
                usageState:
                    $ref: '#/components/schemas/ResourceUsageStateType'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: |-
                A ResourceFunction is a behavior to transform inputs of any nature into outputs of any nature independently from the way it is provided.
                Skipped properties: id,href
        ResourceFunctionRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                name:
                    type: string
                    description: Name of the related entity.
                version:
                    type: string
                    description: Resource function version
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: Resource Function reference.
        ResourceGraph:
            required:
                - connection
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier of the resource graph.
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                description:
                    type: string
                    description: Description of the resource graph.
                name:
                    type: string
                    description: Descriptive name for the resource graph.
                connection:
                    minItems: 1
                    type: array
                    description: Resource graph edges.
                    items:
                        $ref: '#/components/schemas/Connection'
                graphRelationship:
                    type: array
                    description: Relationships to other resource graphs.
                    items:
                        $ref: '#/components/schemas/ResourceGraphRelationship'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: Resource graph
        ResourceGraphRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                name:
                    type: string
                    description: Name of the related entity.
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: Resource graph reference.
        ResourceGraphRelationship:
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                relationshipType:
                    type: string
                    description: Semantic of the relationship.
                resourceGraph:
                    $ref: '#/components/schemas/ResourceGraphRef'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: Describes links between resource graphs.
        ResourceOperationalStateType:
            type: string
            description: ResourceOperationalStateType enumerations
            enum:
                - enable
                - disable
        ResourceRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                name:
                    type: string
                    description: Name of the related entity.
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
        ResourceRefOrValue:
            required:
                - href
                - id
            type: object
            properties:
                id:
                    type: string
                    description: Identifier of an instance of the resource. Required to be unique
                        within the resource type.  Used in URIs as the identifier for specific
                        instances of a type.
                href:
                    type: string
                    description: The URI for the object itself.
                category:
                    type: string
                    description: "Category of the concrete resource. e.g Gold, Silver for MSISDN\
            \ concrete resource"
                description:
                    type: string
                    description: free-text description of the resource
                endOperatingDate:
                    type: string
                    description: A date time( DateTime). The date till the resource is operating
                    format: date-time
                name:
                    type: string
                    description: A string used to give a name to the resource
                resourceVersion:
                    type: string
                    description: A field that identifies the specific version of an instance
                        of a resource.
                startOperatingDate:
                    type: string
                    description: A date time( DateTime). The date from which the resource is
                        operating
                    format: date-time
                activationFeature:
                    type: array
                    description: Configuration features
                    items:
                        $ref: '#/components/schemas/Feature'
                administrativeState:
                    $ref: '#/components/schemas/ResourceAdministrativeStateType'
                attachment:
                    type: array
                    items:
                        $ref: '#/components/schemas/AttachmentRefOrValue'
                note:
                    type: array
                    items:
                        $ref: '#/components/schemas/Note'
                operationalState:
                    $ref: '#/components/schemas/ResourceOperationalStateType'
                place:
                    $ref: '#/components/schemas/RelatedPlaceRefOrValue'
                relatedParty:
                    type: array
                    items:
                        $ref: '#/components/schemas/RelatedParty'
                resourceCharacteristic:
                    type: array
                    items:
                        $ref: '#/components/schemas/Characteristic'
                resourceRelationship:
                    type: array
                    items:
                        $ref: '#/components/schemas/ResourceRelationship'
                resourceSpecification:
                    $ref: '#/components/schemas/ResourceSpecificationRef'
                resourceStatus:
                    $ref: '#/components/schemas/ResourceStatusType'
                usageState:
                    $ref: '#/components/schemas/ResourceUsageStateType'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: "Resource is an abstract entity that describes the common set of\
        \ attributes shared by all concrete resources. The polymorphic attributes\
        \ @type, @schemaLocation & @referredType are related to the Resource entity\
        \ and not the related ResourceRefOrValue class itself"
        ResourceRelationship:
            required:
                - relationshipType
                - resource
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                relationshipType:
                    type: string
                    description: "Type of the resource relationship, such as [bundled] if the\
            \ resource is a bundle and you want to describe the bundled resources\
            \ inside this bundle; [reliesOn] if the resource needs another already\
            \ owned resource to rely on (eg: an option on an already owned mobile\
            \ access resource) [targets] or [isTargeted] (depending on the way of\
            \ expressing the link) for any other kind of links that may be useful"
                    example: bundled
                resource:
                    $ref: '#/components/schemas/ResourceRefOrValue'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: "Linked resources to the one instantiate, such as [bundled] if\
        \ the resource is a bundle and you want to describe the bundled resources\
        \ inside this bundle; [reliesOn] if the resource needs another already owned\
        \ resource to rely on (e.g. an option on an already owned mobile access resource)\
        \ [targets] or [isTargeted] (depending on the way of expressing the link)\
        \ for any other kind of links that may be useful"
        ResourceSpecificationRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                name:
                    type: string
                    description: Name of the related entity.
                version:
                    type: string
                    description: Resource Specification version
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: |-
                Resources are physical or non-physical components (or some combination of these) within an enterprise's infrastructure or inventory. They are typically consumed or used by services (for example a physical port assigned to a service) or contribute to the realization of a Product (for example, a SIM card). They can be drawn from the Application, Computing and Network domains, and include, for example, Network Elements, software, IT systems, content and information, and technology components.
                A ResourceSpecification is an abstract base class for representing a generic means for implementing a particular type of Resource. In essence, a ResourceSpecification defines the common attributes and relationships of a set of related Resources, while Resource defines a specific instance that is based on a particular ResourceSpecification.
        ResourceStatusType:
            type: string
            description: ResourceStatusType enumerations
            enum:
                - standby
                - alarm
                - available
                - reserved
                - unknown
                - suspended
        ResourceUsageStateType:
            type: string
            description: ResourceUsageStateType enumerations
            enum:
                - idle
                - active
                - busy
        Response:
            required:
                - body
                - header
            type: object
            properties:
                body:
                    type: string
                    description: The body of the response. For example for an HTTP response
                        might contain HTML for rendering.
                statusCode:
                    type: string
                    description: "The status of the response. For example for an HTTP response\
            \ would be codes such as 200, 400, etc."
                header:
                    minItems: 1
                    type: array
                    description: Items included in the header of the response. For example for
                        an HTTP response might contain negotiated locale.
                    items:
                        $ref: '#/components/schemas/HeaderItem'
            description: A response to a request
        Scale:
            required:
                - numberOfSteps
                - resourceFunction
                - scaleType
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier of the Scale task resource
                href:
                    type: string
                    description: Reference to the Scale task resource
                aspectId:
                    type: string
                    description: Scaling aspect is the dimension along which the Resource Function
                        needs to be scaled. The id of the aspect is provided here
                name:
                    type: string
                    description: Name of the Scale task resource
                numberOfSteps:
                    type: integer
                    description: Number of scaling steps in the direction indicated by type
                        of scale
                    example: 2
                scaleType:
                    type: string
                    description: Type of scaling requested
                resourceFunction:
                    $ref: '#/components/schemas/ResourceFunctionRef'
                schedule:
                    type: array
                    description: Schedule for the scale. If not provided then needs to be actioned
                        immediately
                    items:
                        $ref: '#/components/schemas/ScheduleRef'
                state:
                    $ref: '#/components/schemas/TaskStateType'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: Task Resource used to request scaling of a Resource Function
        Scale_Create:
            required:
                - numberOfSteps
                - resourceFunction
                - scaleType
            type: object
            properties:
                aspectId:
                    type: string
                    description: Scaling aspect is the dimension along which the Resource Function
                        needs to be scaled. The id of the aspect is provided here
                name:
                    type: string
                    description: Name of the Scale task resource
                numberOfSteps:
                    type: integer
                    description: Number of scaling steps in the direction indicated by type
                        of scale
                    example: 2
                scaleType:
                    type: string
                    description: Type of scaling requested
                resourceFunction:
                    $ref: '#/components/schemas/ResourceFunctionRef'
                schedule:
                    type: array
                    description: Schedule for the scale. If not provided then needs to be actioned
                        immediately
                    items:
                        $ref: '#/components/schemas/ScheduleRef'
                state:
                    $ref: '#/components/schemas/TaskStateType'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: |-
                Task Resource used to request scaling of a Resource Function
                Skipped properties: id,href
        ScheduleRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                name:
                    type: string
                    description: Name of the related entity.
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: Schedule reference.
        TaskStateType:
            type: string
            description: Possible values for the state of a task
            enum:
                - accepted
                - terminatedWithError
                - inProgress
                - done
        TimePeriod:
            type: object
            properties:
                endDateTime:
                    type: string
                    description: "End of the time period, using IETC-RFC-3339 format"
                    format: date-time
                    example: 1985-04-12T23:20:50.52Z
                startDateTime:
                    type: string
                    description: "Start of the time period, using IETC-RFC-3339 format"
                    format: date-time
                    example: 1985-04-12T23:20:50.52Z
            description: "A period of time, either as a deadline (endDateTime only) a startDateTime\
        \ only, or both"
        EventSubscription:
            required:
                - callback
                - id
            type: object
            properties:
                id:
                    type: string
                    description: Id of the listener
                callback:
                    type: string
                    description: The callback being registered.
                query:
                    type: string
                    description: additional data to be passed
            description: Sets the communication endpoint address the service instance must
                use to deliver notification information
        EventSubscriptionInput:
            required:
                - callback
            type: object
            properties:
                callback:
                    type: string
                    description: The callback being registered.
                query:
                    type: string
                    description: additional data to be passed
            description: Sets the communication endpoint address the service instance must
                use to deliver notification information
        ResourceFunctionCreateEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/ResourceFunctionCreateEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        ResourceFunctionCreateEventPayload:
            type: object
            properties:
                resourceFunction:
                    $ref: '#/components/schemas/ResourceFunction'
            description: The event data structure
        ResourceFunctionAttributeValueChangeEvent:
            type: object
            properties:
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
                fieldPath:
                    type: string
                    description: The path identifying the object field concerned by this notification.
                event:
                    $ref: '#/components/schemas/ResourceFunctionAttributeValueChangeEventPayload'
            description: The notification data structure
        ResourceFunctionAttributeValueChangeEventPayload:
            type: object
            properties:
                resourceFunction:
                    $ref: '#/components/schemas/ResourceFunction'
            description: The event data structure
        ResourceFunctionStateChangeEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/ResourceFunctionStateChangeEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        ResourceFunctionStateChangeEventPayload:
            type: object
            properties:
                resourceFunction:
                    $ref: '#/components/schemas/ResourceFunction'
            description: The event data structure
        ResourceFunctionDeleteEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/ResourceFunctionDeleteEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        ResourceFunctionDeleteEventPayload:
            type: object
            properties:
                resourceFunction:
                    $ref: '#/components/schemas/ResourceFunction'
            description: The event data structure
        MonitorCreateEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/MonitorCreateEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        MonitorCreateEventPayload:
            type: object
            properties:
                monitor:
                    $ref: '#/components/schemas/Monitor'
            description: The event data structure
        MonitorAttributeValueChangeEvent:
            type: object
            properties:
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
                fieldPath:
                    type: string
                    description: The path identifying the object field concerned by this notification.
                event:
                    $ref: '#/components/schemas/MonitorAttributeValueChangeEventPayload'
            description: The notification data structure
        MonitorAttributeValueChangeEventPayload:
            type: object
            properties:
                monitor:
                    $ref: '#/components/schemas/Monitor'
            description: The event data structure
        MonitorStateChangeEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/MonitorStateChangeEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        MonitorStateChangeEventPayload:
            type: object
            properties:
                monitor:
                    $ref: '#/components/schemas/Monitor'
            description: The event data structure
        MonitorDeleteEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/MonitorDeleteEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        MonitorDeleteEventPayload:
            type: object
            properties:
                monitor:
                    $ref: '#/components/schemas/Monitor'
            description: The event data structure
        HealCreateEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/HealCreateEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        HealCreateEventPayload:
            type: object
            properties:
                heal:
                    $ref: '#/components/schemas/Heal'
            description: The event data structure
        HealAttributeValueChangeEvent:
            type: object
            properties:
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
                fieldPath:
                    type: string
                    description: The path identifying the object field concerned by this notification.
                event:
                    $ref: '#/components/schemas/HealAttributeValueChangeEventPayload'
            description: The notification data structure
        HealAttributeValueChangeEventPayload:
            type: object
            properties:
                heal:
                    $ref: '#/components/schemas/Heal'
            description: The event data structure
        HealStateChangeEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/HealStateChangeEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        HealStateChangeEventPayload:
            type: object
            properties:
                heal:
                    $ref: '#/components/schemas/Heal'
            description: The event data structure
        HealDeleteEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/HealDeleteEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        HealDeleteEventPayload:
            type: object
            properties:
                heal:
                    $ref: '#/components/schemas/Heal'
            description: The event data structure
        ScaleCreateEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/ScaleCreateEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        ScaleCreateEventPayload:
            type: object
            properties:
                scale:
                    $ref: '#/components/schemas/Scale'
            description: The event data structure
        ScaleAttributeValueChangeEvent:
            type: object
            properties:
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
                fieldPath:
                    type: string
                    description: The path identifying the object field concerned by this notification.
                event:
                    $ref: '#/components/schemas/ScaleAttributeValueChangeEventPayload'
            description: The notification data structure
        ScaleAttributeValueChangeEventPayload:
            type: object
            properties:
                scale:
                    $ref: '#/components/schemas/Scale'
            description: The event data structure
        ScaleStateChangeEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/ScaleStateChangeEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        ScaleStateChangeEventPayload:
            type: object
            properties:
                scale:
                    $ref: '#/components/schemas/Scale'
            description: The event data structure
        ScaleDeleteEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/ScaleDeleteEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        ScaleDeleteEventPayload:
            type: object
            properties:
                scale:
                    $ref: '#/components/schemas/Scale'
            description: The event data structure
        MigrateCreateEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/MigrateCreateEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        MigrateCreateEventPayload:
            type: object
            properties:
                migrate:
                    $ref: '#/components/schemas/Migrate'
            description: The event data structure
        MigrateAttributeValueChangeEvent:
            type: object
            properties:
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
                fieldPath:
                    type: string
                    description: The path identifying the object field concerned by this notification.
                event:
                    $ref: '#/components/schemas/MigrateAttributeValueChangeEventPayload'
            description: The notification data structure
        MigrateAttributeValueChangeEventPayload:
            type: object
            properties:
                migrate:
                    $ref: '#/components/schemas/Migrate'
            description: The event data structure
        MigrateStateChangeEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/MigrateStateChangeEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        MigrateStateChangeEventPayload:
            type: object
            properties:
                migrate:
                    $ref: '#/components/schemas/Migrate'
            description: The event data structure
        MigrateDeleteEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/MigrateDeleteEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        MigrateDeleteEventPayload:
            type: object
            properties:
                migrate:
                    $ref: '#/components/schemas/Migrate'
            description: The event data structure
        Error:
            required:
                - code
                - reason
            type: object
            properties:
                code:
                    type: string
                    description: "Application relevant detail, defined in the API or a common\
            \ list."
                reason:
                    type: string
                    description: Explanation of the reason for the error which can be shown
                        to a client user.
                message:
                    type: string
                    description: More details and corrective actions related to the error which
                        can be shown to a client user.
                status:
                    type: string
                    description: HTTP Error code extension
                referenceError:
                    type: string
                    description: URI of documentation describing the error.
                    format: uri
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class."
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class entity name."
            description: "Used when an API throws an Error, typically with a HTTP error\
        \ response-code (3xx, 4xx, 5xx)"
x-original-swagger-version: "2.0"
