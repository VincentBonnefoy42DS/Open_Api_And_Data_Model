openapi: 3.0.1
info:
    title: Service Catalog Management
    description: "## TMF API Reference: TMF633 - Service Catalog Management\n\n Version\
    \ 4.0 \n\nThe Service Catalog API is one of Catalog Management API Family. Service\
    \ Catalog API goal is to provide a catalog of services. \nService Catalog API\
    \ performs the following operations on the resource :\n- Retrieve an entity or\
    \ a collection of entities depending on filter criteria\n- Partial update of an\
    \ entity (including updating rules)\n- Create an entity (including default values\
    \ and creation rules)\n- Delete an entity (for administration purposes)\n- Manage\
    \ notification of events. .\n\nCopyright Â© TM Forum 2020. All Rights Reserved. "
    version: 4.0.0
servers:
    -   url: https://serverRoot/tmf-api/serviceCatalogManagement/v4/
tags:
    -   name: serviceCatalog
    -   name: serviceCategory
    -   name: serviceCandidate
    -   name: serviceSpecification
    -   name: importJob
    -   name: exportJob
    -   name: notification listeners (client side)
    -   name: events subscription
paths:
    /serviceCatalog:
        get:
            tags:
                - serviceCatalog
            summary: List or find ServiceCatalog objects
            description: This operation list or find ServiceCatalog entities
            operationId: listServiceCatalog
            parameters:
                -   name: fields
                    in: query
                    description: Comma-separated properties to be provided in response
                    schema:
                        type: string
                -   name: offset
                    in: query
                    description: Requested index for start of resources to be provided in response
                    schema:
                        type: integer
                -   name: limit
                    in: query
                    description: Requested number of resources to be provided in response
                    schema:
                        type: integer
            responses:
                "200":
                    description: Success
                    headers:
                        X-Total-Count:
                            description: Total number of items matching criteria
                            schema:
                                type: integer
                        X-Result-Count:
                            description: Actual number of items returned in the response body
                            schema:
                                type: integer
                    content:
                        application/json;charset=utf-8:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/ServiceCatalog'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
        post:
            tags:
                - serviceCatalog
            summary: Creates a ServiceCatalog
            description: This operation creates a ServiceCatalog entity.
            operationId: createServiceCatalog
            requestBody:
                description: The ServiceCatalog to be created
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/ServiceCatalog_Create'
                required: true
            responses:
                "201":
                    description: Created
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/ServiceCatalog'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: serviceCatalog
    /serviceCatalog/{id}:
        get:
            tags:
                - serviceCatalog
            summary: Retrieves a ServiceCatalog by ID
            description: This operation retrieves a ServiceCatalog entity. Attribute selection
                is enabled for all first level attributes.
            operationId: retrieveServiceCatalog
            parameters:
                -   name: id
                    in: path
                    description: Identifier of the ServiceCatalog
                    required: true
                    schema:
                        type: string
                -   name: fields
                    in: query
                    description: Comma-separated properties to provide in response
                    schema:
                        type: string
            responses:
                "200":
                    description: Success
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/ServiceCatalog'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
        delete:
            tags:
                - serviceCatalog
            summary: Deletes a ServiceCatalog
            description: This operation deletes a ServiceCatalog entity.
            operationId: deleteServiceCatalog
            parameters:
                -   name: id
                    in: path
                    description: Identifier of the ServiceCatalog
                    required: true
                    schema:
                        type: string
            responses:
                "204":
                    description: Deleted
                    content: { }
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
        patch:
            tags:
                - serviceCatalog
            summary: Updates partially a ServiceCatalog
            description: This operation updates partially a ServiceCatalog entity.
            operationId: patchServiceCatalog
            parameters:
                -   name: id
                    in: path
                    description: Identifier of the ServiceCatalog
                    required: true
                    schema:
                        type: string
            requestBody:
                description: The ServiceCatalog to be updated
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/ServiceCatalog_Update'
                required: true
            responses:
                "200":
                    description: Updated
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/ServiceCatalog'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: serviceCatalog
    /serviceCategory:
        get:
            tags:
                - serviceCategory
            summary: List or find ServiceCategory objects
            description: This operation list or find ServiceCategory entities
            operationId: listServiceCategory
            parameters:
                -   name: fields
                    in: query
                    description: Comma-separated properties to be provided in response
                    schema:
                        type: string
                -   name: offset
                    in: query
                    description: Requested index for start of resources to be provided in response
                    schema:
                        type: integer
                -   name: limit
                    in: query
                    description: Requested number of resources to be provided in response
                    schema:
                        type: integer
            responses:
                "200":
                    description: Success
                    headers:
                        X-Total-Count:
                            description: Total number of items matching criteria
                            schema:
                                type: integer
                        X-Result-Count:
                            description: Actual number of items returned in the response body
                            schema:
                                type: integer
                    content:
                        application/json;charset=utf-8:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/ServiceCategory'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
        post:
            tags:
                - serviceCategory
            summary: Creates a ServiceCategory
            description: This operation creates a ServiceCategory entity.
            operationId: createServiceCategory
            requestBody:
                description: The ServiceCategory to be created
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/ServiceCategory_Create'
                required: true
            responses:
                "201":
                    description: Created
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/ServiceCategory'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: serviceCategory
    /serviceCategory/{id}:
        get:
            tags:
                - serviceCategory
            summary: Retrieves a ServiceCategory by ID
            description: This operation retrieves a ServiceCategory entity. Attribute selection
                is enabled for all first level attributes.
            operationId: retrieveServiceCategory
            parameters:
                -   name: id
                    in: path
                    description: Identifier of the ServiceCategory
                    required: true
                    schema:
                        type: string
                -   name: fields
                    in: query
                    description: Comma-separated properties to provide in response
                    schema:
                        type: string
            responses:
                "200":
                    description: Success
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/ServiceCategory'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
        delete:
            tags:
                - serviceCategory
            summary: Deletes a ServiceCategory
            description: This operation deletes a ServiceCategory entity.
            operationId: deleteServiceCategory
            parameters:
                -   name: id
                    in: path
                    description: Identifier of the ServiceCategory
                    required: true
                    schema:
                        type: string
            responses:
                "204":
                    description: Deleted
                    content: { }
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
        patch:
            tags:
                - serviceCategory
            summary: Updates partially a ServiceCategory
            description: This operation updates partially a ServiceCategory entity.
            operationId: patchServiceCategory
            parameters:
                -   name: id
                    in: path
                    description: Identifier of the ServiceCategory
                    required: true
                    schema:
                        type: string
            requestBody:
                description: The ServiceCategory to be updated
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/ServiceCategory_Update'
                required: true
            responses:
                "200":
                    description: Updated
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/ServiceCategory'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: serviceCategory
    /serviceCandidate:
        get:
            tags:
                - serviceCandidate
            summary: List or find ServiceCandidate objects
            description: This operation list or find ServiceCandidate entities
            operationId: listServiceCandidate
            parameters:
                -   name: fields
                    in: query
                    description: Comma-separated properties to be provided in response
                    schema:
                        type: string
                -   name: offset
                    in: query
                    description: Requested index for start of resources to be provided in response
                    schema:
                        type: integer
                -   name: limit
                    in: query
                    description: Requested number of resources to be provided in response
                    schema:
                        type: integer
            responses:
                "200":
                    description: Success
                    headers:
                        X-Total-Count:
                            description: Total number of items matching criteria
                            schema:
                                type: integer
                        X-Result-Count:
                            description: Actual number of items returned in the response body
                            schema:
                                type: integer
                    content:
                        application/json;charset=utf-8:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/ServiceCandidate'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
        post:
            tags:
                - serviceCandidate
            summary: Creates a ServiceCandidate
            description: This operation creates a ServiceCandidate entity.
            operationId: createServiceCandidate
            requestBody:
                description: The ServiceCandidate to be created
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/ServiceCandidate_Create'
                required: true
            responses:
                "201":
                    description: Created
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/ServiceCandidate'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: serviceCandidate
    /serviceCandidate/{id}:
        get:
            tags:
                - serviceCandidate
            summary: Retrieves a ServiceCandidate by ID
            description: This operation retrieves a ServiceCandidate entity. Attribute selection
                is enabled for all first level attributes.
            operationId: retrieveServiceCandidate
            parameters:
                -   name: id
                    in: path
                    description: Identifier of the ServiceCandidate
                    required: true
                    schema:
                        type: string
                -   name: fields
                    in: query
                    description: Comma-separated properties to provide in response
                    schema:
                        type: string
            responses:
                "200":
                    description: Success
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/ServiceCandidate'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
        delete:
            tags:
                - serviceCandidate
            summary: Deletes a ServiceCandidate
            description: This operation deletes a ServiceCandidate entity.
            operationId: deleteServiceCandidate
            parameters:
                -   name: id
                    in: path
                    description: Identifier of the ServiceCandidate
                    required: true
                    schema:
                        type: string
            responses:
                "204":
                    description: Deleted
                    content: { }
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
        patch:
            tags:
                - serviceCandidate
            summary: Updates partially a ServiceCandidate
            description: This operation updates partially a ServiceCandidate entity.
            operationId: patchServiceCandidate
            parameters:
                -   name: id
                    in: path
                    description: Identifier of the ServiceCandidate
                    required: true
                    schema:
                        type: string
            requestBody:
                description: The ServiceCandidate to be updated
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/ServiceCandidate_Update'
                required: true
            responses:
                "200":
                    description: Updated
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/ServiceCandidate'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: serviceCandidate
    /serviceSpecification:
        get:
            tags:
                - serviceSpecification
            summary: List or find ServiceSpecification objects
            description: This operation list or find ServiceSpecification entities
            operationId: listServiceSpecification
            parameters:
                -   name: fields
                    in: query
                    description: Comma-separated properties to be provided in response
                    schema:
                        type: string
                -   name: offset
                    in: query
                    description: Requested index for start of resources to be provided in response
                    schema:
                        type: integer
                -   name: limit
                    in: query
                    description: Requested number of resources to be provided in response
                    schema:
                        type: integer
            responses:
                "200":
                    description: Success
                    headers:
                        X-Total-Count:
                            description: Total number of items matching criteria
                            schema:
                                type: integer
                        X-Result-Count:
                            description: Actual number of items returned in the response body
                            schema:
                                type: integer
                    content:
                        application/json;charset=utf-8:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/ServiceSpecification'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
        post:
            tags:
                - serviceSpecification
            summary: Creates a ServiceSpecification
            description: This operation creates a ServiceSpecification entity.
            operationId: createServiceSpecification
            requestBody:
                description: The ServiceSpecification to be created
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/ServiceSpecification_Create'
                required: true
            responses:
                "201":
                    description: Created
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/ServiceSpecification'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: serviceSpecification
    /serviceSpecification/{id}:
        get:
            tags:
                - serviceSpecification
            summary: Retrieves a ServiceSpecification by ID
            description: This operation retrieves a ServiceSpecification entity. Attribute
                selection is enabled for all first level attributes.
            operationId: retrieveServiceSpecification
            parameters:
                -   name: id
                    in: path
                    description: Identifier of the ServiceSpecification
                    required: true
                    schema:
                        type: string
                -   name: fields
                    in: query
                    description: Comma-separated properties to provide in response
                    schema:
                        type: string
            responses:
                "200":
                    description: Success
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/ServiceSpecification'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
        delete:
            tags:
                - serviceSpecification
            summary: Deletes a ServiceSpecification
            description: This operation deletes a ServiceSpecification entity.
            operationId: deleteServiceSpecification
            parameters:
                -   name: id
                    in: path
                    description: Identifier of the ServiceSpecification
                    required: true
                    schema:
                        type: string
            responses:
                "204":
                    description: Deleted
                    content: { }
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
        patch:
            tags:
                - serviceSpecification
            summary: Updates partially a ServiceSpecification
            description: This operation updates partially a ServiceSpecification entity.
            operationId: patchServiceSpecification
            parameters:
                -   name: id
                    in: path
                    description: Identifier of the ServiceSpecification
                    required: true
                    schema:
                        type: string
            requestBody:
                description: The ServiceSpecification to be updated
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/ServiceSpecification_Update'
                required: true
            responses:
                "200":
                    description: Updated
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/ServiceSpecification'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: serviceSpecification
    /importJob:
        get:
            tags:
                - importJob
            summary: List or find ImportJob objects
            description: This operation list or find ImportJob entities
            operationId: listImportJob
            parameters:
                -   name: fields
                    in: query
                    description: Comma-separated properties to be provided in response
                    schema:
                        type: string
                -   name: offset
                    in: query
                    description: Requested index for start of resources to be provided in response
                    schema:
                        type: integer
                -   name: limit
                    in: query
                    description: Requested number of resources to be provided in response
                    schema:
                        type: integer
            responses:
                "200":
                    description: Success
                    headers:
                        X-Total-Count:
                            description: Total number of items matching criteria
                            schema:
                                type: integer
                        X-Result-Count:
                            description: Actual number of items returned in the response body
                            schema:
                                type: integer
                    content:
                        application/json;charset=utf-8:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/ImportJob'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
        post:
            tags:
                - importJob
            summary: Creates a ImportJob
            description: This operation creates a ImportJob entity.
            operationId: createImportJob
            requestBody:
                description: The ImportJob to be created
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/ImportJob_Create'
                required: true
            responses:
                "201":
                    description: Created
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/ImportJob'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: importJob
    /importJob/{id}:
        get:
            tags:
                - importJob
            summary: Retrieves a ImportJob by ID
            description: This operation retrieves a ImportJob entity. Attribute selection
                is enabled for all first level attributes.
            operationId: retrieveImportJob
            parameters:
                -   name: id
                    in: path
                    description: Identifier of the ImportJob
                    required: true
                    schema:
                        type: string
                -   name: fields
                    in: query
                    description: Comma-separated properties to provide in response
                    schema:
                        type: string
            responses:
                "200":
                    description: Success
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/ImportJob'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
        delete:
            tags:
                - importJob
            summary: Deletes a ImportJob
            description: This operation deletes a ImportJob entity.
            operationId: deleteImportJob
            parameters:
                -   name: id
                    in: path
                    description: Identifier of the ImportJob
                    required: true
                    schema:
                        type: string
            responses:
                "204":
                    description: Deleted
                    content: { }
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
    /exportJob:
        get:
            tags:
                - exportJob
            summary: List or find ExportJob objects
            description: This operation list or find ExportJob entities
            operationId: listExportJob
            parameters:
                -   name: fields
                    in: query
                    description: Comma-separated properties to be provided in response
                    schema:
                        type: string
                -   name: offset
                    in: query
                    description: Requested index for start of resources to be provided in response
                    schema:
                        type: integer
                -   name: limit
                    in: query
                    description: Requested number of resources to be provided in response
                    schema:
                        type: integer
            responses:
                "200":
                    description: Success
                    headers:
                        X-Total-Count:
                            description: Total number of items matching criteria
                            schema:
                                type: integer
                        X-Result-Count:
                            description: Actual number of items returned in the response body
                            schema:
                                type: integer
                    content:
                        application/json;charset=utf-8:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/ExportJob'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
        post:
            tags:
                - exportJob
            summary: Creates a ExportJob
            description: This operation creates a ExportJob entity.
            operationId: createExportJob
            requestBody:
                description: The ExportJob to be created
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/ExportJob_Create'
                required: true
            responses:
                "201":
                    description: Created
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/ExportJob'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: exportJob
    /exportJob/{id}:
        get:
            tags:
                - exportJob
            summary: Retrieves a ExportJob by ID
            description: This operation retrieves a ExportJob entity. Attribute selection
                is enabled for all first level attributes.
            operationId: retrieveExportJob
            parameters:
                -   name: id
                    in: path
                    description: Identifier of the ExportJob
                    required: true
                    schema:
                        type: string
                -   name: fields
                    in: query
                    description: Comma-separated properties to provide in response
                    schema:
                        type: string
            responses:
                "200":
                    description: Success
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/ExportJob'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
        delete:
            tags:
                - exportJob
            summary: Deletes a ExportJob
            description: This operation deletes a ExportJob entity.
            operationId: deleteExportJob
            parameters:
                -   name: id
                    in: path
                    description: Identifier of the ExportJob
                    required: true
                    schema:
                        type: string
            responses:
                "204":
                    description: Deleted
                    content: { }
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
    /hub:
        post:
            tags:
                - events subscription
            summary: Register a listener
            description: "Sets the communication endpoint address the service instance must\
        \ use to deliver information about its health state, execution state, failures\
        \ and metrics."
            operationId: registerListener
            requestBody:
                description: Data containing the callback endpoint to deliver the information
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/EventSubscriptionInput'
                required: true
            responses:
                "201":
                    description: Subscribed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /hub/{id}:
        delete:
            tags:
                - events subscription
            summary: Unregister a listener
            description: "Resets the communication endpoint address the service instance\
        \ must use to deliver information about its health state, execution state,\
        \ failures and metrics."
            operationId: unregisterListener
            parameters:
                -   name: id
                    in: path
                    description: The id of the registered listener
                    required: true
                    schema:
                        type: string
            responses:
                "204":
                    description: Deleted
                    content: { }
                "400":
                    description: Bad request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
    /listener/serviceCatalogCreateEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity ServiceCatalogCreateEvent
            description: Example of a client listener for receiving the notification ServiceCatalogCreateEvent
            operationId: listenToServiceCatalogCreateEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/ServiceCatalogCreateEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/serviceCatalogChangeEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity ServiceCatalogChangeEvent
            description: Example of a client listener for receiving the notification ServiceCatalogChangeEvent
            operationId: listenToServiceCatalogChangeEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/ServiceCatalogChangeEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/serviceCatalogBatchEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity ServiceCatalogBatchEvent
            description: Example of a client listener for receiving the notification ServiceCatalogBatchEvent
            operationId: listenToServiceCatalogBatchEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/ServiceCatalogBatchEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/serviceCatalogDeleteEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity ServiceCatalogDeleteEvent
            description: Example of a client listener for receiving the notification ServiceCatalogDeleteEvent
            operationId: listenToServiceCatalogDeleteEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/ServiceCatalogDeleteEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/serviceCategoryCreateEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity ServiceCategoryCreateEvent
            description: Example of a client listener for receiving the notification ServiceCategoryCreateEvent
            operationId: listenToServiceCategoryCreateEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/ServiceCategoryCreateEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/serviceCategoryChangeEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity ServiceCategoryChangeEvent
            description: Example of a client listener for receiving the notification ServiceCategoryChangeEvent
            operationId: listenToServiceCategoryChangeEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/ServiceCategoryChangeEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/serviceCategoryDeleteEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity ServiceCategoryDeleteEvent
            description: Example of a client listener for receiving the notification ServiceCategoryDeleteEvent
            operationId: listenToServiceCategoryDeleteEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/ServiceCategoryDeleteEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/serviceCandidateCreateEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity ServiceCandidateCreateEvent
            description: Example of a client listener for receiving the notification ServiceCandidateCreateEvent
            operationId: listenToServiceCandidateCreateEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/ServiceCandidateCreateEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/serviceCandidateChangeEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity ServiceCandidateChangeEvent
            description: Example of a client listener for receiving the notification ServiceCandidateChangeEvent
            operationId: listenToServiceCandidateChangeEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/ServiceCandidateChangeEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/serviceCandidateDeleteEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity ServiceCandidateDeleteEvent
            description: Example of a client listener for receiving the notification ServiceCandidateDeleteEvent
            operationId: listenToServiceCandidateDeleteEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/ServiceCandidateDeleteEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/serviceSpecificationCreateEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity ServiceSpecificationCreateEvent
            description: Example of a client listener for receiving the notification ServiceSpecificationCreateEvent
            operationId: listenToServiceSpecificationCreateEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/ServiceSpecificationCreateEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/serviceSpecificationChangeEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity ServiceSpecificationChangeEvent
            description: Example of a client listener for receiving the notification ServiceSpecificationChangeEvent
            operationId: listenToServiceSpecificationChangeEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/ServiceSpecificationChangeEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/serviceSpecificationDeleteEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity ServiceSpecificationDeleteEvent
            description: Example of a client listener for receiving the notification ServiceSpecificationDeleteEvent
            operationId: listenToServiceSpecificationDeleteEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/ServiceSpecificationDeleteEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
components:
    schemas:
        Addressable:
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
            description: Base schema for adressable entities
        Any:
            type: object
        AssociationSpecificationRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                name:
                    type: string
                    description: Name of the related entity.
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: reference to an AssociationSpecification object
        Attachment:
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier for this particular attachment
                    example: 4aafacbd-11ff-4dc8-b445-305f2215715f
                href:
                    type: string
                    description: URI for this Attachment
                    format: uri
                    example: http://host/Attachment/4aafacbd-11ff-4dc8-b445-305f2215715f
                attachmentType:
                    type: string
                    description: "Attachment type such as video, picture"
                    example: video
                content:
                    type: string
                    description: "The actual contents of the attachment object, if embedded,\
            \ encoded as base64"
                    format: base64
                description:
                    type: string
                    description: A narrative text describing the content of the attachment
                    example: Photograph of the Product
                mimeType:
                    type: string
                    description: "Attachment mime type such as extension file for video, picture\
            \ and document"
                name:
                    type: string
                    description: The name of the attachment
                url:
                    type: string
                    description: "Uniform Resource Locator, is a web page address (a subset\
            \ of URI)"
                    format: uri
                    example: http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f
                size:
                    $ref: '#/components/schemas/Quantity'
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: "Complements the description of an element (for instance a product)\
        \ through video, pictures..."
        AttachmentRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: Unique-Identifier for this attachment
                href:
                    type: string
                    description: URL serving as reference for the attachment resource
                    format: uri
                description:
                    type: string
                    description: A narrative text describing the content of the attachment
                name:
                    type: string
                    description: Name of the related entity.
                url:
                    type: string
                    description: Link to the attachment media/content
                    format: uri
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: "Attachment reference. An attachment complements the description\
        \ of an element (for instance a product) through video, pictures"
        AttachmentRefOrValue:
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier for this particular attachment
                    example: 4aafacbd-11ff-4dc8-b445-305f2215715f
                href:
                    type: string
                    description: URI for this Attachment
                    format: uri
                    example: http://host/Attachment/4aafacbd-11ff-4dc8-b445-305f2215715f
                attachmentType:
                    type: string
                    description: "Attachment type such as video, picture"
                    example: video
                content:
                    type: string
                    description: "The actual contents of the attachment object, if embedded,\
            \ encoded as base64"
                    format: base64
                description:
                    type: string
                    description: A narrative text describing the content of the attachment
                    example: Photograph of the Product
                mimeType:
                    type: string
                    description: "Attachment mime type such as extension file for video, picture\
            \ and document"
                name:
                    type: string
                    description: The name of the attachment
                url:
                    type: string
                    description: "Uniform Resource Locator, is a web page address (a subset\
            \ of URI)"
                    format: uri
                    example: http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f
                size:
                    $ref: '#/components/schemas/Quantity'
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: "An attachment by value or by reference. An attachment complements\
        \ the description of an element, for example through a document, a video,\
        \ a picture."
        CharacteristicSpecification:
            type: object
            properties:
                id:
                    type: string
                    description: Unique ID for the characteristic
                configurable:
                    type: boolean
                    description: "If true, the Boolean indicates that the target Characteristic\
            \ is configurable"
                description:
                    type: string
                    description: A narrative that explains the CharacteristicSpecification.
                extensible:
                    type: boolean
                    description: An indicator that specifies that the values for the characteristic
                        can be extended by adding new values when instantiating a characteristic
                        for a resource.
                isUnique:
                    type: boolean
                    description: An indicator that specifies if a value is unique for the specification.
                        Possible values are; "unique while value is in effect" and "unique whether
                        value is in effect or not"
                maxCardinality:
                    type: integer
                    description: "The maximum number of instances a CharacteristicValue can\
            \ take on. For example, zero to five phone numbers in a group calling\
            \ plan, where five is the value for the maxCardinality."
                minCardinality:
                    type: integer
                    description: "The minimum number of instances a CharacteristicValue can\
            \ take on. For example, zero to five phone numbers in a group calling\
            \ plan, where zero is the value for the minCardinality."
                name:
                    type: string
                    description: "A word, term, or phrase by which this characteristic specification\
            \ is known and distinguished from other characteristic specifications."
                regex:
                    type: string
                    description: A rule or principle represented in regular expression used
                        to derive the value of a characteristic value.
                valueType:
                    type: string
                    description: "A kind of value that the characteristic can take on, such\
            \ as numeric, text and so forth"
                charSpecRelationship:
                    type: array
                    description: "An aggregation, migration, substitution, dependency or exclusivity\
            \ relationship between/among Specification Characteristics."
                    items:
                        $ref: '#/components/schemas/CharacteristicSpecificationRelationship'
                characteristicValueSpecification:
                    type: array
                    description: "A CharacteristicValueSpecification object is used to define\
            \ a set of attributes, each of which can be assigned to a corresponding\
            \ set of attributes in a CharacteristicSpecification object. The values\
            \ of the attributes in the CharacteristicValueSpecification object describe\
            \ the values of the attributes that a corresponding Characteristic object\
            \ can take on."
                    items:
                        $ref: '#/components/schemas/CharacteristicValueSpecification'
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@valueSchemaLocation':
                    type: string
                    description: This (optional) field provides a link to the schema describing
                        the value type.
            description: This class defines a characteristic specification.
        CharacteristicSpecificationBase:
            type: object
            properties:
                id:
                    type: string
                    description: Unique ID for the characteristic
                configurable:
                    type: boolean
                    description: "If true, the Boolean indicates that the target Characteristic\
            \ is configurable"
                description:
                    type: string
                    description: A narrative that explains the CharacteristicSpecification.
                extensible:
                    type: boolean
                    description: An indicator that specifies that the values for the characteristic
                        can be extended by adding new values when instantiating a characteristic
                        for a resource.
                isUnique:
                    type: boolean
                    description: An indicator that specifies if a value is unique for the specification.
                        Possible values are; "unique while value is in effect" and "unique whether
                        value is in effect or not"
                maxCardinality:
                    type: integer
                    description: "The maximum number of instances a CharacteristicValue can\
            \ take on. For example, zero to five phone numbers in a group calling\
            \ plan, where five is the value for the maxCardinality."
                minCardinality:
                    type: integer
                    description: "The minimum number of instances a CharacteristicValue can\
            \ take on. For example, zero to five phone numbers in a group calling\
            \ plan, where zero is the value for the minCardinality."
                name:
                    type: string
                    description: "A word, term, or phrase by which this characteristic specification\
            \ is known and distinguished from other characteristic specifications."
                regex:
                    type: string
                    description: A rule or principle represented in regular expression used
                        to derive the value of a characteristic value.
                valueType:
                    type: string
                    description: "A kind of value that the characteristic can take on, such\
            \ as numeric, text and so forth"
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@valueSchemaLocation':
                    type: string
                    description: This (optional) field provides a link to the schema describing
                        the value type.
            description: This class defines a characteristic specification.
        CharacteristicSpecificationRelationship:
            type: object
            properties:
                characteristicSpecificationId:
                    type: string
                    description: Unique identifier of the characteristic within the specification
                name:
                    type: string
                    description: Name of the target characteristic within the specification
                parentSpecificationHref:
                    type: string
                    description: Hyperlink reference to the parent specification containing
                        the target characteristic
                    format: uri
                parentSpecificationId:
                    type: string
                    description: Unique identifier of the parent specification containing the
                        target characteristic
                relationshipType:
                    type: string
                    description: "Type of relationship such as aggregation, migration, substitution,\
            \ dependency, exclusivity"
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: "An aggregation, migration, substitution, dependency or exclusivity\
        \ relationship between/among Characteristic specifications. The specification\
        \ characteristic is embedded within the specification whose ID and href are\
        \ in this entity, and identified by its ID."
        CharacteristicValueSpecification:
            type: object
            properties:
                isDefault:
                    type: boolean
                    description: "If true, the Boolean Indicates if the value is the default\
            \ value for a characteristic"
                rangeInterval:
                    type: string
                    description: "An indicator that specifies the inclusion or exclusion of\
            \ the valueFrom and valueTo attributes. If applicable, possible values\
            \ are \"open\", \"closed\", \"closedBottom\" and \"closedTop\"."
                regex:
                    type: string
                    description: A regular expression constraint for given value
                unitOfMeasure:
                    type: string
                    description: "A length, surface, volume, dry measure, liquid measure, money,\
            \ weight, time, and the like. In general, a determinate quantity or magnitude\
            \ of the kind designated, taken as a standard of comparison for others\
            \ of the same kind, in assigning to them numerical values, as 1 foot,\
            \ 1 yard, 1 mile, 1 square foot."
                valueFrom:
                    type: integer
                    description: The low range value that a characteristic can take on
                valueTo:
                    type: integer
                    description: The upper range value that a characteristic can take on
                valueType:
                    type: string
                    description: "A kind of value that the characteristic value can take on,\
            \ such as numeric, text and so forth"
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                value:
                    $ref: '#/components/schemas/Any'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: specification of a value (number or text or an object) that can
                be assigned to a Characteristic.
        ConstraintRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                name:
                    type: string
                    description: Name of the related entity.
                version:
                    type: string
                    description: constraint version
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: Constraint reference. The Constraint resource represents a policy/rule
                applied to an entity or entity spec.
        Entity:
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: Base entity schema for use in TMForum Open-APIs
        EntityRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                name:
                    type: string
                    description: Name of the related entity.
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: Entity reference schema to be use for all entityRef class.
        EntitySpecification:
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                description:
                    type: string
                    description: Description of the specification
                isBundle:
                    type: boolean
                    description: "isBundle determines whether specification represents a single\
            \ specification (false), or a bundle of specifications (true)."
                lastUpdate:
                    type: string
                    description: Date and time of the last update of the specification
                    format: date-time
                lifecycleStatus:
                    type: string
                    description: Used to indicate the current lifecycle status of this catalog
                        item
                name:
                    type: string
                    description: Name given to the specification
                version:
                    type: string
                    description: specification version
                attachment:
                    type: array
                    description: "Attachments that may be of relevance to this specification,\
            \ such as picture, document, media"
                    items:
                        $ref: '#/components/schemas/AttachmentRefOrValue'
                constraint:
                    type: array
                    description: This is a list of constraint references applied to this specification
                    items:
                        $ref: '#/components/schemas/ConstraintRef'
                entitySpecRelationship:
                    type: array
                    description: Relationship to another specification
                    items:
                        $ref: '#/components/schemas/EntitySpecificationRelationship'
                relatedParty:
                    type: array
                    description: Parties who manage or otherwise have an interest in this specification
                    items:
                        $ref: '#/components/schemas/RelatedParty'
                specCharacteristic:
                    type: array
                    description: List of characteristics that the entity can take
                    items:
                        $ref: '#/components/schemas/CharacteristicSpecification'
                targetEntitySchema:
                    $ref: '#/components/schemas/TargetEntitySchema'
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: |-
                EntitySpecification is a class that offers characteristics to describe a type of entity. Entities are generic constructs that may be used to describe bespoke business entities that are not effectively covered by the existing SID model.
                Functionally, the entity specification acts as a template by which entities may be instantiated and described. By sharing the same specification, these entities would therefore share the same set of characteristics.
                Note: The âconfigurableâ attribute on the specCharacteristics determines if an entity instantiated from the entity specification can override the value of the attribute. When set to false, the entity instance may not define a value that differs from the value in the specification.
        EntitySpecificationRelationship:
            required:
                - relationshipType
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                name:
                    type: string
                    description: Name of the related entity.
                relationshipType:
                    type: string
                    description: "Type of relationship such as migration, substitution, dependency,\
            \ exclusivity"
                role:
                    type: string
                    description: The association role for this entity specification
                associationSpec:
                    $ref: '#/components/schemas/AssociationSpecificationRef'
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: "A migration, substitution, dependency or exclusivity relationship\
        \ between/among entity specifications."
        ExportJob:
            type: object
            properties:
                id:
                    type: string
                    description: Identifier of the export job
                href:
                    type: string
                    description: Reference of the export job
                    format: uri
                completionDate:
                    type: string
                    description: Data at which the job was completed
                    format: date-time
                contentType:
                    type: string
                    description: The format of the exported data
                creationDate:
                    type: string
                    description: Date at which the job was created
                    format: date-time
                errorLog:
                    type: string
                    description: Reason for failure
                path:
                    type: string
                    description: URL of the root resource acting as the source for streaming
                        content to the file specified by the export job
                query:
                    type: string
                    description: Used to scope the exported data
                url:
                    type: string
                    description: URL of the file containing the data to be exported
                    format: uri
                status:
                    $ref: '#/components/schemas/JobStateType'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: Represents a task used to export resources to a file
        ExportJob_Create:
            required:
                - url
            type: object
            properties:
                completionDate:
                    type: string
                    description: Data at which the job was completed
                    format: date-time
                contentType:
                    type: string
                    description: The format of the exported data
                creationDate:
                    type: string
                    description: Date at which the job was created
                    format: date-time
                errorLog:
                    type: string
                    description: Reason for failure
                path:
                    type: string
                    description: URL of the root resource acting as the source for streaming
                        content to the file specified by the export job
                query:
                    type: string
                    description: Used to scope the exported data
                url:
                    type: string
                    description: URL of the file containing the data to be exported
                    format: uri
                status:
                    $ref: '#/components/schemas/JobStateType'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: |-
                Represents a task used to export resources to a file
                Skipped properties: id,href
        Extensible:
            type: object
            properties:
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: Base Extensible schema for use in TMForum Open-APIs
        FeatureSpecificationRelationship:
            required:
                - name
                - relationshipType
            type: object
            properties:
                featureId:
                    type: string
                    description: Unique identifier of the target feature specification.
                name:
                    type: string
                    description: This is the name of the target feature specification.
                parentSpecificationHref:
                    type: string
                    description: Hyperlink reference to the parent specification containing
                        the target feature
                    format: uri
                parentSpecificationId:
                    type: string
                    description: Unique identifier of the parent specification containing the
                        target feature
                relationshipType:
                    type: string
                    description: This is the type of the feature specification relationship.
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: Relationship between feature specifications
        ImportJob:
            type: object
            properties:
                id:
                    type: string
                    description: Identifier of the import job
                href:
                    type: string
                    description: Reference of the import job
                    format: uri
                completionDate:
                    type: string
                    description: Date at which the job was completed
                    format: date-time
                contentType:
                    type: string
                    description: Indicates the format of the imported data
                creationDate:
                    type: string
                    description: Date at which the job was created
                    format: date-time
                errorLog:
                    type: string
                    description: Reason for failure if status is failed
                path:
                    type: string
                    description: URL of the root resource where the content of the file specified
                        by the import job must be applied
                url:
                    type: string
                    description: URL of the file containing the data to be imported
                    format: uri
                status:
                    $ref: '#/components/schemas/JobStateType'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: Represents a task used to import resources from a file
        ImportJob_Create:
            required:
                - url
            type: object
            properties:
                completionDate:
                    type: string
                    description: Date at which the job was completed
                    format: date-time
                contentType:
                    type: string
                    description: Indicates the format of the imported data
                creationDate:
                    type: string
                    description: Date at which the job was created
                    format: date-time
                errorLog:
                    type: string
                    description: Reason for failure if status is failed
                path:
                    type: string
                    description: URL of the root resource where the content of the file specified
                        by the import job must be applied
                url:
                    type: string
                    description: URL of the file containing the data to be imported
                    format: uri
                status:
                    $ref: '#/components/schemas/JobStateType'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: |-
                Represents a task used to import resources from a file
                Skipped properties: id,href
        JobStateType:
            type: string
            description: Valid values for the state of a batch job (e.g. catalog import)
            enum:
                - Not Started
                - Running
                - Succeeded
                - Failed
        Quantity:
            type: object
            properties:
                amount:
                    type: number
                    description: Numeric value in a given unit
                    format: float
                    default: 1.0
                units:
                    type: string
                    description: Unit
            description: An amount in a given unit
        RelatedParty:
            required:
                - '@referredType'
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                name:
                    type: string
                    description: Name of the related entity.
                role:
                    type: string
                    description: Role played by the related party
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: Related Entity reference. A related party defines party or party
                role linked to a specific entity.
        ResourceSpecificationRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                name:
                    type: string
                    description: Name of the related entity.
                version:
                    type: string
                    description: Resource Specification version
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: |-
                Resources are physical or non-physical components (or some combination of these) within an enterprise's infrastructure or inventory. They are typically consumed or used by services (for example a physical port assigned to a service) or contribute to the realization of a Product (for example, a SIM card). They can be drawn from the Application, Computing and Network domains, and include, for example, Network Elements, software, IT systems, content and information, and technology components.
                A ResourceSpecification is an abstract base class for representing a generic means for implementing a particular type of Resource. In essence, a ResourceSpecification defines the common attributes and relationships of a set of related Resources, while Resource defines a specific instance that is based on a particular ResourceSpecification.
        ServiceCandidate:
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                description:
                    type: string
                    description: Description of this REST resource
                lastUpdate:
                    type: string
                    description: Date and time of the last update of this REST resource
                    format: date-time
                lifecycleStatus:
                    type: string
                    description: Used to indicate the current lifecycle status of the service
                        candidate.
                name:
                    type: string
                    description: Name given to this REST resource
                version:
                    type: string
                    description: the version of service candidate
                category:
                    type: array
                    description: List of categories for this candidate
                    items:
                        $ref: '#/components/schemas/ServiceCategoryRef'
                serviceSpecification:
                    $ref: '#/components/schemas/ServiceSpecificationRef'
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: |-
                ServiceCandidate is an entity that makes a service specification available to a catalog. A
                ServiceCandidate and its associated service specification may be published - made visible - in any number of service catalogs, or in none. One service specification can be composed of other service specifications.
        ServiceCandidate_Create:
            required:
                - name
                - serviceSpecification
            type: object
            properties:
                description:
                    type: string
                    description: Description of this REST resource
                lastUpdate:
                    type: string
                    description: Date and time of the last update of this REST resource
                    format: date-time
                lifecycleStatus:
                    type: string
                    description: Used to indicate the current lifecycle status of the service
                        candidate.
                name:
                    type: string
                    description: Name given to this REST resource
                version:
                    type: string
                    description: the version of service candidate
                category:
                    type: array
                    description: List of categories for this candidate
                    items:
                        $ref: '#/components/schemas/ServiceCategoryRef'
                serviceSpecification:
                    $ref: '#/components/schemas/ServiceSpecificationRef'
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: |-
                ServiceCandidate is an entity that makes a service specification available to a catalog. A
                ServiceCandidate and its associated service specification may be published - made visible - in any number of service catalogs, or in none. One service specification can be composed of other service specifications.
                Skipped properties: id,href
        ServiceCandidate_Update:
            type: object
            properties:
                description:
                    type: string
                    description: Description of this REST resource
                lifecycleStatus:
                    type: string
                    description: Used to indicate the current lifecycle status of the service
                        candidate.
                name:
                    type: string
                    description: Name given to this REST resource
                version:
                    type: string
                    description: the version of service candidate
                category:
                    type: array
                    description: List of categories for this candidate
                    items:
                        $ref: '#/components/schemas/ServiceCategoryRef'
                serviceSpecification:
                    $ref: '#/components/schemas/ServiceSpecificationRef'
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: |-
                ServiceCandidate is an entity that makes a service specification available to a catalog. A
                ServiceCandidate and its associated service specification may be published - made visible - in any number of service catalogs, or in none. One service specification can be composed of other service specifications.
                Skipped properties: id,href,lastUpdate
        ServiceCandidateRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                name:
                    type: string
                    description: Name of the related entity.
                version:
                    type: string
                    description: Version of the service candidate
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: ServiceCandidate reference. ServiceCandidate is an entity that
                makes a ServiceSpecification available to a catalog.
        ServiceCatalog:
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                description:
                    type: string
                    description: Description of this catalog
                lastUpdate:
                    type: string
                    description: Date and time of the last update
                    format: date-time
                lifecycleStatus:
                    type: string
                    description: Used to indicate the current lifecycle status
                name:
                    type: string
                    description: Name of the service catalog
                version:
                    type: string
                    description: ServiceCatalog version
                category:
                    type: array
                    description: List of service categories associated with this catalog
                    items:
                        $ref: '#/components/schemas/ServiceCategoryRef'
                relatedParty:
                    type: array
                    description: List of parties or party roles related to this category
                    items:
                        $ref: '#/components/schemas/RelatedParty'
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: "The root entity for service catalog management.\nA service catalog\
        \ is a group of service specifications made available through service candidates\
        \ that an organization provides to the consumers (internal consumers like\
        \ its employees or B2B customers or B2C customers). \nA service catalog typically\
        \ includes name, description and time period that is valid for. It will have\
        \ a list of ServiceCandidate catalog items. A ServiceCandidate is an entity\
        \ that makes a ServiceSpecification available to a catalog.\nA ServiceCandidate\
        \ and its associated ServiceSpecification may be \"published\" - made visible\
        \ -in any number of ServiceCatalogs, or in none."
        ServiceCatalog_Create:
            required:
                - name
            type: object
            properties:
                description:
                    type: string
                    description: Description of this catalog
                lastUpdate:
                    type: string
                    description: Date and time of the last update
                    format: date-time
                lifecycleStatus:
                    type: string
                    description: Used to indicate the current lifecycle status
                name:
                    type: string
                    description: Name of the service catalog
                version:
                    type: string
                    description: ServiceCatalog version
                category:
                    type: array
                    description: List of service categories associated with this catalog
                    items:
                        $ref: '#/components/schemas/ServiceCategoryRef'
                relatedParty:
                    type: array
                    description: List of parties or party roles related to this category
                    items:
                        $ref: '#/components/schemas/RelatedParty'
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: "The root entity for service catalog management.\nA service catalog\
        \ is a group of service specifications made available through service candidates\
        \ that an organization provides to the consumers (internal consumers like\
        \ its employees or B2B customers or B2C customers). \nA service catalog typically\
        \ includes name, description and time period that is valid for. It will have\
        \ a list of ServiceCandidate catalog items. A ServiceCandidate is an entity\
        \ that makes a ServiceSpecification available to a catalog.\nA ServiceCandidate\
        \ and its associated ServiceSpecification may be \"published\" - made visible\
        \ -in any number of ServiceCatalogs, or in none.\nSkipped properties: id,href"
        ServiceCatalog_Update:
            type: object
            properties:
                description:
                    type: string
                    description: Description of this catalog
                lifecycleStatus:
                    type: string
                    description: Used to indicate the current lifecycle status
                name:
                    type: string
                    description: Name of the service catalog
                version:
                    type: string
                    description: ServiceCatalog version
                category:
                    type: array
                    description: List of service categories associated with this catalog
                    items:
                        $ref: '#/components/schemas/ServiceCategoryRef'
                relatedParty:
                    type: array
                    description: List of parties or party roles related to this category
                    items:
                        $ref: '#/components/schemas/RelatedParty'
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: "The root entity for service catalog management.\nA service catalog\
        \ is a group of service specifications made available through service candidates\
        \ that an organization provides to the consumers (internal consumers like\
        \ its employees or B2B customers or B2C customers). \nA service catalog typically\
        \ includes name, description and time period that is valid for. It will have\
        \ a list of ServiceCandidate catalog items. A ServiceCandidate is an entity\
        \ that makes a ServiceSpecification available to a catalog.\nA ServiceCandidate\
        \ and its associated ServiceSpecification may be \"published\" - made visible\
        \ -in any number of ServiceCatalogs, or in none.\nSkipped properties: id,href,lastUpdate"
        ServiceCategory:
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                description:
                    type: string
                    description: Description of the category
                isRoot:
                    type: boolean
                    description: "If true, this Boolean indicates that the category is a root\
            \ of categories"
                lastUpdate:
                    type: string
                    description: Date and time of the last update
                    format: date-time
                lifecycleStatus:
                    type: string
                    description: Used to indicate the current lifecycle status
                name:
                    type: string
                    description: Name of the category
                parentId:
                    type: string
                    description: Unique identifier of the parent category
                version:
                    type: string
                    description: ServiceCategory version
                category:
                    type: array
                    description: List of child categories in the tree for in this category
                    items:
                        $ref: '#/components/schemas/ServiceCategoryRef'
                serviceCandidate:
                    type: array
                    description: List of service candidates associated with this category
                    items:
                        $ref: '#/components/schemas/ServiceCandidateRef'
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: The (service) category resource is used to group service candidates
                in logical containers. Categories can contain other categories.
        ServiceCategory_Create:
            required:
                - name
            type: object
            properties:
                description:
                    type: string
                    description: Description of the category
                isRoot:
                    type: boolean
                    description: "If true, this Boolean indicates that the category is a root\
            \ of categories"
                lastUpdate:
                    type: string
                    description: Date and time of the last update
                    format: date-time
                lifecycleStatus:
                    type: string
                    description: Used to indicate the current lifecycle status
                name:
                    type: string
                    description: Name of the category
                parentId:
                    type: string
                    description: Unique identifier of the parent category
                version:
                    type: string
                    description: ServiceCategory version
                category:
                    type: array
                    description: List of child categories in the tree for in this category
                    items:
                        $ref: '#/components/schemas/ServiceCategoryRef'
                serviceCandidate:
                    type: array
                    description: List of service candidates associated with this category
                    items:
                        $ref: '#/components/schemas/ServiceCandidateRef'
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: |-
                The (service) category resource is used to group service candidates in logical containers. Categories can contain other categories.
                Skipped properties: id,href
        ServiceCategory_Update:
            type: object
            properties:
                description:
                    type: string
                    description: Description of the category
                isRoot:
                    type: boolean
                    description: "If true, this Boolean indicates that the category is a root\
            \ of categories"
                lifecycleStatus:
                    type: string
                    description: Used to indicate the current lifecycle status
                name:
                    type: string
                    description: Name of the category
                parentId:
                    type: string
                    description: Unique identifier of the parent category
                version:
                    type: string
                    description: ServiceCategory version
                category:
                    type: array
                    description: List of child categories in the tree for in this category
                    items:
                        $ref: '#/components/schemas/ServiceCategoryRef'
                serviceCandidate:
                    type: array
                    description: List of service candidates associated with this category
                    items:
                        $ref: '#/components/schemas/ServiceCandidateRef'
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: |-
                The (service) category resource is used to group service candidates in logical containers. Categories can contain other categories.
                Skipped properties: id,href,lastUpdate
        ServiceCategoryRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                name:
                    type: string
                    description: Name of the related entity.
                version:
                    type: string
                    description: Category version
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: The (service) category resource is used to group service candidates
                in logical containers. Categories can contain other categories.
        ServiceFeatureSpecification:
            type: object
            properties:
                id:
                    type: string
                    description: "Identifier of the feature specification. Must be locally unique\
            \ within the containing specification, thus allowing direct access to\
            \ the feature spec."
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                isBundle:
                    type: boolean
                    description: A flag indicating if this is a feature group (true) or not
                        (false)
                isEnabled:
                    type: boolean
                    description: A flag indicating if the feature is enabled (true) or not (false)
                name:
                    type: string
                    description: Unique name given to the feature specification
                version:
                    type: string
                    description: Version of the feature specification
                constraint:
                    type: array
                    description: A list of feature constraints/rules
                    items:
                        $ref: '#/components/schemas/ConstraintRef'
                featureSpecCharacteristic:
                    type: array
                    description: This is a list of characteristics for a particular feature
                    items:
                        $ref: '#/components/schemas/CharacteristicSpecification'
                featureSpecRelationship:
                    type: array
                    description: "A dependency, exclusivity or aggratation relationship between/among\
            \ feature specifications."
                    items:
                        $ref: '#/components/schemas/FeatureSpecificationRelationship'
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: Specification for service features
        ServiceLevelSpecificationRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                name:
                    type: string
                    description: Name of the related entity.
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: "A Service Level Specification represents a pre-defined or negotiated\
        \ set of Service Level \nObjectives. In addition, certain consequences are\
        \ associated with not meeting the Service Level \nObjectives. Service Level\
        \ Agreements are expressed in terms of Service Level Specifications."
        ServiceSpecRelationship:
            required:
                - relationshipType
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                name:
                    type: string
                    description: Name of the related entity.
                relationshipType:
                    type: string
                    description: "Type of relationship such as dependency, substitution or exclusivity"
                role:
                    type: string
                    description: The association role for this service specification
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: "A dependency, substitution or exclusivity relationship between/among\
        \ service specifications."
        ServiceSpecification:
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                description:
                    type: string
                    description: Description of the specification
                isBundle:
                    type: boolean
                    description: "isBundle determines whether specification represents a single\
            \ specification (false), or a bundle of specifications (true)."
                lastUpdate:
                    type: string
                    description: Date and time of the last update of the specification
                    format: date-time
                lifecycleStatus:
                    type: string
                    description: Used to indicate the current lifecycle status of this catalog
                        item
                name:
                    type: string
                    description: Name given to the specification
                version:
                    type: string
                    description: specification version
                attachment:
                    type: array
                    description: "Attachments that may be of relevance to this specification,\
            \ such as picture, document, media"
                    items:
                        $ref: '#/components/schemas/AttachmentRefOrValue'
                constraint:
                    type: array
                    description: This is a list of constraint references applied to this specification
                    items:
                        $ref: '#/components/schemas/ConstraintRef'
                entitySpecRelationship:
                    type: array
                    description: Relationship to another specification
                    items:
                        $ref: '#/components/schemas/EntitySpecificationRelationship'
                featureSpecification:
                    type: array
                    description: A list of Features for this specification.
                    items:
                        $ref: '#/components/schemas/ServiceFeatureSpecification'
                relatedParty:
                    type: array
                    description: Parties who manage or otherwise have an interest in this specification
                    items:
                        $ref: '#/components/schemas/RelatedParty'
                resourceSpecification:
                    type: array
                    description: "A list of resource specification references (ResourceSpecificationRef\
            \ [*]). The ResourceSpecification is required for a service specification\
            \ with type ResourceFacingServiceSpecification (RFSS)."
                    items:
                        $ref: '#/components/schemas/ResourceSpecificationRef'
                serviceLevelSpecification:
                    type: array
                    description: "A list of service level specifications related to this service\
            \ specification, and which will need to be satisifiable for corresponding\
            \ service instances; e.g. Gold, Platinum"
                    items:
                        $ref: '#/components/schemas/ServiceLevelSpecificationRef'
                serviceSpecRelationship:
                    type: array
                    description: "A list of service specifications related to this specification,\
            \ e.g. migration, substitution, dependency or exclusivity relationship"
                    items:
                        $ref: '#/components/schemas/ServiceSpecRelationship'
                specCharacteristic:
                    type: array
                    description: List of characteristics that the entity can take
                    items:
                        $ref: '#/components/schemas/CharacteristicSpecification'
                targetEntitySchema:
                    $ref: '#/components/schemas/TargetEntitySchema'
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: |-
                ServiceSpecification is a class that offers characteristics to describe a type of service.
                Functionally, it acts as a template by which Services may be instantiated. By sharing the same specification, these services would therefore share the same set of characteristics.
        ServiceSpecification_Create:
            required:
                - name
            type: object
            properties:
                description:
                    type: string
                    description: Description of the specification
                isBundle:
                    type: boolean
                    description: "isBundle determines whether specification represents a single\
            \ specification (false), or a bundle of specifications (true)."
                lastUpdate:
                    type: string
                    description: Date and time of the last update of the specification
                    format: date-time
                lifecycleStatus:
                    type: string
                    description: Used to indicate the current lifecycle status of this catalog
                        item
                name:
                    type: string
                    description: Name given to the specification
                version:
                    type: string
                    description: specification version
                attachment:
                    type: array
                    description: "Attachments that may be of relevance to this specification,\
            \ such as picture, document, media"
                    items:
                        $ref: '#/components/schemas/AttachmentRefOrValue'
                constraint:
                    type: array
                    description: This is a list of constraint references applied to this specification
                    items:
                        $ref: '#/components/schemas/ConstraintRef'
                entitySpecRelationship:
                    type: array
                    description: Relationship to another specification
                    items:
                        $ref: '#/components/schemas/EntitySpecificationRelationship'
                featureSpecification:
                    type: array
                    description: A list of Features for this specification.
                    items:
                        $ref: '#/components/schemas/ServiceFeatureSpecification'
                relatedParty:
                    type: array
                    description: Parties who manage or otherwise have an interest in this specification
                    items:
                        $ref: '#/components/schemas/RelatedParty'
                resourceSpecification:
                    type: array
                    description: "A list of resource specification references (ResourceSpecificationRef\
            \ [*]). The ResourceSpecification is required for a service specification\
            \ with type ResourceFacingServiceSpecification (RFSS)."
                    items:
                        $ref: '#/components/schemas/ResourceSpecificationRef'
                serviceLevelSpecification:
                    type: array
                    description: "A list of service level specifications related to this service\
            \ specification, and which will need to be satisifiable for corresponding\
            \ service instances; e.g. Gold, Platinum"
                    items:
                        $ref: '#/components/schemas/ServiceLevelSpecificationRef'
                serviceSpecRelationship:
                    type: array
                    description: "A list of service specifications related to this specification,\
            \ e.g. migration, substitution, dependency or exclusivity relationship"
                    items:
                        $ref: '#/components/schemas/ServiceSpecRelationship'
                specCharacteristic:
                    type: array
                    description: List of characteristics that the entity can take
                    items:
                        $ref: '#/components/schemas/CharacteristicSpecification'
                targetEntitySchema:
                    $ref: '#/components/schemas/TargetEntitySchema'
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: |-
                ServiceSpecification is a class that offers characteristics to describe a type of service.
                Functionally, it acts as a template by which Services may be instantiated. By sharing the same specification, these services would therefore share the same set of characteristics.
                Skipped properties: id,href
        ServiceSpecification_Update:
            type: object
            properties:
                description:
                    type: string
                    description: Description of the specification
                isBundle:
                    type: boolean
                    description: "isBundle determines whether specification represents a single\
            \ specification (false), or a bundle of specifications (true)."
                lifecycleStatus:
                    type: string
                    description: Used to indicate the current lifecycle status of this catalog
                        item
                name:
                    type: string
                    description: Name given to the specification
                version:
                    type: string
                    description: specification version
                attachment:
                    type: array
                    description: "Attachments that may be of relevance to this specification,\
            \ such as picture, document, media"
                    items:
                        $ref: '#/components/schemas/AttachmentRefOrValue'
                constraint:
                    type: array
                    description: This is a list of constraint references applied to this specification
                    items:
                        $ref: '#/components/schemas/ConstraintRef'
                entitySpecRelationship:
                    type: array
                    description: Relationship to another specification
                    items:
                        $ref: '#/components/schemas/EntitySpecificationRelationship'
                featureSpecification:
                    type: array
                    description: A list of Features for this specification.
                    items:
                        $ref: '#/components/schemas/ServiceFeatureSpecification'
                relatedParty:
                    type: array
                    description: Parties who manage or otherwise have an interest in this specification
                    items:
                        $ref: '#/components/schemas/RelatedParty'
                resourceSpecification:
                    type: array
                    description: "A list of resource specification references (ResourceSpecificationRef\
            \ [*]). The ResourceSpecification is required for a service specification\
            \ with type ResourceFacingServiceSpecification (RFSS)."
                    items:
                        $ref: '#/components/schemas/ResourceSpecificationRef'
                serviceLevelSpecification:
                    type: array
                    description: "A list of service level specifications related to this service\
            \ specification, and which will need to be satisifiable for corresponding\
            \ service instances; e.g. Gold, Platinum"
                    items:
                        $ref: '#/components/schemas/ServiceLevelSpecificationRef'
                serviceSpecRelationship:
                    type: array
                    description: "A list of service specifications related to this specification,\
            \ e.g. migration, substitution, dependency or exclusivity relationship"
                    items:
                        $ref: '#/components/schemas/ServiceSpecRelationship'
                specCharacteristic:
                    type: array
                    description: List of characteristics that the entity can take
                    items:
                        $ref: '#/components/schemas/CharacteristicSpecification'
                targetEntitySchema:
                    $ref: '#/components/schemas/TargetEntitySchema'
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: |-
                ServiceSpecification is a class that offers characteristics to describe a type of service.
                Functionally, it acts as a template by which Services may be instantiated. By sharing the same specification, these services would therefore share the same set of characteristics.
                Skipped properties: id,href,lastUpdate
        ServiceSpecificationRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                name:
                    type: string
                    description: Name of the related entity.
                version:
                    type: string
                    description: Service specification version
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: "Service specification reference: ServiceSpecification(s) required\
        \ to realize a ProductSpecification."
        TargetEntitySchema:
            required:
                - '@schemaLocation'
                - '@type'
            type: object
            properties:
                '@schemaLocation':
                    type: string
                    description: This field provides a link to the schema describing the target
                        entity
                '@type':
                    type: string
                    description: Class type of the target entity
            description: The reference object to the schema and type of target entity which
                is described by a specification
        TimePeriod:
            type: object
            properties:
                endDateTime:
                    type: string
                    description: "End of the time period, using IETC-RFC-3339 format"
                    format: date-time
                    example: 1985-04-12T23:20:50.52Z
                startDateTime:
                    type: string
                    description: "Start of the time period, using IETC-RFC-3339 format"
                    format: date-time
                    example: 1985-04-12T23:20:50.52Z
            description: "A period of time, either as a deadline (endDateTime only) a startDateTime\
        \ only, or both"
        EventSubscription:
            required:
                - callback
                - id
            type: object
            properties:
                id:
                    type: string
                    description: Id of the listener
                callback:
                    type: string
                    description: The callback being registered.
                query:
                    type: string
                    description: additional data to be passed
            description: Sets the communication endpoint address the service instance must
                use to deliver notification information
        EventSubscriptionInput:
            required:
                - callback
            type: object
            properties:
                callback:
                    type: string
                    description: The callback being registered.
                query:
                    type: string
                    description: additional data to be passed
            description: Sets the communication endpoint address the service instance must
                use to deliver notification information
        ServiceCatalogCreateEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/ServiceCatalogCreateEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        ServiceCatalogCreateEventPayload:
            type: object
            properties:
                serviceCatalog:
                    $ref: '#/components/schemas/ServiceCatalog'
            description: The event data structure
        ServiceCatalogChangeEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/ServiceCatalogChangeEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        ServiceCatalogChangeEventPayload:
            type: object
            properties:
                serviceCatalog:
                    $ref: '#/components/schemas/ServiceCatalog'
            description: The event data structure
        ServiceCatalogBatchEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/ServiceCatalogBatchEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        ServiceCatalogBatchEventPayload:
            type: object
            properties:
                serviceCatalog:
                    $ref: '#/components/schemas/ServiceCatalog'
            description: The event data structure
        ServiceCatalogDeleteEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/ServiceCatalogDeleteEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        ServiceCatalogDeleteEventPayload:
            type: object
            properties:
                serviceCatalog:
                    $ref: '#/components/schemas/ServiceCatalog'
            description: The event data structure
        ServiceCategoryCreateEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/ServiceCategoryCreateEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        ServiceCategoryCreateEventPayload:
            type: object
            properties:
                serviceCategory:
                    $ref: '#/components/schemas/ServiceCategory'
            description: The event data structure
        ServiceCategoryChangeEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/ServiceCategoryChangeEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        ServiceCategoryChangeEventPayload:
            type: object
            properties:
                serviceCategory:
                    $ref: '#/components/schemas/ServiceCategory'
            description: The event data structure
        ServiceCategoryDeleteEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/ServiceCategoryDeleteEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        ServiceCategoryDeleteEventPayload:
            type: object
            properties:
                serviceCategory:
                    $ref: '#/components/schemas/ServiceCategory'
            description: The event data structure
        ServiceCandidateCreateEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/ServiceCandidateCreateEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        ServiceCandidateCreateEventPayload:
            type: object
            properties:
                serviceCandidate:
                    $ref: '#/components/schemas/ServiceCandidate'
            description: The event data structure
        ServiceCandidateChangeEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/ServiceCandidateChangeEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        ServiceCandidateChangeEventPayload:
            type: object
            properties:
                serviceCandidate:
                    $ref: '#/components/schemas/ServiceCandidate'
            description: The event data structure
        ServiceCandidateDeleteEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/ServiceCandidateDeleteEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        ServiceCandidateDeleteEventPayload:
            type: object
            properties:
                serviceCandidate:
                    $ref: '#/components/schemas/ServiceCandidate'
            description: The event data structure
        ServiceSpecificationCreateEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/ServiceSpecificationCreateEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        ServiceSpecificationCreateEventPayload:
            type: object
            properties:
                serviceSpecification:
                    $ref: '#/components/schemas/ServiceSpecification'
            description: The event data structure
        ServiceSpecificationChangeEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/ServiceSpecificationChangeEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        ServiceSpecificationChangeEventPayload:
            type: object
            properties:
                serviceSpecification:
                    $ref: '#/components/schemas/ServiceSpecification'
            description: The event data structure
        ServiceSpecificationDeleteEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/ServiceSpecificationDeleteEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        ServiceSpecificationDeleteEventPayload:
            type: object
            properties:
                serviceSpecification:
                    $ref: '#/components/schemas/ServiceSpecification'
            description: The event data structure
        Error:
            required:
                - code
                - reason
            type: object
            properties:
                code:
                    type: string
                    description: "Application relevant detail, defined in the API or a common\
            \ list."
                reason:
                    type: string
                    description: Explanation of the reason for the error which can be shown
                        to a client user.
                message:
                    type: string
                    description: More details and corrective actions related to the error which
                        can be shown to a client user.
                status:
                    type: string
                    description: HTTP Error code extension
                referenceError:
                    type: string
                    description: URI of documentation describing the error.
                    format: uri
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class."
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class entity name."
            description: "Used when an API throws an Error, typically with a HTTP error\
        \ response-code (3xx, 4xx, 5xx)"
x-original-swagger-version: "2.0"
