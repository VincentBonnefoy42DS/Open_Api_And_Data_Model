openapi: 3.0.1
info:
    title: Service Problem Management
    description: "TMF656 - Service Problem Management, August 2020. Service Problem\
    \ Management API is used to manage problems in the Service domain. It can retrieve\
    \ a Problem or a collection of Problems based on filter criteria; Partial update\
    \ of Problems (including updating rules); Create a Problem (including default\
    \ values and creation rules); Delete a Problem (for administration purposes) and\
    \ Manage the notification of events"
    version: 4.0.0
servers:
    -   url: https://serverRoot/tmf-api/serviceProblemManagement/v4/
tags:
    -   name: serviceProblem
    -   name: serviceProblemEventRecord
    -   name: problemGroup
    -   name: problemUngroup
    -   name: notification listeners (client side)
    -   name: events subscription
paths:
    /serviceProblem:
        get:
            tags:
                - serviceProblem
            summary: List or find ServiceProblem objects
            description: This operation list or find ServiceProblem entities
            operationId: listServiceProblem
            parameters:
                -   name: fields
                    in: query
                    description: Comma-separated properties to be provided in response
                    schema:
                        type: string
                -   name: offset
                    in: query
                    description: Requested index for start of resources to be provided in response
                    schema:
                        type: integer
                -   name: limit
                    in: query
                    description: Requested number of resources to be provided in response
                    schema:
                        type: integer
            responses:
                "200":
                    description: Success
                    headers:
                        X-Total-Count:
                            description: Total number of items matching criteria
                            schema:
                                type: integer
                        X-Result-Count:
                            description: Actual number of items returned in the response body
                            schema:
                                type: integer
                    content:
                        application/json;charset=utf-8:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/ServiceProblem'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
        post:
            tags:
                - serviceProblem
            summary: Creates a ServiceProblem
            description: This operation creates a ServiceProblem entity.
            operationId: createServiceProblem
            requestBody:
                description: The ServiceProblem to be created
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/ServiceProblem_Create'
                required: true
            responses:
                "201":
                    description: Created
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/ServiceProblem'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: serviceProblem
    /serviceProblem/{id}:
        get:
            tags:
                - serviceProblem
            summary: Retrieves a ServiceProblem by ID
            description: This operation retrieves a ServiceProblem entity. Attribute selection
                is enabled for all first level attributes.
            operationId: retrieveServiceProblem
            parameters:
                -   name: id
                    in: path
                    description: Identifier of the ServiceProblem
                    required: true
                    schema:
                        type: string
                -   name: fields
                    in: query
                    description: Comma-separated properties to provide in response
                    schema:
                        type: string
            responses:
                "200":
                    description: Success
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/ServiceProblem'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
        delete:
            tags:
                - serviceProblem
            summary: Deletes a ServiceProblem
            description: This operation deletes a ServiceProblem entity.
            operationId: deleteServiceProblem
            parameters:
                -   name: id
                    in: path
                    description: Identifier of the ServiceProblem
                    required: true
                    schema:
                        type: string
            responses:
                "204":
                    description: Deleted
                    content: { }
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
        patch:
            tags:
                - serviceProblem
            summary: Updates partially a ServiceProblem
            description: This operation updates partially a ServiceProblem entity.
            operationId: patchServiceProblem
            parameters:
                -   name: id
                    in: path
                    description: Identifier of the ServiceProblem
                    required: true
                    schema:
                        type: string
            requestBody:
                description: The ServiceProblem to be updated
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/ServiceProblem_Update'
                required: true
            responses:
                "200":
                    description: Updated
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/ServiceProblem'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: serviceProblem
    /serviceProblemEventRecord:
        get:
            tags:
                - serviceProblemEventRecord
            summary: List or find ServiceProblemEventRecord objects
            description: This operation list or find ServiceProblemEventRecord entities
            operationId: listServiceProblemEventRecord
            parameters:
                -   name: fields
                    in: query
                    description: Comma-separated properties to be provided in response
                    schema:
                        type: string
                -   name: offset
                    in: query
                    description: Requested index for start of resources to be provided in response
                    schema:
                        type: integer
                -   name: limit
                    in: query
                    description: Requested number of resources to be provided in response
                    schema:
                        type: integer
            responses:
                "200":
                    description: Success
                    headers:
                        X-Total-Count:
                            description: Total number of items matching criteria
                            schema:
                                type: integer
                        X-Result-Count:
                            description: Actual number of items returned in the response body
                            schema:
                                type: integer
                    content:
                        application/json;charset=utf-8:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/ServiceProblemEventRecord'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
    /serviceProblemEventRecord/{id}:
        get:
            tags:
                - serviceProblemEventRecord
            summary: Retrieves a ServiceProblemEventRecord by ID
            description: This operation retrieves a ServiceProblemEventRecord entity. Attribute
                selection is enabled for all first level attributes.
            operationId: retrieveServiceProblemEventRecord
            parameters:
                -   name: id
                    in: path
                    description: Identifier of the ServiceProblemEventRecord
                    required: true
                    schema:
                        type: string
                -   name: fields
                    in: query
                    description: Comma-separated properties to provide in response
                    schema:
                        type: string
            responses:
                "200":
                    description: Success
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/ServiceProblemEventRecord'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
    /problemGroup:
        post:
            tags:
                - problemGroup
            summary: Creates a ProblemGroup
            description: This operation creates a ProblemGroup entity.
            operationId: createProblemGroup
            requestBody:
                description: The ProblemGroup to be created
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/ProblemGroup_Create'
                required: true
            responses:
                "201":
                    description: Created
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/ProblemGroup'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: problemGroup
    /problemUngroup:
        post:
            tags:
                - problemUngroup
            summary: Creates a ProblemUngroup
            description: This operation creates a ProblemUngroup entity.
            operationId: createProblemUngroup
            requestBody:
                description: The ProblemUngroup to be created
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/ProblemUngroup_Create'
                required: true
            responses:
                "201":
                    description: Created
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/ProblemUngroup'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: problemUngroup
    /hub:
        post:
            tags:
                - events subscription
            summary: Register a listener
            description: "Sets the communication endpoint address the service instance must\
        \ use to deliver information about its health state, execution state, failures\
        \ and metrics."
            operationId: registerListener
            requestBody:
                description: Data containing the callback endpoint to deliver the information
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/EventSubscriptionInput'
                required: true
            responses:
                "201":
                    description: Subscribed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /hub/{id}:
        delete:
            tags:
                - events subscription
            summary: Unregister a listener
            description: "Resets the communication endpoint address the service instance\
        \ must use to deliver information about its health state, execution state,\
        \ failures and metrics."
            operationId: unregisterListener
            parameters:
                -   name: id
                    in: path
                    description: The id of the registered listener
                    required: true
                    schema:
                        type: string
            responses:
                "204":
                    description: Deleted
                    content: { }
                "400":
                    description: Bad request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
    /listener/serviceProblemCreateEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity ServiceProblemCreateEvent
            description: Example of a client listener for receiving the notification ServiceProblemCreateEvent
            operationId: listenToServiceProblemCreateEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/ServiceProblemCreateEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/serviceProblemStateChangeEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity ServiceProblemStateChangeEvent
            description: Example of a client listener for receiving the notification ServiceProblemStateChangeEvent
            operationId: listenToServiceProblemStateChangeEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/ServiceProblemStateChangeEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/serviceProblemAttributeValueChangeEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity ServiceProblemAttributeValueChangeEvent
            description: Example of a client listener for receiving the notification ServiceProblemAttributeValueChangeEvent
            operationId: listenToServiceProblemAttributeValueChangeEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/ServiceProblemAttributeValueChangeEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/serviceProblemInformationRequiredEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity ServiceProblemInformationRequiredEvent
            description: Example of a client listener for receiving the notification ServiceProblemInformationRequiredEvent
            operationId: listenToServiceProblemInformationRequiredEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/ServiceProblemInformationRequiredEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
components:
    schemas:
        Addressable:
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
            description: Base schema for adressable entities
        Any:
            type: object
        Characteristic:
            required:
                - name
                - value
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier of the characteristic
                name:
                    type: string
                    description: Name of the characteristic
                valueType:
                    type: string
                    description: Data type of the value of the characteristic
                characteristicRelationship:
                    type: array
                    items:
                        $ref: '#/components/schemas/CharacteristicRelationship'
                value:
                    $ref: '#/components/schemas/Any'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: Describes a given characteristic of an object or entity through
                a name/value pair.
        CharacteristicRelationship:
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier of the characteristic
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                relationshipType:
                    type: string
                    description: The type of relationship
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: Another Characteristic that is related to the current Characteristic;
        Entity:
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: Base entity schema for use in TMForum Open-APIs
        EntityRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                name:
                    type: string
                    description: Name of the related entity.
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: Entity reference schema to be use for all entityRef class.
        EventRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                eventTime:
                    type: string
                    description: Time the event occurred
                    format: date-time
                name:
                    type: string
                    description: Name of the related entity.
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: Events linked with service problem
        Extensible:
            type: object
            properties:
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: Base Extensible schema for use in TMForum Open-APIs
        ExternalIdentifier:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: identification of the entity within the external system.
                    example: MC2255771199555
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                externalIdentifierType:
                    type: string
                    description: "Type of the identification, typically would be the type of\
            \ the entity within the external system"
                    example: ProductOrder
                owner:
                    type: string
                    description: Name of the external system that owns the entity.
                    example: MagentoCommerce
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: "An identification of an entity that is owned by or originates\
        \ in a software system different from the current system, for example a ProductOrder\
        \ handed off from a commerce platform into an order handling system. The structure\
        \ identifies the system itself, the nature of the entity within the system\
        \ (e.g. class name) and the unique ID of the entity within the system. It\
        \ is anticipated that multiple external IDs can be held for a single entity,\
        \ e.g. if the entity passed through multiple systems on the way to the current\
        \ system. In this case the consumer is expected to sequence the IDs in the\
        \ array in reverse order of provenance, i.e. most recent system first in the\
        \ list."
        ImpactPattern:
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                description:
                    type: string
                    description: Basic description of the impact pattern
                characteristic:
                    type: array
                    description: A generic list of any type of elements. Used for extensions
                        or loose element encapsulation from other namespaces
                    items:
                        $ref: '#/components/schemas/Characteristic'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: "Define the patterns of impact (optional), such as other service\
        \ characteristics- Used when defining impact through another pattern than\
        \ the pre-defined attributes"
        Note:
            type: object
            properties:
                id:
                    type: string
                    description: Identifier of the note within its containing entity
                    example: ""
                author:
                    type: string
                    description: Author of the note
                    example: ""
                date:
                    type: string
                    description: Date of the note
                    format: date-time
                text:
                    type: string
                    description: Text of the note
                    example: ""
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: Extra information about a given entity
        ProblemGroup:
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier of this task resource
                href:
                    type: string
                    description: Reference to this task resource
                childProblem:
                    type: array
                    description: List of problems to be grouped under a parent problem
                    items:
                        $ref: '#/components/schemas/ServiceProblemRef'
                parentProblem:
                    $ref: '#/components/schemas/ServiceProblemRef'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: Task resource that requests Service Problems to be grouped together
                into a parent and set of children
        ProblemGroup_Create:
            required:
                - childProblem
                - parentProblem
            type: object
            properties:
                childProblem:
                    minItems: 1
                    type: array
                    description: List of problems to be grouped under a parent problem
                    items:
                        $ref: '#/components/schemas/ServiceProblemRef'
                parentProblem:
                    $ref: '#/components/schemas/ServiceProblemRef'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: |-
                Task resource that requests Service Problems to be grouped together into a parent and set of children
                Skipped properties: id,href
        ProblemUngroup:
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier of this task resource
                href:
                    type: string
                    description: Reference to this task resource
                childProblem:
                    type: array
                    description: List of problems to be ungrouped from a parent problem
                    items:
                        $ref: '#/components/schemas/ServiceProblemRef'
                parentProblem:
                    $ref: '#/components/schemas/ServiceProblemRef'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: Task resource that requests Service Problems to be ungrouped from
                a parent
        ProblemUngroup_Create:
            required:
                - childProblem
                - parentProblem
            type: object
            properties:
                childProblem:
                    minItems: 1
                    type: array
                    description: List of problems to be ungrouped from a parent problem
                    items:
                        $ref: '#/components/schemas/ServiceProblemRef'
                parentProblem:
                    $ref: '#/components/schemas/ServiceProblemRef'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: |-
                Task resource that requests Service Problems to be ungrouped from a parent
                Skipped properties: id,href
        RelatedEntity:
            required:
                - '@referredType'
                - id
                - role
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                name:
                    type: string
                    description: Name of the related entity.
                role:
                    type: string
                    description: The role of an entity.
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: "A reference to an entity, where the type of the entity is not\
        \ known in advance."
        RelatedParty:
            required:
                - '@referredType'
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                name:
                    type: string
                    description: Name of the related entity.
                role:
                    type: string
                    description: Role played by the related party
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: Related Entity reference. A related party defines party or party
                role linked to a specific entity.
        RelatedPlace:
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier of the place
                href:
                    type: string
                    description: Unique reference of the place
                name:
                    type: string
                    description: "A user-friendly name for the place, such as [Paris Store],\
            \ [London Store], [Main Home]"
                role:
                    type: string
                    description: "Role of the place, such as: [home delivery], [shop retrieval])"
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: "A  Place and an associated role as installation adress, delivery\
        \ address, etc...."
        ResourceAlarmRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier of the Alarm
                href:
                    type: string
                    description: Reference of the Alarm
                changeRequest:
                    $ref: '#/components/schemas/EntityRef'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: A set of alarm ids identifying the alarms that are underlying this
                problem.
        ResourceRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                name:
                    type: string
                    description: Name of the related entity.
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
        SLAViolationRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                name:
                    type: string
                    description: Name of the related entity.
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
        ServiceProblem:
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                affectedNumberOfServices:
                    type: integer
                    description: Number of affected services
                category:
                    type: string
                    description: "Classifier for the problem. Settable. For example, this is\
            \ used for distinguish the category of problem originator in [role].[category]\
            \ format. Example: serviceProvider.declarer, supplier.originated, system.originated"
                    example: ""
                creationDate:
                    type: string
                    description: Time the problem was created
                    format: date-time
                description:
                    type: string
                    description: Free form text describing the Service Problem
                impactImportanceFactor:
                    type: string
                    description: "Impact Importance is characterized by an Impact Importance\
            \ Factor: overall importance of the impact of all the affected services,\
            \ e.g. 0 (zero impact) to 100 (worst impact). The Impact Importance is\
            \ a calculated field which is set by the OSS determining the impact."
                lastUpdate:
                    type: string
                    description: Time the problem was last changed
                    format: date-time
                name:
                    type: string
                    description: Name of the Service Problem
                originatingSystem:
                    type: string
                    description: Indicates where the problem was generated
                priority:
                    type: integer
                    description: An indication varying from 1 (highest) to 10 (lowest) of how
                        important it is for the service provider to correct the Service Problem.
                problemEscalation:
                    type: string
                    description: "Indicates if this service problem has been escalated or not.\
            \ Possible values are 0 to 10. A value of zero means no escalation. The\
            \ meanings of values 1-10 are to be determined by the user of the interface,\
            \ but they show increasing levels of escalation."
                reason:
                    type: string
                    description: Free text or optionally structured text. It can be Unknown.
                resolutionDate:
                    type: string
                    description: Time the problem was resolved
                    format: date-time
                statusChangeDate:
                    type: string
                    description: Time the problem was last status changed
                    format: date-time
                statusChangeReason:
                    type: string
                    description: The reason of state change
                affectedLocation:
                    type: array
                    description: "A list of the locations affected by the problem. At least\
            \ one of affectedResource, affectedService or affectedLocation should\
            \ be present."
                    items:
                        $ref: '#/components/schemas/RelatedPlace'
                affectedResource:
                    type: array
                    description: "A list of the resources affected by the problem. At least\
            \ one of affectedResource, affectedService or affectedLocation should\
            \ be present."
                    items:
                        $ref: '#/components/schemas/ResourceRef'
                affectedService:
                    type: array
                    description: "List of affected services. At least one of affectedResource,\
            \ affectedService or affectedLocation should be present."
                    items:
                        $ref: '#/components/schemas/ServiceRef'
                characteristic:
                    type: array
                    items:
                        $ref: '#/components/schemas/Characteristic'
                externalIdentifier:
                    type: array
                    items:
                        $ref: '#/components/schemas/ExternalIdentifier'
                firstAlert:
                    $ref: '#/components/schemas/RelatedEntity'
                impactPattern:
                    $ref: '#/components/schemas/ImpactPattern'
                note:
                    type: array
                    description: A list of comments or notes made on the problem
                    items:
                        $ref: '#/components/schemas/Note'
                originatorParty:
                    $ref: '#/components/schemas/RelatedParty'
                parentProblem:
                    type: array
                    description: The parent problem to which this problem is attached.
                    items:
                        $ref: '#/components/schemas/ServiceProblemRef'
                relatedEntity:
                    type: array
                    description: List of entities associated with this problem
                    items:
                        $ref: '#/components/schemas/RelatedEntity'
                relatedEvent:
                    type: array
                    description: List of events associated to this problem
                    items:
                        $ref: '#/components/schemas/EventRef'
                relatedParty:
                    type: array
                    description: List of parties or party roles playing a role within the service
                        problem
                    items:
                        $ref: '#/components/schemas/RelatedParty'
                responsibleParty:
                    $ref: '#/components/schemas/RelatedParty'
                rootCauseResource:
                    type: array
                    description: Resource(s) that are associated to the underlying service problems
                        that are the Root Cause of this one if any (used only if applicable).
                    items:
                        $ref: '#/components/schemas/ResourceRef'
                rootCauseService:
                    type: array
                    description: Service(s) that are associated to the underlying service problems
                        that are the Root Cause of this one if any (used only if applicable)
                    items:
                        $ref: '#/components/schemas/ServiceRef'
                slaViolation:
                    type: array
                    description: A List of SLA violations associated with this problem.
                    items:
                        $ref: '#/components/schemas/SLAViolationRef'
                status:
                    $ref: '#/components/schemas/ServiceProblemStateType'
                trackingRecord:
                    type: array
                    description: List of tracking records that allow the tracking of modifications
                        on the problem.The tracking records should not be embedded in the problem
                        to allow retrieving the problem without the tracking records
                    items:
                        $ref: '#/components/schemas/TrackingRecord'
                troubleTicket:
                    type: array
                    description: A list of trouble tickets associated with this problem.
                    items:
                        $ref: '#/components/schemas/TroubleTicketRef'
                underlyingAlarm:
                    type: array
                    description: A list of alarms underlying this problem.
                    items:
                        $ref: '#/components/schemas/ResourceAlarmRef'
                underlyingProblem:
                    type: array
                    description: A list of underlying problems. Relevant only if this problem
                        is derived from other problems.
                    items:
                        $ref: '#/components/schemas/ServiceProblemRef'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: The problem information for Middle B which is abstracted in the
                service layer from the issued event information by First B
        ServiceProblem_Create:
            required:
                - category
                - description
                - originatorParty
                - priority
                - reason
            type: object
            properties:
                affectedNumberOfServices:
                    type: integer
                    description: Number of affected services
                category:
                    type: string
                    description: "Classifier for the problem. Settable. For example, this is\
            \ used for distinguish the category of problem originator in [role].[category]\
            \ format. Example: serviceProvider.declarer, supplier.originated, system.originated"
                    example: ""
                creationDate:
                    type: string
                    description: Time the problem was created
                    format: date-time
                description:
                    type: string
                    description: Free form text describing the Service Problem
                impactImportanceFactor:
                    type: string
                    description: "Impact Importance is characterized by an Impact Importance\
            \ Factor: overall importance of the impact of all the affected services,\
            \ e.g. 0 (zero impact) to 100 (worst impact). The Impact Importance is\
            \ a calculated field which is set by the OSS determining the impact."
                lastUpdate:
                    type: string
                    description: Time the problem was last changed
                    format: date-time
                name:
                    type: string
                    description: Name of the Service Problem
                originatingSystem:
                    type: string
                    description: Indicates where the problem was generated
                priority:
                    type: integer
                    description: An indication varying from 1 (highest) to 10 (lowest) of how
                        important it is for the service provider to correct the Service Problem.
                problemEscalation:
                    type: string
                    description: "Indicates if this service problem has been escalated or not.\
            \ Possible values are 0 to 10. A value of zero means no escalation. The\
            \ meanings of values 1-10 are to be determined by the user of the interface,\
            \ but they show increasing levels of escalation."
                reason:
                    type: string
                    description: Free text or optionally structured text. It can be Unknown.
                resolutionDate:
                    type: string
                    description: Time the problem was resolved
                    format: date-time
                statusChangeDate:
                    type: string
                    description: Time the problem was last status changed
                    format: date-time
                statusChangeReason:
                    type: string
                    description: The reason of state change
                affectedLocation:
                    type: array
                    description: "A list of the locations affected by the problem. At least\
            \ one of affectedResource, affectedService or affectedLocation should\
            \ be present."
                    items:
                        $ref: '#/components/schemas/RelatedPlace'
                affectedResource:
                    type: array
                    description: "A list of the resources affected by the problem. At least\
            \ one of affectedResource, affectedService or affectedLocation should\
            \ be present."
                    items:
                        $ref: '#/components/schemas/ResourceRef'
                affectedService:
                    type: array
                    description: "List of affected services. At least one of affectedResource,\
            \ affectedService or affectedLocation should be present."
                    items:
                        $ref: '#/components/schemas/ServiceRef'
                characteristic:
                    type: array
                    items:
                        $ref: '#/components/schemas/Characteristic'
                externalIdentifier:
                    type: array
                    items:
                        $ref: '#/components/schemas/ExternalIdentifier'
                firstAlert:
                    $ref: '#/components/schemas/RelatedEntity'
                impactPattern:
                    $ref: '#/components/schemas/ImpactPattern'
                note:
                    type: array
                    description: A list of comments or notes made on the problem
                    items:
                        $ref: '#/components/schemas/Note'
                originatorParty:
                    $ref: '#/components/schemas/RelatedParty'
                parentProblem:
                    type: array
                    description: The parent problem to which this problem is attached.
                    items:
                        $ref: '#/components/schemas/ServiceProblemRef'
                relatedEntity:
                    type: array
                    description: List of entities associated with this problem
                    items:
                        $ref: '#/components/schemas/RelatedEntity'
                relatedEvent:
                    type: array
                    description: List of events associated to this problem
                    items:
                        $ref: '#/components/schemas/EventRef'
                relatedParty:
                    type: array
                    description: List of parties or party roles playing a role within the service
                        problem
                    items:
                        $ref: '#/components/schemas/RelatedParty'
                responsibleParty:
                    $ref: '#/components/schemas/RelatedParty'
                rootCauseResource:
                    type: array
                    description: Resource(s) that are associated to the underlying service problems
                        that are the Root Cause of this one if any (used only if applicable).
                    items:
                        $ref: '#/components/schemas/ResourceRef'
                rootCauseService:
                    type: array
                    description: Service(s) that are associated to the underlying service problems
                        that are the Root Cause of this one if any (used only if applicable)
                    items:
                        $ref: '#/components/schemas/ServiceRef'
                slaViolation:
                    type: array
                    description: A List of SLA violations associated with this problem.
                    items:
                        $ref: '#/components/schemas/SLAViolationRef'
                status:
                    $ref: '#/components/schemas/ServiceProblemStateType'
                trackingRecord:
                    type: array
                    description: List of tracking records that allow the tracking of modifications
                        on the problem.The tracking records should not be embedded in the problem
                        to allow retrieving the problem without the tracking records
                    items:
                        $ref: '#/components/schemas/TrackingRecord'
                troubleTicket:
                    type: array
                    description: A list of trouble tickets associated with this problem.
                    items:
                        $ref: '#/components/schemas/TroubleTicketRef'
                underlyingAlarm:
                    type: array
                    description: A list of alarms underlying this problem.
                    items:
                        $ref: '#/components/schemas/ResourceAlarmRef'
                underlyingProblem:
                    type: array
                    description: A list of underlying problems. Relevant only if this problem
                        is derived from other problems.
                    items:
                        $ref: '#/components/schemas/ServiceProblemRef'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: |-
                The problem information for Middle B which is abstracted in the service layer from the issued event information by First B
                Skipped properties: id,href
        ServiceProblem_Update:
            type: object
            properties:
                affectedNumberOfServices:
                    type: integer
                    description: Number of affected services
                category:
                    type: string
                    description: "Classifier for the problem. Settable. For example, this is\
            \ used for distinguish the category of problem originator in [role].[category]\
            \ format. Example: serviceProvider.declarer, supplier.originated, system.originated"
                    example: ""
                creationDate:
                    type: string
                    description: Time the problem was created
                    format: date-time
                description:
                    type: string
                    description: Free form text describing the Service Problem
                impactImportanceFactor:
                    type: string
                    description: "Impact Importance is characterized by an Impact Importance\
            \ Factor: overall importance of the impact of all the affected services,\
            \ e.g. 0 (zero impact) to 100 (worst impact). The Impact Importance is\
            \ a calculated field which is set by the OSS determining the impact."
                lastUpdate:
                    type: string
                    description: Time the problem was last changed
                    format: date-time
                name:
                    type: string
                    description: Name of the Service Problem
                priority:
                    type: integer
                    description: An indication varying from 1 (highest) to 10 (lowest) of how
                        important it is for the service provider to correct the Service Problem.
                problemEscalation:
                    type: string
                    description: "Indicates if this service problem has been escalated or not.\
            \ Possible values are 0 to 10. A value of zero means no escalation. The\
            \ meanings of values 1-10 are to be determined by the user of the interface,\
            \ but they show increasing levels of escalation."
                reason:
                    type: string
                    description: Free text or optionally structured text. It can be Unknown.
                resolutionDate:
                    type: string
                    description: Time the problem was resolved
                    format: date-time
                statusChangeDate:
                    type: string
                    description: Time the problem was last status changed
                    format: date-time
                statusChangeReason:
                    type: string
                    description: The reason of state change
                affectedLocation:
                    type: array
                    description: "A list of the locations affected by the problem. At least\
            \ one of affectedResource, affectedService or affectedLocation should\
            \ be present."
                    items:
                        $ref: '#/components/schemas/RelatedPlace'
                affectedResource:
                    type: array
                    description: "A list of the resources affected by the problem. At least\
            \ one of affectedResource, affectedService or affectedLocation should\
            \ be present."
                    items:
                        $ref: '#/components/schemas/ResourceRef'
                affectedService:
                    type: array
                    description: "List of affected services. At least one of affectedResource,\
            \ affectedService or affectedLocation should be present."
                    items:
                        $ref: '#/components/schemas/ServiceRef'
                characteristic:
                    type: array
                    items:
                        $ref: '#/components/schemas/Characteristic'
                externalIdentifier:
                    type: array
                    items:
                        $ref: '#/components/schemas/ExternalIdentifier'
                impactPattern:
                    $ref: '#/components/schemas/ImpactPattern'
                note:
                    type: array
                    description: A list of comments or notes made on the problem
                    items:
                        $ref: '#/components/schemas/Note'
                originatorParty:
                    $ref: '#/components/schemas/RelatedParty'
                parentProblem:
                    type: array
                    description: The parent problem to which this problem is attached.
                    items:
                        $ref: '#/components/schemas/ServiceProblemRef'
                relatedEntity:
                    type: array
                    description: List of entities associated with this problem
                    items:
                        $ref: '#/components/schemas/RelatedEntity'
                relatedEvent:
                    type: array
                    description: List of events associated to this problem
                    items:
                        $ref: '#/components/schemas/EventRef'
                relatedParty:
                    type: array
                    description: List of parties or party roles playing a role within the service
                        problem
                    items:
                        $ref: '#/components/schemas/RelatedParty'
                responsibleParty:
                    $ref: '#/components/schemas/RelatedParty'
                rootCauseResource:
                    type: array
                    description: Resource(s) that are associated to the underlying service problems
                        that are the Root Cause of this one if any (used only if applicable).
                    items:
                        $ref: '#/components/schemas/ResourceRef'
                rootCauseService:
                    type: array
                    description: Service(s) that are associated to the underlying service problems
                        that are the Root Cause of this one if any (used only if applicable)
                    items:
                        $ref: '#/components/schemas/ServiceRef'
                slaViolation:
                    type: array
                    description: A List of SLA violations associated with this problem.
                    items:
                        $ref: '#/components/schemas/SLAViolationRef'
                status:
                    $ref: '#/components/schemas/ServiceProblemStateType'
                troubleTicket:
                    type: array
                    description: A list of trouble tickets associated with this problem.
                    items:
                        $ref: '#/components/schemas/TroubleTicketRef'
                underlyingAlarm:
                    type: array
                    description: A list of alarms underlying this problem.
                    items:
                        $ref: '#/components/schemas/ResourceAlarmRef'
                underlyingProblem:
                    type: array
                    description: A list of underlying problems. Relevant only if this problem
                        is derived from other problems.
                    items:
                        $ref: '#/components/schemas/ServiceProblemRef'
            description: |-
                The problem information for Middle B which is abstracted in the service layer from the issued event information by First B
                Skipped properties: id,href,@baseType,@schemaLocation,@type,firstAlert,originatingSystem,trackingRecord
        ServiceProblemEventRecord:
            type: object
            properties:
                id:
                    type: string
                    description: Identifier of the service problem event record.
                href:
                    type: string
                    description: reference to this resource
                eventTime:
                    type: string
                    description: Time at which the event occurred
                    format: date-time
                eventType:
                    type: string
                    description: Type of the recorded event
                recordTime:
                    type: string
                    description: Time at which the record was created
                    format: date-time
                notification:
                    $ref: '#/components/schemas/Any'
                serviceProblem:
                    $ref: '#/components/schemas/ServiceProblemRef'
            description: A record of an event (related to a service problem) received from
                another system
        ServiceProblemRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                name:
                    type: string
                    description: Name of the related entity.
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
        ServiceProblemStateType:
            type: string
            description: Possible values for the state of the ServiceProblem
            enum:
                - acknowledged
                - rejected
                - pending
                - held
                - inProgress
                - resolved
                - cancelled
                - closed
        ServiceRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                name:
                    type: string
                    description: Name of the related entity.
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: "Service reference, for when Service is used by other entities"
        TrackingRecord:
            type: object
            properties:
                id:
                    type: string
                    description: Identifier of the TrackingRecord
                description:
                    type: string
                    description: "Describes the action being done, such as: ack, clear"
                    example: ""
                systemId:
                    type: string
                    description: Describes the system Id from which the action was done
                time:
                    type: string
                    description: Describes the time at which the action was done
                    format: date-time
                user:
                    type: string
                    description: Describes the user doing the action
                characteristic:
                    type: array
                    description: A generic list of any type of elements. Used for vendor Extensions
                        or loose element encapsulation from other namespaces
                    items:
                        $ref: '#/components/schemas/Characteristic'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: Tracking records allow the tracking of modifications on the problem.
                The tracking records should not be embedded in the problem to allow retrieving
                the problem without the tracking records
        TroubleTicketRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                name:
                    type: string
                    description: Name of the related entity.
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: "TroubleTicket reference, for when a Trouble Ticket is used by\
        \ other entities"
        EventSubscription:
            required:
                - callback
                - id
            type: object
            properties:
                id:
                    type: string
                    description: Id of the listener
                callback:
                    type: string
                    description: The callback being registered.
                query:
                    type: string
                    description: additional data to be passed
            description: Sets the communication endpoint address the service instance must
                use to deliver notification information
        EventSubscriptionInput:
            required:
                - callback
            type: object
            properties:
                callback:
                    type: string
                    description: The callback being registered.
                query:
                    type: string
                    description: additional data to be passed
            description: Sets the communication endpoint address the service instance must
                use to deliver notification information
        ServiceProblemCreateEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/ServiceProblemCreateEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        ServiceProblemCreateEventPayload:
            type: object
            properties:
                serviceProblem:
                    $ref: '#/components/schemas/ServiceProblem'
            description: The event data structure
        ServiceProblemStateChangeEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/ServiceProblemStateChangeEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        ServiceProblemStateChangeEventPayload:
            type: object
            properties:
                serviceProblem:
                    $ref: '#/components/schemas/ServiceProblem'
            description: The event data structure
        ServiceProblemAttributeValueChangeEvent:
            type: object
            properties:
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
                fieldPath:
                    type: string
                    description: The path identifying the object field concerned by this notification.
                event:
                    $ref: '#/components/schemas/ServiceProblemAttributeValueChangeEventPayload'
            description: The notification data structure
        ServiceProblemAttributeValueChangeEventPayload:
            type: object
            properties:
                serviceProblem:
                    $ref: '#/components/schemas/ServiceProblem'
            description: The event data structure
        ServiceProblemInformationRequiredEvent:
            type: object
            properties:
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
                fieldPath:
                    type: string
                    description: The path identifying the object field concerned by this notification.
                event:
                    $ref: '#/components/schemas/ServiceProblemInformationRequiredEventPayload'
            description: The notification data structure
        ServiceProblemInformationRequiredEventPayload:
            type: object
            properties:
                serviceProblem:
                    $ref: '#/components/schemas/ServiceProblem'
            description: The event data structure
        Error:
            required:
                - code
                - reason
            type: object
            properties:
                code:
                    type: string
                    description: "Application relevant detail, defined in the API or a common\
            \ list."
                reason:
                    type: string
                    description: Explanation of the reason for the error which can be shown
                        to a client user.
                message:
                    type: string
                    description: More details and corrective actions related to the error which
                        can be shown to a client user.
                status:
                    type: string
                    description: HTTP Error code extension
                referenceError:
                    type: string
                    description: URI of documentation describing the error.
                    format: uri
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class."
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class entity name."
            description: "Used when an API throws an Error, typically with a HTTP error\
        \ response-code (3xx, 4xx, 5xx)"
x-original-swagger-version: "2.0"
