openapi: 3.0.1
info:
    title: API Party
    description: "## TMF API Reference : TMF 632 - Party \n\n### Release : 19.0 \n\n\
    The party API provides standardized mechanism for party management such as creation,\
    \ update, retrieval, deletion and notification of events. Party can be an individual\
    \ or an organization that has any kind of relation with the enterprise. Party\
    \ is created to record individual or organization information before the assignment\
    \ of any role. For example, within the context of a split billing mechanism, Party\
    \ API allows creation of the individual or organization that will play the role\
    \ of 3 rd payer for a given offer and, then, allows consultation or update of\
    \ his information.\n\n### Resources\n- Organization\n- Individual\n- Hub\n\nParty\
    \ API performs the following operations :\n- Retrieve an organization or an individual\n\
    - Retrieve a collection of organizations or individuals according to given criteria\n\
    - Create a new organization or a new individual\n- Update an existing organization\
    \ or an existing individual\n- Delete an existing organization or an existing\
    \ individual\n- Notify events on organizatin or individual"
    version: 4.0.0
servers:
    -   url: https://serverRoot/tmf-api/party/v4/
tags:
    -   name: individual
    -   name: organization
    -   name: notification listeners (client side)
    -   name: events subscription
paths:
    /individual:
        get:
            tags:
                - individual
            summary: List or find Individual objects
            description: This operation list or find Individual entities
            operationId: listIndividual
            parameters:
                -   name: fields
                    in: query
                    description: Comma-separated properties to be provided in response
                    schema:
                        type: string
                -   name: offset
                    in: query
                    description: Requested index for start of resources to be provided in response
                    schema:
                        type: integer
                -   name: limit
                    in: query
                    description: Requested number of resources to be provided in response
                    schema:
                        type: integer
            responses:
                "200":
                    description: Success
                    headers:
                        X-Total-Count:
                            description: Total number of items matching criteria
                            schema:
                                type: integer
                        X-Result-Count:
                            description: Actual number of items returned in the response body
                            schema:
                                type: integer
                    content:
                        application/json;charset=utf-8:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Individual'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
        post:
            tags:
                - individual
            summary: Creates a Individual
            description: This operation creates a Individual entity.
            operationId: createIndividual
            requestBody:
                description: The Individual to be created
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/Individual_Create'
                required: true
            responses:
                "201":
                    description: Created
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Individual'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: individual
    /individual/{id}:
        get:
            tags:
                - individual
            summary: Retrieves a Individual by ID
            description: This operation retrieves a Individual entity. Attribute selection
                is enabled for all first level attributes.
            operationId: retrieveIndividual
            parameters:
                -   name: id
                    in: path
                    description: Identifier of the Individual
                    required: true
                    schema:
                        type: string
                -   name: fields
                    in: query
                    description: Comma-separated properties to provide in response
                    schema:
                        type: string
            responses:
                "200":
                    description: Success
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Individual'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
        delete:
            tags:
                - individual
            summary: Deletes a Individual
            description: This operation deletes a Individual entity.
            operationId: deleteIndividual
            parameters:
                -   name: id
                    in: path
                    description: Identifier of the Individual
                    required: true
                    schema:
                        type: string
            responses:
                "204":
                    description: Deleted
                    content: { }
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
        patch:
            tags:
                - individual
            summary: Updates partially a Individual
            description: This operation updates partially a Individual entity.
            operationId: patchIndividual
            parameters:
                -   name: id
                    in: path
                    description: Identifier of the Individual
                    required: true
                    schema:
                        type: string
            requestBody:
                description: The Individual to be updated
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/Individual_Update'
                required: true
            responses:
                "200":
                    description: Updated
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Individual'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: individual
    /organization:
        get:
            tags:
                - organization
            summary: List or find Organization objects
            description: This operation list or find Organization entities
            operationId: listOrganization
            parameters:
                -   name: fields
                    in: query
                    description: Comma-separated properties to be provided in response
                    schema:
                        type: string
                -   name: offset
                    in: query
                    description: Requested index for start of resources to be provided in response
                    schema:
                        type: integer
                -   name: limit
                    in: query
                    description: Requested number of resources to be provided in response
                    schema:
                        type: integer
            responses:
                "200":
                    description: Success
                    headers:
                        X-Total-Count:
                            description: Total number of items matching criteria
                            schema:
                                type: integer
                        X-Result-Count:
                            description: Actual number of items returned in the response body
                            schema:
                                type: integer
                    content:
                        application/json;charset=utf-8:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Organization'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
        post:
            tags:
                - organization
            summary: Creates a Organization
            description: This operation creates a Organization entity.
            operationId: createOrganization
            requestBody:
                description: The Organization to be created
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/Organization_Create'
                required: true
            responses:
                "201":
                    description: Created
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Organization'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: organization
    /organization/{id}:
        get:
            tags:
                - organization
            summary: Retrieves a Organization by ID
            description: This operation retrieves a Organization entity. Attribute selection
                is enabled for all first level attributes.
            operationId: retrieveOrganization
            parameters:
                -   name: id
                    in: path
                    description: Identifier of the Organization
                    required: true
                    schema:
                        type: string
                -   name: fields
                    in: query
                    description: Comma-separated properties to provide in response
                    schema:
                        type: string
            responses:
                "200":
                    description: Success
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Organization'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
        delete:
            tags:
                - organization
            summary: Deletes a Organization
            description: This operation deletes a Organization entity.
            operationId: deleteOrganization
            parameters:
                -   name: id
                    in: path
                    description: Identifier of the Organization
                    required: true
                    schema:
                        type: string
            responses:
                "204":
                    description: Deleted
                    content: { }
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
        patch:
            tags:
                - organization
            summary: Updates partially a Organization
            description: This operation updates partially a Organization entity.
            operationId: patchOrganization
            parameters:
                -   name: id
                    in: path
                    description: Identifier of the Organization
                    required: true
                    schema:
                        type: string
            requestBody:
                description: The Organization to be updated
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/Organization_Update'
                required: true
            responses:
                "200":
                    description: Updated
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Organization'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: organization
    /hub:
        post:
            tags:
                - events subscription
            summary: Register a listener
            description: "Sets the communication endpoint address the service instance must\
        \ use to deliver information about its health state, execution state, failures\
        \ and metrics."
            operationId: registerListener
            requestBody:
                description: Data containing the callback endpoint to deliver the information
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/EventSubscriptionInput'
                required: true
            responses:
                "201":
                    description: Subscribed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /hub/{id}:
        delete:
            tags:
                - events subscription
            summary: Unregister a listener
            description: "Resets the communication endpoint address the service instance\
        \ must use to deliver information about its health state, execution state,\
        \ failures and metrics."
            operationId: unregisterListener
            parameters:
                -   name: id
                    in: path
                    description: The id of the registered listener
                    required: true
                    schema:
                        type: string
            responses:
                "204":
                    description: Deleted
                    content: { }
                "400":
                    description: Bad request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
    /listener/individualCreateEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity IndividualCreateEvent
            description: Example of a client listener for receiving the notification IndividualCreateEvent
            operationId: listenToIndividualCreateEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/IndividualCreateEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/individualAttributeValueChangeEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity IndividualAttributeValueChangeEvent
            description: Example of a client listener for receiving the notification IndividualAttributeValueChangeEvent
            operationId: listenToIndividualAttributeValueChangeEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/IndividualAttributeValueChangeEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/individualStateChangeEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity IndividualStateChangeEvent
            description: Example of a client listener for receiving the notification IndividualStateChangeEvent
            operationId: listenToIndividualStateChangeEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/IndividualStateChangeEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/individualDeleteEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity IndividualDeleteEvent
            description: Example of a client listener for receiving the notification IndividualDeleteEvent
            operationId: listenToIndividualDeleteEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/IndividualDeleteEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/organizationCreateEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity OrganizationCreateEvent
            description: Example of a client listener for receiving the notification OrganizationCreateEvent
            operationId: listenToOrganizationCreateEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/OrganizationCreateEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/organizationAttributeValueChangeEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity OrganizationAttributeValueChangeEvent
            description: Example of a client listener for receiving the notification OrganizationAttributeValueChangeEvent
            operationId: listenToOrganizationAttributeValueChangeEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/OrganizationAttributeValueChangeEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/organizationStateChangeEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity OrganizationStateChangeEvent
            description: Example of a client listener for receiving the notification OrganizationStateChangeEvent
            operationId: listenToOrganizationStateChangeEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/OrganizationStateChangeEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/organizationDeleteEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity OrganizationDeleteEvent
            description: Example of a client listener for receiving the notification OrganizationDeleteEvent
            operationId: listenToOrganizationDeleteEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/OrganizationDeleteEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
components:
    schemas:
        Addressable:
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
            description: Base schema for adressable entities
        Any:
            type: object
        Attachment:
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier for this particular attachment
                    example: 4aafacbd-11ff-4dc8-b445-305f2215715f
                href:
                    type: string
                    description: URI for this Attachment
                    format: uri
                    example: http://host/Attachment/4aafacbd-11ff-4dc8-b445-305f2215715f
                attachmentType:
                    type: string
                    description: "Attachment type such as video, picture"
                    example: video
                content:
                    type: string
                    description: "The actual contents of the attachment object, if embedded,\
            \ encoded as base64"
                    format: base64
                description:
                    type: string
                    description: A narrative text describing the content of the attachment
                    example: Photograph of the Product
                mimeType:
                    type: string
                    description: "Attachment mime type such as extension file for video, picture\
            \ and document"
                name:
                    type: string
                    description: The name of the attachment
                url:
                    type: string
                    description: "Uniform Resource Locator, is a web page address (a subset\
            \ of URI)"
                    format: uri
                    example: http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f
                size:
                    $ref: '#/components/schemas/Quantity'
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: "Complements the description of an element (for instance a product)\
        \ through video, pictures..."
        AttachmentRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: Unique-Identifier for this attachment
                href:
                    type: string
                    description: URL serving as reference for the attachment resource
                    format: uri
                description:
                    type: string
                    description: A narrative text describing the content of the attachment
                name:
                    type: string
                    description: Name of the related entity.
                url:
                    type: string
                    description: Link to the attachment media/content
                    format: uri
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: "Attachment reference. An attachment complements the description\
        \ of an element (for instance a product) through video, pictures"
        AttachmentRefOrValue:
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier for this particular attachment
                    example: 4aafacbd-11ff-4dc8-b445-305f2215715f
                href:
                    type: string
                    description: URI for this Attachment
                    format: uri
                    example: http://host/Attachment/4aafacbd-11ff-4dc8-b445-305f2215715f
                attachmentType:
                    type: string
                    description: "Attachment type such as video, picture"
                    example: video
                content:
                    type: string
                    description: "The actual contents of the attachment object, if embedded,\
            \ encoded as base64"
                    format: base64
                description:
                    type: string
                    description: A narrative text describing the content of the attachment
                    example: Photograph of the Product
                mimeType:
                    type: string
                    description: "Attachment mime type such as extension file for video, picture\
            \ and document"
                name:
                    type: string
                    description: The name of the attachment
                url:
                    type: string
                    description: "Uniform Resource Locator, is a web page address (a subset\
            \ of URI)"
                    format: uri
                    example: http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f
                size:
                    $ref: '#/components/schemas/Quantity'
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: "An attachment by value or by reference. An attachment complements\
        \ the description of an element, for example through a document, a video,\
        \ a picture."
        Characteristic:
            required:
                - name
                - value
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier of the characteristic
                name:
                    type: string
                    description: Name of the characteristic
                valueType:
                    type: string
                    description: Data type of the value of the characteristic
                characteristicRelationship:
                    type: array
                    items:
                        $ref: '#/components/schemas/CharacteristicRelationship'
                value:
                    $ref: '#/components/schemas/Any'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: Describes a given characteristic of an object or entity through
                a name/value pair.
        CharacteristicRelationship:
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier of the characteristic
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                relationshipType:
                    type: string
                    description: The type of relationship
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: Another Characteristic that is related to the current Characteristic;
        ContactMedium:
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                mediumType:
                    type: string
                    description: "Type of the contact medium, such as: email address, telephone\
            \ number, postal address"
                preferred:
                    type: boolean
                    description: "If true, indicates that is the preferred contact medium"
                characteristic:
                    $ref: '#/components/schemas/MediumCharacteristic'
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: Indicates the contact medium that could be used to contact the
                party.
        Disability:
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                disabilityCode:
                    type: string
                    description: Code of the disability
                disabilityName:
                    type: string
                    description: Name of the disability
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: Lack or inadequate strength or ability.
        Entity:
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: Base entity schema for use in TMForum Open-APIs
        EntityRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                name:
                    type: string
                    description: Name of the related entity.
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: Entity reference schema to be use for all entityRef class.
        Extensible:
            type: object
            properties:
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: Base Extensible schema for use in TMForum Open-APIs
        ExternalReference:
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                externalReferenceType:
                    type: string
                    description: Type of the external reference
                name:
                    type: string
                    description: External reference name
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: External reference of the individual or reference in other system
        Individual:
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                aristocraticTitle:
                    type: string
                    description: "e.g. Baron, Graf, Earl,…"
                birthDate:
                    type: string
                    description: Birth date
                    format: date-time
                countryOfBirth:
                    type: string
                    description: Country where the individual was born
                deathDate:
                    type: string
                    description: Date of death
                    format: date-time
                familyName:
                    type: string
                    description: Contains the non-chosen or inherited name. Also known as last
                        name in the Western context
                familyNamePrefix:
                    type: string
                    description: Family name prefix
                formattedName:
                    type: string
                    description: "A fully formatted name in one string with all of its pieces\
            \ in their proper place and all of the necessary punctuation. Useful for\
            \ specific contexts (Chinese, Japanese, Korean,…)"
                fullName:
                    type: string
                    description: "Full name flatten (first, middle, and last names)"
                gender:
                    type: string
                    description: Gender
                generation:
                    type: string
                    description: "e.g.. Sr, Jr, III (the third),…"
                givenName:
                    type: string
                    description: First name of the individual
                legalName:
                    type: string
                    description: Legal name or birth name (name one has for official purposes)
                location:
                    type: string
                    description: Temporary current location od the individual (may be used if
                        the individual has approved its sharing)
                maritalStatus:
                    type: string
                    description: "Marital status (married, divorced, widow ...)"
                middleName:
                    type: string
                    description: Middles name or initial
                nationality:
                    type: string
                    description: Nationality
                placeOfBirth:
                    type: string
                    description: Reference to the place where the individual was born
                preferredGivenName:
                    type: string
                    description: "Contains the chosen name by which the individual prefers to\
            \ be addressed. Note: This name may be a name other than a given name,\
            \ such as a nickname"
                title:
                    type: string
                    description: "Useful for titles (aristocratic, social,...) Pr, Dr, Sir,\
            \ ..."
                contactMedium:
                    type: array
                    items:
                        $ref: '#/components/schemas/ContactMedium'
                creditRating:
                    type: array
                    items:
                        $ref: '#/components/schemas/PartyCreditProfile'
                disability:
                    type: array
                    items:
                        $ref: '#/components/schemas/Disability'
                externalReference:
                    type: array
                    items:
                        $ref: '#/components/schemas/ExternalReference'
                individualIdentification:
                    type: array
                    items:
                        $ref: '#/components/schemas/IndividualIdentification'
                languageAbility:
                    type: array
                    items:
                        $ref: '#/components/schemas/LanguageAbility'
                otherName:
                    type: array
                    items:
                        $ref: '#/components/schemas/OtherNameIndividual'
                partyCharacteristic:
                    type: array
                    items:
                        $ref: '#/components/schemas/Characteristic'
                relatedParty:
                    type: array
                    items:
                        $ref: '#/components/schemas/RelatedParty'
                skill:
                    type: array
                    items:
                        $ref: '#/components/schemas/Skill'
                status:
                    $ref: '#/components/schemas/IndividualStateType'
                taxExemptionCertificate:
                    type: array
                    items:
                        $ref: '#/components/schemas/TaxExemptionCertificate'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: "Individual represents a single human being (a man, woman or child).\
        \ The individual can be a customer, an employee or any other person that the\
        \ organization needs to store information about."
        Individual_Create:
            required:
                - familyName
                - givenName
            type: object
            properties:
                aristocraticTitle:
                    type: string
                    description: "e.g. Baron, Graf, Earl,…"
                birthDate:
                    type: string
                    description: Birth date
                    format: date-time
                countryOfBirth:
                    type: string
                    description: Country where the individual was born
                deathDate:
                    type: string
                    description: Date of death
                    format: date-time
                familyName:
                    type: string
                    description: Contains the non-chosen or inherited name. Also known as last
                        name in the Western context
                familyNamePrefix:
                    type: string
                    description: Family name prefix
                formattedName:
                    type: string
                    description: "A fully formatted name in one string with all of its pieces\
            \ in their proper place and all of the necessary punctuation. Useful for\
            \ specific contexts (Chinese, Japanese, Korean,…)"
                fullName:
                    type: string
                    description: "Full name flatten (first, middle, and last names)"
                gender:
                    type: string
                    description: Gender
                generation:
                    type: string
                    description: "e.g.. Sr, Jr, III (the third),…"
                givenName:
                    type: string
                    description: First name of the individual
                legalName:
                    type: string
                    description: Legal name or birth name (name one has for official purposes)
                location:
                    type: string
                    description: Temporary current location od the individual (may be used if
                        the individual has approved its sharing)
                maritalStatus:
                    type: string
                    description: "Marital status (married, divorced, widow ...)"
                middleName:
                    type: string
                    description: Middles name or initial
                nationality:
                    type: string
                    description: Nationality
                placeOfBirth:
                    type: string
                    description: Reference to the place where the individual was born
                preferredGivenName:
                    type: string
                    description: "Contains the chosen name by which the individual prefers to\
            \ be addressed. Note: This name may be a name other than a given name,\
            \ such as a nickname"
                title:
                    type: string
                    description: "Useful for titles (aristocratic, social,...) Pr, Dr, Sir,\
            \ ..."
                contactMedium:
                    type: array
                    items:
                        $ref: '#/components/schemas/ContactMedium'
                creditRating:
                    type: array
                    items:
                        $ref: '#/components/schemas/PartyCreditProfile'
                disability:
                    type: array
                    items:
                        $ref: '#/components/schemas/Disability'
                externalReference:
                    type: array
                    items:
                        $ref: '#/components/schemas/ExternalReference'
                individualIdentification:
                    type: array
                    items:
                        $ref: '#/components/schemas/IndividualIdentification'
                languageAbility:
                    type: array
                    items:
                        $ref: '#/components/schemas/LanguageAbility'
                otherName:
                    type: array
                    items:
                        $ref: '#/components/schemas/OtherNameIndividual'
                partyCharacteristic:
                    type: array
                    items:
                        $ref: '#/components/schemas/Characteristic'
                relatedParty:
                    type: array
                    items:
                        $ref: '#/components/schemas/RelatedParty'
                skill:
                    type: array
                    items:
                        $ref: '#/components/schemas/Skill'
                status:
                    $ref: '#/components/schemas/IndividualStateType'
                taxExemptionCertificate:
                    type: array
                    items:
                        $ref: '#/components/schemas/TaxExemptionCertificate'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: |-
                Individual represents a single human being (a man, woman or child). The individual can be a customer, an employee or any other person that the organization needs to store information about.
                Skipped properties: id,href
        Individual_Update:
            type: object
            properties:
                aristocraticTitle:
                    type: string
                    description: "e.g. Baron, Graf, Earl,…"
                birthDate:
                    type: string
                    description: Birth date
                    format: date-time
                countryOfBirth:
                    type: string
                    description: Country where the individual was born
                deathDate:
                    type: string
                    description: Date of death
                    format: date-time
                familyName:
                    type: string
                    description: Contains the non-chosen or inherited name. Also known as last
                        name in the Western context
                familyNamePrefix:
                    type: string
                    description: Family name prefix
                formattedName:
                    type: string
                    description: "A fully formatted name in one string with all of its pieces\
            \ in their proper place and all of the necessary punctuation. Useful for\
            \ specific contexts (Chinese, Japanese, Korean,…)"
                fullName:
                    type: string
                    description: "Full name flatten (first, middle, and last names)"
                gender:
                    type: string
                    description: Gender
                generation:
                    type: string
                    description: "e.g.. Sr, Jr, III (the third),…"
                givenName:
                    type: string
                    description: First name of the individual
                legalName:
                    type: string
                    description: Legal name or birth name (name one has for official purposes)
                location:
                    type: string
                    description: Temporary current location od the individual (may be used if
                        the individual has approved its sharing)
                maritalStatus:
                    type: string
                    description: "Marital status (married, divorced, widow ...)"
                middleName:
                    type: string
                    description: Middles name or initial
                nationality:
                    type: string
                    description: Nationality
                placeOfBirth:
                    type: string
                    description: Reference to the place where the individual was born
                preferredGivenName:
                    type: string
                    description: "Contains the chosen name by which the individual prefers to\
            \ be addressed. Note: This name may be a name other than a given name,\
            \ such as a nickname"
                title:
                    type: string
                    description: "Useful for titles (aristocratic, social,...) Pr, Dr, Sir,\
            \ ..."
                contactMedium:
                    type: array
                    items:
                        $ref: '#/components/schemas/ContactMedium'
                creditRating:
                    type: array
                    items:
                        $ref: '#/components/schemas/PartyCreditProfile'
                disability:
                    type: array
                    items:
                        $ref: '#/components/schemas/Disability'
                externalReference:
                    type: array
                    items:
                        $ref: '#/components/schemas/ExternalReference'
                individualIdentification:
                    type: array
                    items:
                        $ref: '#/components/schemas/IndividualIdentification'
                languageAbility:
                    type: array
                    items:
                        $ref: '#/components/schemas/LanguageAbility'
                otherName:
                    type: array
                    items:
                        $ref: '#/components/schemas/OtherNameIndividual'
                partyCharacteristic:
                    type: array
                    items:
                        $ref: '#/components/schemas/Characteristic'
                relatedParty:
                    type: array
                    items:
                        $ref: '#/components/schemas/RelatedParty'
                skill:
                    type: array
                    items:
                        $ref: '#/components/schemas/Skill'
                status:
                    $ref: '#/components/schemas/IndividualStateType'
                taxExemptionCertificate:
                    type: array
                    items:
                        $ref: '#/components/schemas/TaxExemptionCertificate'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: |-
                Individual represents a single human being (a man, woman or child). The individual can be a customer, an employee or any other person that the organization needs to store information about.
                Skipped properties: id,href
        IndividualIdentification:
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                identificationId:
                    type: string
                    description: Identifier
                identificationType:
                    type: string
                    description: "Identification type (passport, national identity card, drivers\
            \ license, social security number, birth certificate)"
                issuingAuthority:
                    type: string
                    description: "Authority which has issued the identifier, such as: social\
            \ security, town hall"
                issuingDate:
                    type: string
                    description: Date at which the identifier was issued
                    format: date-time
                attachment:
                    $ref: '#/components/schemas/AttachmentRefOrValue'
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: "Represents our registration of information used as proof of identity\
        \ by an individual (passport, national identity card, drivers license, social\
        \ security number, birth certificate)"
        IndividualStateType:
            type: string
            description: Valid values for the lifecycle state of the individual
            enum:
                - initialized
                - validated
                - deceased
        LanguageAbility:
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                isFavouriteLanguage:
                    type: boolean
                    description: A “true” value specifies whether the language is considered
                        by the individual as his favourite one
                languageCode:
                    type: string
                    description: Language code (RFC 5646)
                languageName:
                    type: string
                    description: Language name
                listeningProficiency:
                    type: string
                    description: Listening proficiency evaluated for this language
                readingProficiency:
                    type: string
                    description: Reading proficiency evaluated for this language
                speakingProficiency:
                    type: string
                    description: Speaking proficiency evaluated for this language
                writingProficiency:
                    type: string
                    description: Writing proficiency evaluated for this language
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: Ability of an individual to understand or converse in a language.
        MediumCharacteristic:
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                city:
                    type: string
                    description: The city
                contactType:
                    type: string
                    description: "The type of contact, for example: phone number such as mobile,\
            \ fixed home, fixed office. postal address such as shipping instalation…"
                country:
                    type: string
                    description: The country
                emailAddress:
                    type: string
                    description: Full email address in standard format
                faxNumber:
                    type: string
                    description: The fax number of the contact
                phoneNumber:
                    type: string
                    description: The primary phone number of the contact
                postCode:
                    type: string
                    description: Postcode
                socialNetworkId:
                    type: string
                    description: Identifier as a member of a social network
                stateOrProvince:
                    type: string
                    description: State or province
                street1:
                    type: string
                    description: Describes the street
                street2:
                    type: string
                    description: Complementary street description
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: Describes the contact medium characteristics that could be used
                to contact a party (an individual or an organization)
        Organization:
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                isHeadOffice:
                    type: boolean
                    description: "If value is true, the organization is the head office"
                isLegalEntity:
                    type: boolean
                    description: "If value is true, the organization is a legal entity known\
            \ by a national referential."
                name:
                    type: string
                    description: Organization name (department name for example)
                nameType:
                    type: string
                    description: "Type of the name : Co, Inc, Ltd,…"
                organizationType:
                    type: string
                    description: "Type of Organization (company, department...)"
                tradingName:
                    type: string
                    description: Name that the organization (unit) trades under
                contactMedium:
                    type: array
                    items:
                        $ref: '#/components/schemas/ContactMedium'
                creditRating:
                    type: array
                    items:
                        $ref: '#/components/schemas/PartyCreditProfile'
                existsDuring:
                    $ref: '#/components/schemas/TimePeriod'
                externalReference:
                    type: array
                    items:
                        $ref: '#/components/schemas/ExternalReference'
                organizationChildRelationship:
                    type: array
                    items:
                        $ref: '#/components/schemas/OrganizationChildRelationship'
                organizationIdentification:
                    type: array
                    items:
                        $ref: '#/components/schemas/OrganizationIdentification'
                organizationParentRelationship:
                    $ref: '#/components/schemas/OrganizationParentRelationship'
                otherName:
                    type: array
                    items:
                        $ref: '#/components/schemas/OtherNameOrganization'
                partyCharacteristic:
                    type: array
                    items:
                        $ref: '#/components/schemas/Characteristic'
                relatedParty:
                    type: array
                    items:
                        $ref: '#/components/schemas/RelatedParty'
                status:
                    $ref: '#/components/schemas/OrganizationStateType'
                taxExemptionCertificate:
                    type: array
                    items:
                        $ref: '#/components/schemas/TaxExemptionCertificate'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: "Organization represents a group of people identified by shared\
        \ interests or purpose. Examples include business, department and enterprise.\
        \ Because of the complex nature of many businesses, both organizations and\
        \ organization units are represented by the same data."
        Organization_Create:
            required:
                - tradingName
            type: object
            properties:
                isHeadOffice:
                    type: boolean
                    description: "If value is true, the organization is the head office"
                isLegalEntity:
                    type: boolean
                    description: "If value is true, the organization is a legal entity known\
            \ by a national referential."
                name:
                    type: string
                    description: Organization name (department name for example)
                nameType:
                    type: string
                    description: "Type of the name : Co, Inc, Ltd,…"
                organizationType:
                    type: string
                    description: "Type of Organization (company, department...)"
                tradingName:
                    type: string
                    description: Name that the organization (unit) trades under
                contactMedium:
                    type: array
                    items:
                        $ref: '#/components/schemas/ContactMedium'
                creditRating:
                    type: array
                    items:
                        $ref: '#/components/schemas/PartyCreditProfile'
                existsDuring:
                    $ref: '#/components/schemas/TimePeriod'
                externalReference:
                    type: array
                    items:
                        $ref: '#/components/schemas/ExternalReference'
                organizationChildRelationship:
                    type: array
                    items:
                        $ref: '#/components/schemas/OrganizationChildRelationship'
                organizationIdentification:
                    type: array
                    items:
                        $ref: '#/components/schemas/OrganizationIdentification'
                organizationParentRelationship:
                    $ref: '#/components/schemas/OrganizationParentRelationship'
                otherName:
                    type: array
                    items:
                        $ref: '#/components/schemas/OtherNameOrganization'
                partyCharacteristic:
                    type: array
                    items:
                        $ref: '#/components/schemas/Characteristic'
                relatedParty:
                    type: array
                    items:
                        $ref: '#/components/schemas/RelatedParty'
                status:
                    $ref: '#/components/schemas/OrganizationStateType'
                taxExemptionCertificate:
                    type: array
                    items:
                        $ref: '#/components/schemas/TaxExemptionCertificate'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: |-
                Organization represents a group of people identified by shared interests or purpose. Examples include business, department and enterprise. Because of the complex nature of many businesses, both organizations and organization units are represented by the same data.
                Skipped properties: id,href
        Organization_Update:
            type: object
            properties:
                isHeadOffice:
                    type: boolean
                    description: "If value is true, the organization is the head office"
                isLegalEntity:
                    type: boolean
                    description: "If value is true, the organization is a legal entity known\
            \ by a national referential."
                name:
                    type: string
                    description: Organization name (department name for example)
                nameType:
                    type: string
                    description: "Type of the name : Co, Inc, Ltd,…"
                organizationType:
                    type: string
                    description: "Type of Organization (company, department...)"
                tradingName:
                    type: string
                    description: Name that the organization (unit) trades under
                contactMedium:
                    type: array
                    items:
                        $ref: '#/components/schemas/ContactMedium'
                creditRating:
                    type: array
                    items:
                        $ref: '#/components/schemas/PartyCreditProfile'
                existsDuring:
                    $ref: '#/components/schemas/TimePeriod'
                externalReference:
                    type: array
                    items:
                        $ref: '#/components/schemas/ExternalReference'
                organizationChildRelationship:
                    type: array
                    items:
                        $ref: '#/components/schemas/OrganizationChildRelationship'
                organizationIdentification:
                    type: array
                    items:
                        $ref: '#/components/schemas/OrganizationIdentification'
                organizationParentRelationship:
                    $ref: '#/components/schemas/OrganizationParentRelationship'
                otherName:
                    type: array
                    items:
                        $ref: '#/components/schemas/OtherNameOrganization'
                partyCharacteristic:
                    type: array
                    items:
                        $ref: '#/components/schemas/Characteristic'
                relatedParty:
                    type: array
                    items:
                        $ref: '#/components/schemas/RelatedParty'
                status:
                    $ref: '#/components/schemas/OrganizationStateType'
                taxExemptionCertificate:
                    type: array
                    items:
                        $ref: '#/components/schemas/TaxExemptionCertificate'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: |-
                Organization represents a group of people identified by shared interests or purpose. Examples include business, department and enterprise. Because of the complex nature of many businesses, both organizations and organization units are represented by the same data.
                Skipped properties: id,href
        OrganizationChildRelationship:
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                relationshipType:
                    type: string
                    description: "Type of the relationship. Could be juridical, hierarchical,\
            \ geographical, functional for example."
                organization:
                    $ref: '#/components/schemas/OrganizationRef'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: Child references of an organization in a structure of organizations.
        OrganizationIdentification:
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                identificationId:
                    type: string
                    description: Identifier
                identificationType:
                    type: string
                    description: Type of identification information used to identify the company
                        in a country or internationally
                issuingAuthority:
                    type: string
                    description: Authority which has issued the identifier (chamber of commerce...)
                issuingDate:
                    type: string
                    description: Date at which the identifier was issued
                    format: date-time
                attachment:
                    $ref: '#/components/schemas/AttachmentRefOrValue'
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: Represents our registration of information used as proof of identity
                by an organization
        OrganizationParentRelationship:
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                relationshipType:
                    type: string
                    description: "Type of the relationship. Could be juridical, hierarchical,\
            \ geographical, functional for example."
                organization:
                    $ref: '#/components/schemas/OrganizationRef'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: Parent references of an organization in a structure of organizations.
        OrganizationRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                name:
                    type: string
                    description: Name of the related entity.
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
        OrganizationStateType:
            type: string
            description: Valid values for the lifecycle state of the organization
            enum:
                - initialized
                - validated
                - closed
        OtherNameIndividual:
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                aristocraticTitle:
                    type: string
                    description: "e.g. Baron, Graf, Earl,…"
                familyName:
                    type: string
                    description: Contains the non-chosen or inherited name. Also known as last
                        name in the Western context
                familyNamePrefix:
                    type: string
                    description: Family name prefix
                formattedName:
                    type: string
                    description: ". A fully formatted name in one string with all of its pieces\
            \ in their proper place and all of the necessary punctuation. Useful for\
            \ specific contexts (Chinese, Japanese, Korean,…)"
                fullName:
                    type: string
                    description: "Full name flatten (first, middle, and last names)"
                generation:
                    type: string
                    description: "e.g. Sr, Jr…"
                givenName:
                    type: string
                    description: First name
                legalName:
                    type: string
                    description: Legal name or birth name (name one has for official purposes)
                middleName:
                    type: string
                    description: Middle name or initial
                preferredGivenName:
                    type: string
                    description: "Contains the chosen name by which the person prefers to be\
            \ addressed. Note: This name may be a name other than a given name, such\
            \ as a nickname"
                title:
                    type: string
                    description: "Use for titles (aristrocatic, social, ...): Pr, Dr, Sir,...."
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: "Keeps track of other names, for example the old name of a woman\
        \ before marriage or an artist name."
        OtherNameOrganization:
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                name:
                    type: string
                    description: Organization name (department name for example)
                nameType:
                    type: string
                    description: "Co. , Inc. , Ltd. , Pty Ltd. , Plc; , Gmbh"
                tradingName:
                    type: string
                    description: The name that the organization trades under
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: "Keeps track of other names, for example the old name of an organization."
        Party:
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier of the organization
                href:
                    type: string
                    description: Hyperlink to access the organization
                contactMedium:
                    type: array
                    items:
                        $ref: '#/components/schemas/ContactMedium'
                creditRating:
                    type: array
                    items:
                        $ref: '#/components/schemas/PartyCreditProfile'
                externalReference:
                    type: array
                    items:
                        $ref: '#/components/schemas/ExternalReference'
                partyCharacteristic:
                    type: array
                    items:
                        $ref: '#/components/schemas/Characteristic'
                relatedParty:
                    type: array
                    items:
                        $ref: '#/components/schemas/RelatedParty'
                taxExemptionCertificate:
                    type: array
                    items:
                        $ref: '#/components/schemas/TaxExemptionCertificate'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: Generic Party structure used to define commonalities between sub
                concepts of Individual and Organization.
        PartyCreditProfile:
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                creditAgencyName:
                    type: string
                    description: Name of the credit agency giving the score
                creditAgencyType:
                    type: string
                    description: Type of the credit agency giving the score
                ratingReference:
                    type: string
                    description: Reference corresponding to the credit rating
                ratingScore:
                    type: integer
                    description: A measure of a party’s creditworthiness calculated on the basis
                        of a combination of factors such as their income and credit history
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: An individual might be evaluated for its worthiness and this evaluation
                might be based on a credit rating given by a credit agency.
        Quantity:
            type: object
            properties:
                amount:
                    type: number
                    description: Numeric value in a given unit
                    format: float
                    default: 1.0
                units:
                    type: string
                    description: Unit
            description: An amount in a given unit
        RelatedParty:
            required:
                - '@referredType'
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                name:
                    type: string
                    description: Name of the related entity.
                role:
                    type: string
                    description: Role played by the related party
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: Related Entity reference. A related party defines party or party
                role linked to a specific entity.
        Skill:
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                comment:
                    type: string
                    description: A free text comment linked to the evaluation done
                evaluatedLevel:
                    type: string
                    description: Level of expertise in a skill evaluated for an individual
                skillCode:
                    type: string
                    description: Code of the skill
                skillName:
                    type: string
                    description: "Name of the skill such as Java language,…"
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: "Skills evaluated for an individual with a level and possibly with\
        \ a limited validity when an obsolescence is defined (Ex: the first-aid certificate\
        \ first level is limited to one year and an update training is required each\
        \ year to keep the level)."
        TaxDefinition:
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier of the tax.
                jurisdictionLevel:
                    type: string
                    description: Level of the jurisdiction that levies the tax
                    example: Country
                jurisdictionName:
                    type: string
                    description: Name of the jurisdiction that levies the tax
                    example: USA
                name:
                    type: string
                    description: Tax name.
                taxType:
                    type: string
                    description: Type of the tax.
                    example: VAT
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: "Reference of a tax definition. A tax is levied by an authorized\
        \ tax jurisdiction. There are many different types of tax (Federal Tax levied\
        \ by the US Government, State Tax levied by the State of California,…)."
        TaxExemptionCertificate:
            type: object
            properties:
                id:
                    type: string
                    description: Identifier of the tax exemption within list of the exemptions
                certificateNumber:
                    type: string
                    description: Identifier of a document that shows proof of exemption from
                        taxes for the taxing jurisdiction
                issuingJurisdiction:
                    type: string
                    description: Name of the jurisdiction that issued the exemption
                    example: USA
                reason:
                    type: string
                    description: Reason for the tax exemption
                attachment:
                    $ref: '#/components/schemas/AttachmentRefOrValue'
                taxDefinition:
                    type: array
                    description: "A list of taxes that are covered by the exemption, e.g. City\
            \ Tax, State Tax. The definition would include the exemption (e.g. for\
            \ a rate exemption 0% would be a full exemption, 5% could be a partial\
            \ exemption if the actual rate was 10%)."
                    items:
                        $ref: '#/components/schemas/TaxDefinition'
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: "A tax exemption certificate represents a tax exemption granted\
        \ to a party (individual or organization) by a tax jurisdiction which may\
        \ be a city, state, country,... An exemption has a certificate identifier\
        \ (received from the jurisdiction that levied the tax) and a validity period.\
        \ An exemption is per tax types and determines for each type of tax what portion\
        \ of the tax is exempted (partial by percentage or complete) via the tax definition."
        TimePeriod:
            type: object
            properties:
                endDateTime:
                    type: string
                    description: "End of the time period, using IETC-RFC-3339 format"
                    format: date-time
                    example: 1985-04-12T23:20:50.52Z
                startDateTime:
                    type: string
                    description: "Start of the time period, using IETC-RFC-3339 format"
                    format: date-time
                    example: 1985-04-12T23:20:50.52Z
            description: "A period of time, either as a deadline (endDateTime only) a startDateTime\
        \ only, or both"
        EventSubscription:
            required:
                - callback
                - id
            type: object
            properties:
                id:
                    type: string
                    description: Id of the listener
                callback:
                    type: string
                    description: The callback being registered.
                query:
                    type: string
                    description: additional data to be passed
            description: Sets the communication endpoint address the service instance must
                use to deliver notification information
        EventSubscriptionInput:
            required:
                - callback
            type: object
            properties:
                callback:
                    type: string
                    description: The callback being registered.
                query:
                    type: string
                    description: additional data to be passed
            description: Sets the communication endpoint address the service instance must
                use to deliver notification information
        IndividualCreateEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/IndividualCreateEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        IndividualCreateEventPayload:
            type: object
            properties:
                individual:
                    $ref: '#/components/schemas/Individual'
            description: The event data structure
        IndividualAttributeValueChangeEvent:
            type: object
            properties:
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
                fieldPath:
                    type: string
                    description: The path identifying the object field concerned by this notification.
                event:
                    $ref: '#/components/schemas/IndividualAttributeValueChangeEventPayload'
            description: The notification data structure
        IndividualAttributeValueChangeEventPayload:
            type: object
            properties:
                individual:
                    $ref: '#/components/schemas/Individual'
            description: The event data structure
        IndividualStateChangeEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/IndividualStateChangeEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        IndividualStateChangeEventPayload:
            type: object
            properties:
                individual:
                    $ref: '#/components/schemas/Individual'
            description: The event data structure
        IndividualDeleteEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/IndividualDeleteEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        IndividualDeleteEventPayload:
            type: object
            properties:
                individual:
                    $ref: '#/components/schemas/Individual'
            description: The event data structure
        OrganizationCreateEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/OrganizationCreateEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        OrganizationCreateEventPayload:
            type: object
            properties:
                organization:
                    $ref: '#/components/schemas/Organization'
            description: The event data structure
        OrganizationAttributeValueChangeEvent:
            type: object
            properties:
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
                fieldPath:
                    type: string
                    description: The path identifying the object field concerned by this notification.
                event:
                    $ref: '#/components/schemas/OrganizationAttributeValueChangeEventPayload'
            description: The notification data structure
        OrganizationAttributeValueChangeEventPayload:
            type: object
            properties:
                organization:
                    $ref: '#/components/schemas/Organization'
            description: The event data structure
        OrganizationStateChangeEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/OrganizationStateChangeEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        OrganizationStateChangeEventPayload:
            type: object
            properties:
                organization:
                    $ref: '#/components/schemas/Organization'
            description: The event data structure
        OrganizationDeleteEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/OrganizationDeleteEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        OrganizationDeleteEventPayload:
            type: object
            properties:
                organization:
                    $ref: '#/components/schemas/Organization'
            description: The event data structure
        Error:
            required:
                - code
                - reason
            type: object
            properties:
                code:
                    type: string
                    description: "Application relevant detail, defined in the API or a common\
            \ list."
                reason:
                    type: string
                    description: Explanation of the reason for the error which can be shown
                        to a client user.
                message:
                    type: string
                    description: More details and corrective actions related to the error which
                        can be shown to a client user.
                status:
                    type: string
                    description: HTTP Error code extension
                referenceError:
                    type: string
                    description: URI of documentation describing the error.
                    format: uri
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class."
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class entity name."
            description: "Used when an API throws an Error, typically with a HTTP error\
        \ response-code (3xx, 4xx, 5xx)"
x-original-swagger-version: "2.0"
