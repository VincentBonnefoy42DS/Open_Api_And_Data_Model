openapi: 3.0.1
info:
    title: Payment
    description: |-
        ## TMF API Reference : TMF 676 - Payment
        
        This API provides the standardized client interface to Payment Systems for managing performed payments or refunds. Examples of Payment API originators (clients) include Web servers, mobile app servers, Contact center dashboards or retail store systems.
    version: 4.0.0
servers:
    -   url: https://serverRootserverRoot/paymentManagement/v4/
tags:
    -   name: payment
    -   name: authorizePayment
    -   name: initiatePayment
    -   name: refund
    -   name: notification listeners (client side)
    -   name: events subscription
paths:
    /payment:
        get:
            tags:
                - payment
            summary: List or find Payment objects
            description: This operation list or find Payment entities
            operationId: listPayment
            parameters:
                -   name: fields
                    in: query
                    description: Comma-separated properties to be provided in response
                    schema:
                        type: string
                -   name: offset
                    in: query
                    description: Requested index for start of resources to be provided in response
                    schema:
                        type: integer
                -   name: limit
                    in: query
                    description: Requested number of resources to be provided in response
                    schema:
                        type: integer
            responses:
                "200":
                    description: Success
                    headers:
                        X-Total-Count:
                            description: Total number of items matching criteria
                            schema:
                                type: integer
                        X-Result-Count:
                            description: Actual number of items returned in the response body
                            schema:
                                type: integer
                    content:
                        application/json;charset=utf-8:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Payment'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
        post:
            tags:
                - payment
            summary: Creates a Payment
            description: This operation creates a Payment entity.
            operationId: createPayment
            requestBody:
                description: The Payment to be created
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/Payment_Create'
                required: true
            responses:
                "201":
                    description: Created
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Payment'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: payment
    /payment/{id}:
        get:
            tags:
                - payment
            summary: Retrieves a Payment by ID
            description: This operation retrieves a Payment entity. Attribute selection
                is enabled for all first level attributes.
            operationId: retrievePayment
            parameters:
                -   name: id
                    in: path
                    description: Identifier of the Payment
                    required: true
                    schema:
                        type: string
                -   name: fields
                    in: query
                    description: Comma-separated properties to provide in response
                    schema:
                        type: string
            responses:
                "200":
                    description: Success
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Payment'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
    /authorizePayment:
        get:
            tags:
                - authorizePayment
            summary: List or find AuthorizePayment objects
            description: This operation list or find AuthorizePayment entities
            operationId: listAuthorizePayment
            parameters:
                -   name: fields
                    in: query
                    description: Comma-separated properties to be provided in response
                    schema:
                        type: string
                -   name: offset
                    in: query
                    description: Requested index for start of resources to be provided in response
                    schema:
                        type: integer
                -   name: limit
                    in: query
                    description: Requested number of resources to be provided in response
                    schema:
                        type: integer
            responses:
                "200":
                    description: Success
                    headers:
                        X-Total-Count:
                            description: Total number of items matching criteria
                            schema:
                                type: integer
                        X-Result-Count:
                            description: Actual number of items returned in the response body
                            schema:
                                type: integer
                    content:
                        application/json;charset=utf-8:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/AuthorizePayment'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
        post:
            tags:
                - authorizePayment
            summary: Creates a AuthorizePayment
            description: This operation creates a AuthorizePayment entity.
            operationId: createAuthorizePayment
            requestBody:
                description: The AuthorizePayment to be created
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/AuthorizePayment_Create'
                required: true
            responses:
                "201":
                    description: Created
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/AuthorizePayment'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: authorizePayment
    /authorizePayment/{id}:
        get:
            tags:
                - authorizePayment
            summary: Retrieves a AuthorizePayment by ID
            description: This operation retrieves a AuthorizePayment entity. Attribute selection
                is enabled for all first level attributes.
            operationId: retrieveAuthorizePayment
            parameters:
                -   name: id
                    in: path
                    description: Identifier of the AuthorizePayment
                    required: true
                    schema:
                        type: string
                -   name: fields
                    in: query
                    description: Comma-separated properties to provide in response
                    schema:
                        type: string
            responses:
                "200":
                    description: Success
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/AuthorizePayment'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
    /initiatePayment:
        get:
            tags:
                - initiatePayment
            summary: List or find InitiatePayment objects
            description: This operation list or find InitiatePayment entities
            operationId: listInitiatePayment
            parameters:
                -   name: fields
                    in: query
                    description: Comma-separated properties to be provided in response
                    schema:
                        type: string
                -   name: offset
                    in: query
                    description: Requested index for start of resources to be provided in response
                    schema:
                        type: integer
                -   name: limit
                    in: query
                    description: Requested number of resources to be provided in response
                    schema:
                        type: integer
            responses:
                "200":
                    description: Success
                    headers:
                        X-Total-Count:
                            description: Total number of items matching criteria
                            schema:
                                type: integer
                        X-Result-Count:
                            description: Actual number of items returned in the response body
                            schema:
                                type: integer
                    content:
                        application/json;charset=utf-8:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/InitiatePayment'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
        post:
            tags:
                - initiatePayment
            summary: Creates a InitiatePayment
            description: This operation creates a InitiatePayment entity.
            operationId: createInitiatePayment
            requestBody:
                description: The InitiatePayment to be created
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/InitiatePayment_Create'
                required: true
            responses:
                "201":
                    description: Created
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/InitiatePayment'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: initiatePayment
    /initiatePayment/{id}:
        get:
            tags:
                - initiatePayment
            summary: Retrieves a InitiatePayment by ID
            description: This operation retrieves a InitiatePayment entity. Attribute selection
                is enabled for all first level attributes.
            operationId: retrieveInitiatePayment
            parameters:
                -   name: id
                    in: path
                    description: Identifier of the InitiatePayment
                    required: true
                    schema:
                        type: string
                -   name: fields
                    in: query
                    description: Comma-separated properties to provide in response
                    schema:
                        type: string
            responses:
                "200":
                    description: Success
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/InitiatePayment'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
    /refund:
        get:
            tags:
                - refund
            summary: List or find Refund objects
            description: This operation list or find Refund entities
            operationId: listRefund
            parameters:
                -   name: fields
                    in: query
                    description: Comma-separated properties to be provided in response
                    schema:
                        type: string
                -   name: offset
                    in: query
                    description: Requested index for start of resources to be provided in response
                    schema:
                        type: integer
                -   name: limit
                    in: query
                    description: Requested number of resources to be provided in response
                    schema:
                        type: integer
            responses:
                "200":
                    description: Success
                    headers:
                        X-Total-Count:
                            description: Total number of items matching criteria
                            schema:
                                type: integer
                        X-Result-Count:
                            description: Actual number of items returned in the response body
                            schema:
                                type: integer
                    content:
                        application/json;charset=utf-8:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Refund'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
        post:
            tags:
                - refund
            summary: Creates a Refund
            description: This operation creates a Refund entity.
            operationId: createRefund
            requestBody:
                description: The Refund to be created
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/Refund_Create'
                required: true
            responses:
                "201":
                    description: Created
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Refund'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: refund
    /refund/{id}:
        get:
            tags:
                - refund
            summary: Retrieves a Refund by ID
            description: This operation retrieves a Refund entity. Attribute selection is
                enabled for all first level attributes.
            operationId: retrieveRefund
            parameters:
                -   name: id
                    in: path
                    description: Identifier of the Refund
                    required: true
                    schema:
                        type: string
                -   name: fields
                    in: query
                    description: Comma-separated properties to provide in response
                    schema:
                        type: string
            responses:
                "200":
                    description: Success
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Refund'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
    /hub:
        post:
            tags:
                - events subscription
            summary: Register a listener
            description: "Sets the communication endpoint address the service instance must\
        \ use to deliver information about its health state, execution state, failures\
        \ and metrics."
            operationId: registerListener
            requestBody:
                description: Data containing the callback endpoint to deliver the information
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/EventSubscriptionInput'
                required: true
            responses:
                "201":
                    description: Subscribed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /hub/{id}:
        delete:
            tags:
                - events subscription
            summary: Unregister a listener
            description: "Resets the communication endpoint address the service instance\
        \ must use to deliver information about its health state, execution state,\
        \ failures and metrics."
            operationId: unregisterListener
            parameters:
                -   name: id
                    in: path
                    description: The id of the registered listener
                    required: true
                    schema:
                        type: string
            responses:
                "204":
                    description: Deleted
                    content: { }
                "400":
                    description: Bad request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
    /listener/paymentCreateEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity PaymentCreateEvent
            description: Example of a client listener for receiving the notification PaymentCreateEvent
            operationId: listenToPaymentCreateEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/PaymentCreateEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/paymentAttributeValueChangeEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity PaymentAttributeValueChangeEvent
            description: Example of a client listener for receiving the notification PaymentAttributeValueChangeEvent
            operationId: listenToPaymentAttributeValueChangeEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/PaymentAttributeValueChangeEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/paymentStateChangeEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity PaymentStateChangeEvent
            description: Example of a client listener for receiving the notification PaymentStateChangeEvent
            operationId: listenToPaymentStateChangeEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/PaymentStateChangeEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/paymentDeleteEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity PaymentDeleteEvent
            description: Example of a client listener for receiving the notification PaymentDeleteEvent
            operationId: listenToPaymentDeleteEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/PaymentDeleteEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/authorizePaymentCreateEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity AuthorizePaymentCreateEvent
            description: Example of a client listener for receiving the notification AuthorizePaymentCreateEvent
            operationId: listenToAuthorizePaymentCreateEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/AuthorizePaymentCreateEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/authorizePaymentAttributeValueChangeEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity AuthorizePaymentAttributeValueChangeEvent
            description: Example of a client listener for receiving the notification AuthorizePaymentAttributeValueChangeEvent
            operationId: listenToAuthorizePaymentAttributeValueChangeEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/AuthorizePaymentAttributeValueChangeEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/authorizePaymentStateChangeEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity AuthorizePaymentStateChangeEvent
            description: Example of a client listener for receiving the notification AuthorizePaymentStateChangeEvent
            operationId: listenToAuthorizePaymentStateChangeEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/AuthorizePaymentStateChangeEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/authorizePaymentDeleteEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity AuthorizePaymentDeleteEvent
            description: Example of a client listener for receiving the notification AuthorizePaymentDeleteEvent
            operationId: listenToAuthorizePaymentDeleteEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/AuthorizePaymentDeleteEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/initiatePaymentCreateEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity InitiatePaymentCreateEvent
            description: Example of a client listener for receiving the notification InitiatePaymentCreateEvent
            operationId: listenToInitiatePaymentCreateEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/InitiatePaymentCreateEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/initiatePaymentAttributeValueChangeEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity InitiatePaymentAttributeValueChangeEvent
            description: Example of a client listener for receiving the notification InitiatePaymentAttributeValueChangeEvent
            operationId: listenToInitiatePaymentAttributeValueChangeEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/InitiatePaymentAttributeValueChangeEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/initiatePaymentStateChangeEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity InitiatePaymentStateChangeEvent
            description: Example of a client listener for receiving the notification InitiatePaymentStateChangeEvent
            operationId: listenToInitiatePaymentStateChangeEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/InitiatePaymentStateChangeEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/initiatePaymentDeleteEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity InitiatePaymentDeleteEvent
            description: Example of a client listener for receiving the notification InitiatePaymentDeleteEvent
            operationId: listenToInitiatePaymentDeleteEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/InitiatePaymentDeleteEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/refundCreateEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity RefundCreateEvent
            description: Example of a client listener for receiving the notification RefundCreateEvent
            operationId: listenToRefundCreateEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/RefundCreateEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/refundAttributeValueChangeEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity RefundAttributeValueChangeEvent
            description: Example of a client listener for receiving the notification RefundAttributeValueChangeEvent
            operationId: listenToRefundAttributeValueChangeEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/RefundAttributeValueChangeEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/refundStateChangeEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity RefundStateChangeEvent
            description: Example of a client listener for receiving the notification RefundStateChangeEvent
            operationId: listenToRefundStateChangeEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/RefundStateChangeEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/refundDeleteEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity RefundDeleteEvent
            description: Example of a client listener for receiving the notification RefundDeleteEvent
            operationId: listenToRefundDeleteEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/RefundDeleteEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
components:
    schemas:
        AccountRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier of the account
                href:
                    type: string
                    description: Reference of the account
                description:
                    type: string
                    description: Detailed description of the account
                name:
                    type: string
                    description: Name of the account
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: Account reference. A account may be a party account or a financial
                account.
        Addressable:
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
            description: Base schema for adressable entities
        AuthorizePayment:
            type: object
            properties:
                id:
                    type: string
                    description: The identifier of the task
                href:
                    type: string
                    description: A reference to the task
                'authorizePaymentDate ':
                    type: string
                    description: date of the operation authorize payment
                    format: date-time
                'authorizedPaymentDate ':
                    type: string
                    description: date when the operation was authorized
                    format: date-time
                state:
                    type: string
                    description: Current state of the operation task
                'authorizedPayment ':
                    $ref: '#/components/schemas/PaymentRefOrValue'
            description: Task resource for operation authorize payment
        AuthorizePayment_Create:
            type: object
            properties:
                'authorizePaymentDate ':
                    type: string
                    description: date of the operation authorize payment
                    format: date-time
                'authorizedPaymentDate ':
                    type: string
                    description: date when the operation was authorized
                    format: date-time
                'authorizedPayment ':
                    $ref: '#/components/schemas/PaymentRefOrValue'
            description: |-
                Task resource for operation authorize payment
                Skipped properties: id,href,state,authorizePaymentDate,authorizedPaymentDate
        AuthorizePaymentRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                name:
                    type: string
                    description: A name for the payment authorization
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: "Operation to payment authorization, prior to payment capture."
        ChannelRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                name:
                    type: string
                    description: Name of the channel.
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: "The channel to which the resource reference to. e.g. channel for\
        \ selling product offerings, channel for opening a trouble ticket etc.."
        Entity:
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: Base entity schema for use in TMForum Open-APIs
        EntityRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                name:
                    type: string
                    description: Name of the related entity.
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: Entity reference schema to be use for all entityRef class.
        Extensible:
            type: object
            properties:
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: Base Extensible schema for use in TMForum Open-APIs
        InitiatePayment:
            type: object
            properties:
                id:
                    type: string
                    description: The identifier of the task
                href:
                    type: string
                    description: A reference to the task
                'InitiatePaymentDate ':
                    type: string
                    description: date of the operation initiate payment
                    format: date-time
                'InitiatedPaymentDate ':
                    type: string
                    description: date when the operation was initiated
                    format: date-time
                state:
                    type: string
                    description: Current state of the operation task
                'authorizedPayment ':
                    $ref: '#/components/schemas/AuthorizePaymentRef'
                'initiatedPayment ':
                    $ref: '#/components/schemas/PaymentRefOrValue'
            description: Task resource for operation initiate payment
        InitiatePayment_Create:
            type: object
            properties:
                'InitiatePaymentDate ':
                    type: string
                    description: date of the operation initiate payment
                    format: date-time
                'InitiatedPaymentDate ':
                    type: string
                    description: date when the operation was initiated
                    format: date-time
                'authorizedPayment ':
                    $ref: '#/components/schemas/AuthorizePaymentRef'
                'initiatedPayment ':
                    $ref: '#/components/schemas/PaymentRefOrValue'
            description: |-
                Task resource for operation initiate payment
                Skipped properties: id,href,state,initiatePaymentDate,initiatedPaymentDate
        Money:
            type: object
            properties:
                unit:
                    type: string
                    description: Currency (ISO4217 norm uses 3 letters to define the currency)
                value:
                    type: number
                    description: A positive floating point number
                    format: float
            description: A base / value business entity used to represent money
        Payment:
            required:
                - account
                - paymentMethod
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier of Payment
                href:
                    type: string
                    description: Hypertext Reference of the Payment
                authorizationCode:
                    type: string
                    description: Authorization code retrieved from an external payment gateway
                        that could be used for conciliation
                correlatorId:
                    type: string
                    description: Unique identifier in the client for the payment in case it
                        is needed to correlate
                description:
                    type: string
                    description: Text describing the contents of the payment
                name:
                    type: string
                    description: Screen name of the payment
                paymentDate:
                    type: string
                    description: Date when the payment was performed
                    format: date-time
                status:
                    type: string
                    description: Status of the payment
                statusDate:
                    type: string
                    description: Date when the status was recorded
                    format: date-time
                account:
                    $ref: '#/components/schemas/AccountRef'
                amount:
                    $ref: '#/components/schemas/Money'
                channel:
                    $ref: '#/components/schemas/ChannelRef'
                paymentItem:
                    type: array
                    items:
                        $ref: '#/components/schemas/PaymentItem'
                paymentMethod:
                    $ref: '#/components/schemas/PaymentMethodRefOrValue'
                pointOfInteraction:
                    $ref: '#/components/schemas/PointOfInteraction'
                relatedParty:
                    type: array
                    items:
                        $ref: '#/components/schemas/RelatedParty'
                taxAmount:
                    $ref: '#/components/schemas/Money'
                totalAmount:
                    $ref: '#/components/schemas/Money'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: The Payment resource represents a performed payment. It contains
                both information about the payment and the payment method used to perform
                it.
        Payment_Create:
            required:
                - account
                - paymentMethod
                - totalAmount
            type: object
            properties:
                authorizationCode:
                    type: string
                    description: Authorization code retrieved from an external payment gateway
                        that could be used for conciliation
                correlatorId:
                    type: string
                    description: Unique identifier in the client for the payment in case it
                        is needed to correlate
                description:
                    type: string
                    description: Text describing the contents of the payment
                name:
                    type: string
                    description: Screen name of the payment
                account:
                    $ref: '#/components/schemas/AccountRef'
                amount:
                    $ref: '#/components/schemas/Money'
                channel:
                    $ref: '#/components/schemas/ChannelRef'
                paymentItem:
                    type: array
                    items:
                        $ref: '#/components/schemas/PaymentItem'
                paymentMethod:
                    $ref: '#/components/schemas/PaymentMethodRefOrValue'
                pointOfInteraction:
                    $ref: '#/components/schemas/PointOfInteraction'
                relatedParty:
                    type: array
                    items:
                        $ref: '#/components/schemas/RelatedParty'
                taxAmount:
                    $ref: '#/components/schemas/Money'
                totalAmount:
                    $ref: '#/components/schemas/Money'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: |-
                The Payment resource represents a performed payment. It contains both information about the payment and the payment method used to perform it.
                Skipped properties: id,href,status,statusDate,paymentDate
        PaymentItem:
            required:
                - item
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier of the payment Item
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                amount:
                    $ref: '#/components/schemas/Money'
                item:
                    $ref: '#/components/schemas/EntityRef'
                taxAmount:
                    $ref: '#/components/schemas/Money'
                totalAmount:
                    $ref: '#/components/schemas/Money'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: The paymentItem is the result of lettering process. It enables
                to assign automatically or manually part of incoming payment amount to a bill
        PaymentMethod:
            required:
                - '@type'
                - name
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                authorizationCode:
                    type: string
                    description: "Review: Authorization code provided by a financial institution.\
            \ Typically this would be populated for recurring payments using the method,\
            \ as payments have an authorization code of their own."
                    example: "1234567890"
                description:
                    type: string
                    description: Text description of the contents of the payment method
                    example: My gold mastercard.
                isPreferred:
                    type: boolean
                    description: If the method is the preferred one by the owner. Typically
                        used when querying for the payment methods of a specific customer or account
                    example: true
                name:
                    type: string
                    description: Friendly name assigned to the payment method
                    example: Main credit card
                status:
                    type: string
                    description: Status of the payment method
                    example: Active
                statusDate:
                    type: string
                    description: The last time the payment method status changed.
                    format: date-time
                statusReason:
                    type: string
                    description: The reason for the last status change.
                    example: "This payment method has expired, therefore its status is now inactive."
                account:
                    type: array
                    description: Reference to the accounts that are linked to the payment method.
                        May be a party account or a financial account.
                    items:
                        $ref: '#/components/schemas/AccountRef'
                relatedParty:
                    $ref: '#/components/schemas/RelatedPartyRef'
                relatedPlace:
                    $ref: '#/components/schemas/RelatedPlace'
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "Type of payment method (e.g.: bank card, cash, voucher, etc).\
            \ The details field type depends on the value assigned to this one."
            description: Defines a specific method of payment (e.g. direct debit with all
                details associated)
        PaymentMethodRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                name:
                    type: string
                    description: Name of the related entity.
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: PaymentMethod reference. A payment method defines a specific mean
                of payment (e.g direct debit).
        PaymentMethodRefOrValue:
            required:
                - '@type'
                - name
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                authorizationCode:
                    type: string
                    description: "Review: Authorization code provided by a financial institution.\
            \ Typically this would be populated for recurring payments using the method,\
            \ as payments have an authorization code of their own."
                    example: "1234567890"
                description:
                    type: string
                    description: Text description of the contents of the payment method
                    example: My gold mastercard.
                isPreferred:
                    type: boolean
                    description: If the method is the preferred one by the owner. Typically
                        used when querying for the payment methods of a specific customer or account
                    example: true
                name:
                    type: string
                    description: Friendly name assigned to the payment method
                    example: Main credit card
                status:
                    type: string
                    description: Status of the payment method
                    example: Active
                statusDate:
                    type: string
                    description: The last time the payment method status changed.
                    format: date-time
                statusReason:
                    type: string
                    description: The reason for the last status change.
                    example: "This payment method has expired, therefore its status is now inactive."
                account:
                    type: array
                    description: Reference to the accounts that are linked to the payment method.
                        May be a party account or a financial account.
                    items:
                        $ref: '#/components/schemas/AccountRef'
                relatedParty:
                    $ref: '#/components/schemas/RelatedPartyRef'
                relatedPlace:
                    $ref: '#/components/schemas/RelatedPlace'
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "Type of payment method (e.g.: bank card, cash, voucher, etc).\
            \ The details field type depends on the value assigned to this one."
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: link to the resource that holds information about the payment mean
                used to complete the operation
        PaymentRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                name:
                    type: string
                    description: A name for the payment
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: "If an immediate payment has been done at the product order submission,\
        \ the payment information are captured and stored (as a reference) in the\
        \ order."
        PaymentRefOrValue:
            required:
                - account
                - paymentMethod
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier of Payment
                href:
                    type: string
                    description: Hypertext Reference of the Payment
                authorizationCode:
                    type: string
                    description: Authorization code retrieved from an external payment gateway
                        that could be used for conciliation
                correlatorId:
                    type: string
                    description: Unique identifier in the client for the payment in case it
                        is needed to correlate
                description:
                    type: string
                    description: Text describing the contents of the payment
                name:
                    type: string
                    description: Screen name of the payment
                paymentDate:
                    type: string
                    description: Date when the payment was performed
                    format: date-time
                status:
                    type: string
                    description: Status of the payment
                statusDate:
                    type: string
                    description: Date when the status was recorded
                    format: date-time
                account:
                    $ref: '#/components/schemas/AccountRef'
                amount:
                    $ref: '#/components/schemas/Money'
                channel:
                    $ref: '#/components/schemas/ChannelRef'
                paymentItem:
                    type: array
                    items:
                        $ref: '#/components/schemas/PaymentItem'
                paymentMethod:
                    $ref: '#/components/schemas/PaymentMethodRefOrValue'
                pointOfInteraction:
                    $ref: '#/components/schemas/PointOfInteraction'
                relatedParty:
                    type: array
                    items:
                        $ref: '#/components/schemas/RelatedParty'
                taxAmount:
                    $ref: '#/components/schemas/Money'
                totalAmount:
                    $ref: '#/components/schemas/Money'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: link to the resource information about the payment operation
        PaymentStatusExampleType:
            type: string
            description: Possible values for the status of a payment
            enum:
                - pendingAuthorization
                - authorized
                - captured
                - failed
                - canceled
                - denied
                - done
        PointOfInteraction:
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                modeOfEntry:
                    type: string
                    description: Key entry code that tells the processor how the transaction
                        was captured.
                retrievalReferenceNumber:
                    type: string
                    description: The reference number used to identify a given transaction that
                        allow the Acceptor or Acquirer to keep track of their transactions
                transactionDate:
                    type: string
                    description: Date time related to the POI transaction.
                    format: date-time
                resource:
                    $ref: '#/components/schemas/ResourceRef'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: POI consists of hardware and software which enables a Cardholder
                and/or an Acceptor to perform a Local Card transaction. This is also referred
                to as a Physical/EMV Terminal. It may be Attended or Unattended.
        Refund:
            required:
                - account
                - paymentMethod
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier of Refund
                href:
                    type: string
                    description: Hypertext Reference of the refund
                authorizationCode:
                    type: string
                    description: Authorization code retrieved from an external payment gateway
                        that could be used for conciliation
                correlatorId:
                    type: string
                    description: Unique identifier in the client for the refund in case it is
                        needed to correlate
                description:
                    type: string
                    description: Text describing the contents of the refund
                name:
                    type: string
                    description: Screen name of the refund
                refundDate:
                    type: string
                    description: Date when the refund was performed
                    format: date-time
                status:
                    type: string
                    description: Status of the refund
                statusDate:
                    type: string
                    description: Date when the status was recorded
                    format: date-time
                account:
                    $ref: '#/components/schemas/AccountRef'
                amount:
                    $ref: '#/components/schemas/Money'
                channel:
                    $ref: '#/components/schemas/ChannelRef'
                payment:
                    $ref: '#/components/schemas/PaymentRef'
                paymentMethod:
                    $ref: '#/components/schemas/PaymentMethodRefOrValue'
                requestor:
                    $ref: '#/components/schemas/RelatedParty'
                taxAmount:
                    $ref: '#/components/schemas/Money'
                totalAmount:
                    $ref: '#/components/schemas/Money'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: The Refund resource represents a performed Refund. It contains
                both information about the refund and the payment method used to perform it.
        Refund_Create:
            required:
                - account
                - paymentMethod
                - totalAmount
            type: object
            properties:
                authorizationCode:
                    type: string
                    description: Authorization code retrieved from an external payment gateway
                        that could be used for conciliation
                correlatorId:
                    type: string
                    description: Unique identifier in the client for the refund in case it is
                        needed to correlate
                description:
                    type: string
                    description: Text describing the contents of the refund
                name:
                    type: string
                    description: Screen name of the refund
                refundDate:
                    type: string
                    description: Date when the refund was performed
                    format: date-time
                account:
                    $ref: '#/components/schemas/AccountRef'
                amount:
                    $ref: '#/components/schemas/Money'
                channel:
                    $ref: '#/components/schemas/ChannelRef'
                payment:
                    $ref: '#/components/schemas/PaymentRef'
                paymentMethod:
                    $ref: '#/components/schemas/PaymentMethodRefOrValue'
                requestor:
                    $ref: '#/components/schemas/RelatedParty'
                taxAmount:
                    $ref: '#/components/schemas/Money'
                totalAmount:
                    $ref: '#/components/schemas/Money'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
            description: |-
                The Refund resource represents a performed Refund. It contains both information about the refund and the payment method used to perform it.
                Skipped properties: id,href,status,statusDate,RefundDate
        RefundStatusExampleType:
            type: string
            description: Possible values for the status of a refund
            enum:
                - pendingAuthorization
                - authorized
                - captured
                - failed
                - canceled
                - denied
                - done
        RelatedParty:
            required:
                - '@referredType'
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                name:
                    type: string
                    description: Name of the related entity.
                role:
                    type: string
                    description: Role played by the related party
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: Related Entity reference. A related party defines party or party
                role linked to a specific entity.
        RelatedPartyRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier of a related party
                href:
                    type: string
                    description: "Reference of the related party, could be a party reference\
            \ or a party role reference"
                name:
                    type: string
                    description: Name of the related party
                role:
                    type: string
                    description: Role of the related party.
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: RelatedParty reference. A related party defines party or party
                role linked to a specific entity.
        RelatedPlace:
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier of the place
                href:
                    type: string
                    description: Unique reference of the place
                name:
                    type: string
                    description: "A user-friendly name for the place, such as [Paris Store],\
            \ [London Store], [Main Home]"
                role:
                    type: string
                    description: "Role of the place, such as: [home delivery], [shop retrieval])"
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: "A  Place and an associated role as installation adress, delivery\
        \ address, etc...."
        ResourceRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                name:
                    type: string
                    description: Name of the related entity.
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
        TimePeriod:
            type: object
            properties:
                endDateTime:
                    type: string
                    description: "End of the time period, using IETC-RFC-3339 format"
                    format: date-time
                    example: 1985-04-12T23:20:50.52Z
                startDateTime:
                    type: string
                    description: "Start of the time period, using IETC-RFC-3339 format"
                    format: date-time
                    example: 1985-04-12T23:20:50.52Z
            description: "A period of time, either as a deadline (endDateTime only) a startDateTime\
        \ only, or both"
        EventSubscription:
            required:
                - callback
                - id
            type: object
            properties:
                id:
                    type: string
                    description: Id of the listener
                callback:
                    type: string
                    description: The callback being registered.
                query:
                    type: string
                    description: additional data to be passed
            description: Sets the communication endpoint address the service instance must
                use to deliver notification information
        EventSubscriptionInput:
            required:
                - callback
            type: object
            properties:
                callback:
                    type: string
                    description: The callback being registered.
                query:
                    type: string
                    description: additional data to be passed
            description: Sets the communication endpoint address the service instance must
                use to deliver notification information
        PaymentCreateEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/PaymentCreateEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        PaymentCreateEventPayload:
            type: object
            properties:
                payment:
                    $ref: '#/components/schemas/Payment'
            description: The event data structure
        PaymentAttributeValueChangeEvent:
            type: object
            properties:
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
                fieldPath:
                    type: string
                    description: The path identifying the object field concerned by this notification.
                event:
                    $ref: '#/components/schemas/PaymentAttributeValueChangeEventPayload'
            description: The notification data structure
        PaymentAttributeValueChangeEventPayload:
            type: object
            properties:
                payment:
                    $ref: '#/components/schemas/Payment'
            description: The event data structure
        PaymentStateChangeEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/PaymentStateChangeEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        PaymentStateChangeEventPayload:
            type: object
            properties:
                payment:
                    $ref: '#/components/schemas/Payment'
            description: The event data structure
        PaymentDeleteEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/PaymentDeleteEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        PaymentDeleteEventPayload:
            type: object
            properties:
                payment:
                    $ref: '#/components/schemas/Payment'
            description: The event data structure
        AuthorizePaymentCreateEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/AuthorizePaymentCreateEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        AuthorizePaymentCreateEventPayload:
            type: object
            properties:
                authorizePayment:
                    $ref: '#/components/schemas/AuthorizePayment'
            description: The event data structure
        AuthorizePaymentAttributeValueChangeEvent:
            type: object
            properties:
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
                fieldPath:
                    type: string
                    description: The path identifying the object field concerned by this notification.
                event:
                    $ref: '#/components/schemas/AuthorizePaymentAttributeValueChangeEventPayload'
            description: The notification data structure
        AuthorizePaymentAttributeValueChangeEventPayload:
            type: object
            properties:
                authorizePayment:
                    $ref: '#/components/schemas/AuthorizePayment'
            description: The event data structure
        AuthorizePaymentStateChangeEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/AuthorizePaymentStateChangeEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        AuthorizePaymentStateChangeEventPayload:
            type: object
            properties:
                authorizePayment:
                    $ref: '#/components/schemas/AuthorizePayment'
            description: The event data structure
        AuthorizePaymentDeleteEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/AuthorizePaymentDeleteEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        AuthorizePaymentDeleteEventPayload:
            type: object
            properties:
                authorizePayment:
                    $ref: '#/components/schemas/AuthorizePayment'
            description: The event data structure
        InitiatePaymentCreateEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/InitiatePaymentCreateEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        InitiatePaymentCreateEventPayload:
            type: object
            properties:
                initiatePayment:
                    $ref: '#/components/schemas/InitiatePayment'
            description: The event data structure
        InitiatePaymentAttributeValueChangeEvent:
            type: object
            properties:
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
                fieldPath:
                    type: string
                    description: The path identifying the object field concerned by this notification.
                event:
                    $ref: '#/components/schemas/InitiatePaymentAttributeValueChangeEventPayload'
            description: The notification data structure
        InitiatePaymentAttributeValueChangeEventPayload:
            type: object
            properties:
                initiatePayment:
                    $ref: '#/components/schemas/InitiatePayment'
            description: The event data structure
        InitiatePaymentStateChangeEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/InitiatePaymentStateChangeEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        InitiatePaymentStateChangeEventPayload:
            type: object
            properties:
                initiatePayment:
                    $ref: '#/components/schemas/InitiatePayment'
            description: The event data structure
        InitiatePaymentDeleteEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/InitiatePaymentDeleteEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        InitiatePaymentDeleteEventPayload:
            type: object
            properties:
                initiatePayment:
                    $ref: '#/components/schemas/InitiatePayment'
            description: The event data structure
        RefundCreateEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/RefundCreateEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        RefundCreateEventPayload:
            type: object
            properties:
                refund:
                    $ref: '#/components/schemas/Refund'
            description: The event data structure
        RefundAttributeValueChangeEvent:
            type: object
            properties:
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
                fieldPath:
                    type: string
                    description: The path identifying the object field concerned by this notification.
                event:
                    $ref: '#/components/schemas/RefundAttributeValueChangeEventPayload'
            description: The notification data structure
        RefundAttributeValueChangeEventPayload:
            type: object
            properties:
                refund:
                    $ref: '#/components/schemas/Refund'
            description: The event data structure
        RefundStateChangeEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/RefundStateChangeEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        RefundStateChangeEventPayload:
            type: object
            properties:
                refund:
                    $ref: '#/components/schemas/Refund'
            description: The event data structure
        RefundDeleteEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/RefundDeleteEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        RefundDeleteEventPayload:
            type: object
            properties:
                refund:
                    $ref: '#/components/schemas/Refund'
            description: The event data structure
        Error:
            required:
                - code
                - reason
            type: object
            properties:
                code:
                    type: string
                    description: "Application relevant detail, defined in the API or a common\
            \ list."
                reason:
                    type: string
                    description: Explanation of the reason for the error which can be shown
                        to a client user.
                message:
                    type: string
                    description: More details and corrective actions related to the error which
                        can be shown to a client user.
                status:
                    type: string
                    description: HTTP Error code extension
                referenceError:
                    type: string
                    description: URI of documentation describing the error.
                    format: uri
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class."
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class entity name."
            description: "Used when an API throws an Error, typically with a HTTP error\
        \ response-code (3xx, 4xx, 5xx)"
x-original-swagger-version: "2.0"
