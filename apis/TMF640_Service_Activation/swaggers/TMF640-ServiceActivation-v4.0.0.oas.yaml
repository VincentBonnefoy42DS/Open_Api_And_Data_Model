openapi: 3.0.1
info:
    title: API Service Activation and Configuration
    description: "## TMF API Reference: TMF640 - Service Activation and Configuration\n\
    \n Version 4.0 \n\nService Activation and Configuration API goal is to provide\
    \ the ability to activate and configure Service. This API features Monitor pattern\
    \ allowing to manage service configuration/activation asynchronous request (server\
    \ side will provide monitor as POST/PATCH response) \n\n### TMF640 performs the\
    \ following Operations on service resource :\n- Retrieve a service or a collection\
    \ of services depending on filter criteria\n- Partial update of an service\n-\
    \ Create a service (including default values and creation rules)\n- Delete a service\
    \ (for administration purposes)\n- Manage notification of events\n\n### Monitor\
    \ Resource\n\nMonitor resource is used to track and log activation and/or configuration\
    \ request\n\n### TMF640 provides following operation on Monitor resource:\n\n\
    - Retrieval of a monitor or a collection of monitor\n\nCopyright Â© TM Forum 2019;\
    \ All Rights Reserved"
    version: 4.0.0
servers:
    -   url: http://serverRoot/tmf-api/ServiceActivationAndConfiguration/v4
tags:
    -   name: service
    -   name: monitor
    -   name: notification listeners (client side)
    -   name: events subscription
paths:
    /service:
        get:
            tags:
                - service
            summary: List or find Service objects
            description: This operation list or find Service entities
            operationId: listService
            parameters:
                -   name: fields
                    in: query
                    description: Comma-separated properties to be provided in response
                    schema:
                        type: string
                -   name: offset
                    in: query
                    description: Requested index for start of resources to be provided in response
                    schema:
                        type: integer
                -   name: limit
                    in: query
                    description: Requested number of resources to be provided in response
                    schema:
                        type: integer
            responses:
                "200":
                    description: Success
                    headers:
                        X-Total-Count:
                            description: Total number of items matching criteria
                            schema:
                                type: integer
                        X-Result-Count:
                            description: Actual number of items returned in the response body
                            schema:
                                type: integer
                    content:
                        application/json;charset=utf-8:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Service'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
        post:
            tags:
                - service
            summary: Creates a Service
            description: This operation creates a Service entity.
            operationId: createService
            requestBody:
                description: The Service to be created
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/Service_Create'
                required: true
            responses:
                "201":
                    description: Created
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Service'
                "202":
                    description: Accepted
                    content: { }
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: service
    /service/{id}:
        get:
            tags:
                - service
            summary: Retrieves a Service by ID
            description: This operation retrieves a Service entity. Attribute selection
                is enabled for all first level attributes.
            operationId: retrieveService
            parameters:
                -   name: id
                    in: path
                    description: Identifier of the Service
                    required: true
                    schema:
                        type: string
                -   name: fields
                    in: query
                    description: Comma-separated properties to provide in response
                    schema:
                        type: string
            responses:
                "200":
                    description: Success
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Service'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
        delete:
            tags:
                - service
            summary: Deletes a Service
            description: This operation deletes a Service entity.
            operationId: deleteService
            parameters:
                -   name: id
                    in: path
                    description: Identifier of the Service
                    required: true
                    schema:
                        type: string
            responses:
                "204":
                    description: Deleted
                    content: { }
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
        patch:
            tags:
                - service
            summary: Updates partially a Service
            description: This operation updates partially a Service entity.
            operationId: patchService
            parameters:
                -   name: id
                    in: path
                    description: Identifier of the Service
                    required: true
                    schema:
                        type: string
            requestBody:
                description: The Service to be updated
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/Service_Update'
                required: true
            responses:
                "200":
                    description: Updated
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Service'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: service
    /monitor:
        get:
            tags:
                - monitor
            summary: List or find Monitor objects
            description: This operation list or find Monitor entities
            operationId: listMonitor
            parameters:
                -   name: fields
                    in: query
                    description: Comma-separated properties to be provided in response
                    schema:
                        type: string
                -   name: offset
                    in: query
                    description: Requested index for start of resources to be provided in response
                    schema:
                        type: integer
                -   name: limit
                    in: query
                    description: Requested number of resources to be provided in response
                    schema:
                        type: integer
            responses:
                "200":
                    description: Success
                    headers:
                        X-Total-Count:
                            description: Total number of items matching criteria
                            schema:
                                type: integer
                        X-Result-Count:
                            description: Actual number of items returned in the response body
                            schema:
                                type: integer
                    content:
                        application/json;charset=utf-8:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Monitor'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
    /monitor/{id}:
        get:
            tags:
                - monitor
            summary: Retrieves a Monitor by ID
            description: This operation retrieves a Monitor entity. Attribute selection
                is enabled for all first level attributes.
            operationId: retrieveMonitor
            parameters:
                -   name: id
                    in: path
                    description: Identifier of the Monitor
                    required: true
                    schema:
                        type: string
                -   name: fields
                    in: query
                    description: Comma-separated properties to provide in response
                    schema:
                        type: string
            responses:
                "200":
                    description: Success
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Monitor'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
    /hub:
        post:
            tags:
                - events subscription
            summary: Register a listener
            description: "Sets the communication endpoint address the service instance must\
        \ use to deliver information about its health state, execution state, failures\
        \ and metrics."
            operationId: registerListener
            requestBody:
                description: Data containing the callback endpoint to deliver the information
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/EventSubscriptionInput'
                required: true
            responses:
                "201":
                    description: Subscribed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /hub/{id}:
        delete:
            tags:
                - events subscription
            summary: Unregister a listener
            description: "Resets the communication endpoint address the service instance\
        \ must use to deliver information about its health state, execution state,\
        \ failures and metrics."
            operationId: unregisterListener
            parameters:
                -   name: id
                    in: path
                    description: The id of the registered listener
                    required: true
                    schema:
                        type: string
            responses:
                "204":
                    description: Deleted
                    content: { }
                "400":
                    description: Bad request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
    /listener/serviceCreateEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity ServiceCreateEvent
            description: Example of a client listener for receiving the notification ServiceCreateEvent
            operationId: listenToServiceCreateEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/ServiceCreateEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/serviceAttributeValueChangeEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity ServiceAttributeValueChangeEvent
            description: Example of a client listener for receiving the notification ServiceAttributeValueChangeEvent
            operationId: listenToServiceAttributeValueChangeEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/ServiceAttributeValueChangeEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/serviceStateChangeEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity ServiceStateChangeEvent
            description: Example of a client listener for receiving the notification ServiceStateChangeEvent
            operationId: listenToServiceStateChangeEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/ServiceStateChangeEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/serviceDeleteEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity ServiceDeleteEvent
            description: Example of a client listener for receiving the notification ServiceDeleteEvent
            operationId: listenToServiceDeleteEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/ServiceDeleteEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/monitorCreateEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity MonitorCreateEvent
            description: Example of a client listener for receiving the notification MonitorCreateEvent
            operationId: listenToMonitorCreateEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/MonitorCreateEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/monitorAttributeValueChangeEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity MonitorAttributeValueChangeEvent
            description: Example of a client listener for receiving the notification MonitorAttributeValueChangeEvent
            operationId: listenToMonitorAttributeValueChangeEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/MonitorAttributeValueChangeEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/monitorStateChangeEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity MonitorStateChangeEvent
            description: Example of a client listener for receiving the notification MonitorStateChangeEvent
            operationId: listenToMonitorStateChangeEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/MonitorStateChangeEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /listener/monitorDeleteEvent:
        post:
            tags:
                - notification listeners (client side)
            summary: Client listener for entity MonitorDeleteEvent
            description: Example of a client listener for receiving the notification MonitorDeleteEvent
            operationId: listenToMonitorDeleteEvent
            requestBody:
                description: The event data
                content:
                    application/json;charset=utf-8:
                        schema:
                            $ref: '#/components/schemas/MonitorDeleteEvent'
                required: true
            responses:
                "201":
                    description: Notified
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                "400":
                    description: Bad Request
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: Unauthorized
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: Forbidden
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: Not Found
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "405":
                    description: Method Not allowed
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: Conflict
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: Internal Server Error
                    content:
                        application/json;charset=utf-8:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
components:
    schemas:
        Addressable:
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class entity name"
            description: Base schema for adressable entities
        Any:
            type: object
        Characteristic:
            required:
                - name
                - value
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier of the characteristic
                name:
                    type: string
                    description: Name of the characteristic
                valueType:
                    type: string
                    description: Data type of the value of the characteristic
                characteristicRelationship:
                    type: array
                    items:
                        $ref: '#/components/schemas/CharacteristicRelationship'
                value:
                    $ref: '#/components/schemas/Any'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                    example: ResourceSpecification
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                    example: https://mycsp.com:8080/tmf-api/schema/Resource/LogicalResourceSpecification.schema.json
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                    example: LogicalResourceSpecification
            description: Describes a given characteristic of an object or entity through
                a name/value pair.
        CharacteristicRelationship:
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier of the characteristic
                relationshipType:
                    type: string
                    description: The type of relationship
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class entity name"
            description: Another Characteristic that is related to the current Characteristic;
        ConstraintRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: reference id to the target constraint
                href:
                    type: string
                    description: Hyperlink reference to the target constraint
                name:
                    type: string
                    description: Name given to the constraint
                version:
                    type: string
                    description: constraint version
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class entity name"
                '@referredType':
                    type: string
                    description: The (class) type of the referred constraint
            description: Constraint reference. The Constraint resource represents a policy/rule
                applied to an entity or entity spec.
        EntityRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                name:
                    type: string
                    description: Name of the related entity.
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                    example: ResourceSpecification
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                    example: https://mycsp.com:8080/tmf-api/schema/Resource/LogicalResourceSpecification.schema.json
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                    example: LogicalResourceSpecification
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: Entity reference schema to be use for all entityRef class.
        EntityValue:
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier of a related entity.
                href:
                    type: string
                    description: Reference of the related entity.
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class entity name"
            description: Base entity value  schema for use in TMForum Open-APIs
        Extensible:
            type: object
            properties:
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                    example: ResourceSpecification
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                    example: https://mycsp.com:8080/tmf-api/schema/Resource/LogicalResourceSpecification.schema.json
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                    example: LogicalResourceSpecification
            description: Base Extensible schema for use in TMForum Open-APIs
        Feature:
            required:
                - featureCharacteristic
                - name
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier of the feature.
                isBundle:
                    type: boolean
                    description: True if this is a feature group. Default is false.
                isEnabled:
                    type: boolean
                    description: True if this feature is enabled. Default is true.
                name:
                    type: string
                    description: This is the name for the feature.
                constraint:
                    type: array
                    description: This is a list of feature constraints.
                    items:
                        $ref: '#/components/schemas/ConstraintRef'
                featureCharacteristic:
                    minItems: 1
                    type: array
                    description: This is a list of Characteristics for a particular feature.
                    items:
                        $ref: '#/components/schemas/Characteristic'
                featureRelationship:
                    type: array
                    items:
                        $ref: '#/components/schemas/FeatureRelationship'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class entity name"
            description: Configuration feature.
        FeatureRelationship:
            required:
                - name
                - relationshipType
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier of the target feature.
                name:
                    type: string
                    description: This is the name of the target feature.
                relationshipType:
                    type: string
                    description: This is the type of the feature relationship.
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class entity name"
            description: Configuration feature
        HeaderItem:
            required:
                - name
                - value
            type: object
            properties:
                name:
                    type: string
                    description: "The name of the header item, e.g. locale"
                value:
                    type: string
                    description: "The value of the header item, e.g. en-us"
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class entity name"
            description: An item typically included in a request or response
        Monitor:
            type: object
            properties:
                id:
                    type: string
                    description: Identifier of an instance of the monitor. Required to be unique
                        within the resource type.  Used in URIs as the identifier for specific
                        instances of a type
                href:
                    type: string
                    description: reference to this monitor
                sourceHref:
                    type: string
                    description: The monitored resource href
                state:
                    type: string
                    description: "The Monitor state of the resource.  InProgress, InError, Completed"
                request:
                    $ref: '#/components/schemas/Request'
                response:
                    $ref: '#/components/schemas/Response'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class entity name"
            description: Monitoring of resources
        Note:
            type: object
            properties:
                id:
                    type: string
                    description: "Identifier of the note within its containing entity (may or\
            \ may not be globally unique, depending on provider implementation)"
                author:
                    type: string
                    description: Author of the note
                date:
                    type: string
                    description: Date of the note
                    format: date-time
                text:
                    type: string
                    description: Text of the note
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class entity name"
            description: Extra information about a given entity
        OrderItemActionType:
            type: string
            description: action to be performed on the product
            enum:
                - add
                - modify
                - delete
                - noChange
        Place:
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier of the place
                href:
                    type: string
                    description: Unique reference of the place
                name:
                    type: string
                    description: "A user-friendly name for the place, such as [Paris Store],\
            \ [London Store], [Main Home]"
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class entity name"
            description: Place reference. Place defines the places where the products are
                sold or delivered.
        PlaceRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                name:
                    type: string
                    description: Name of the related entity.
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                    example: ResourceSpecification
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                    example: https://mycsp.com:8080/tmf-api/schema/Resource/LogicalResourceSpecification.schema.json
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                    example: LogicalResourceSpecification
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: Place reference. PlaceRef defines the placeRefs where the products
                are sold or delivered.
        RelatedEntityRefOrValue:
            required:
                - role
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier of a related entity.
                href:
                    type: string
                    description: Reference of the related entity.
                name:
                    type: string
                    description: Name of the related entity.
                role:
                    type: string
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                    example: ResourceSpecification
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                    example: https://mycsp.com:8080/tmf-api/schema/Resource/LogicalResourceSpecification.schema.json
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                    example: LogicalResourceSpecification
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: "A reference to an entity, where the type of the entity is not\
        \ known in advance. A related entity defines a entity described by reference\
        \ or by value linked to a specific entity. The polymorphic attributes @type,\
        \ @schemaLocation & @referredType are related to the Entity and not the RelatedEntityRefOrValue\
        \ class itself"
        RelatedParty:
            required:
                - '@referredType'
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                name:
                    type: string
                    description: Name of the related entity.
                role:
                    type: string
                    description: Role played by the related party
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                    example: ResourceSpecification
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                    example: https://mycsp.com:8080/tmf-api/schema/Resource/LogicalResourceSpecification.schema.json
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                    example: LogicalResourceSpecification
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: Related Entity reference. A related party defines party or party
                role linked to a specific entity.
        RelatedPlaceRefOrValue:
            required:
                - role
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier of the place
                href:
                    type: string
                    description: Unique reference of the place
                name:
                    type: string
                    description: "A user-friendly name for the place, such as [Paris Store],\
            \ [London Store], [Main Home]"
                role:
                    type: string
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                    example: ResourceSpecification
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                    example: https://mycsp.com:8080/tmf-api/schema/Resource/LogicalResourceSpecification.schema.json
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                    example: LogicalResourceSpecification
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: "Related Entity reference. A related place defines a place described\
        \ by reference or by value linked to a specific entity. The polymorphic attributes\
        \ @type, @schemaLocation & @referredType are related to the place entity and\
        \ not the RelatedPlaceRefOrValue class itself"
        RelatedServiceOrderItem:
            required:
                - itemId
                - serviceOrderId
            type: object
            properties:
                itemId:
                    type: string
                    description: Identifier of the order item where the service was managed
                role:
                    type: string
                    description: role of the service order item for this service
                serviceOrderHref:
                    type: string
                    description: Reference of the related entity.
                serviceOrderId:
                    type: string
                    description: Unique identifier of a related entity.
                itemAction:
                    $ref: '#/components/schemas/OrderItemActionType'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class entity name"
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: RelatedServiceOrderItem (a ServiceOrder item) .The service order
                item which triggered service creation/change/termination.
        Request:
            required:
                - body
                - header
            type: object
            properties:
                body:
                    type: string
                    description: The body of the request. For example for an HTTP request might
                        contain content of a form .
                method:
                    type: string
                    description: "The protocol of the request, e.g. http"
                to:
                    type: string
                    description: "The target of the request, e.g. a URL for an HTTP request"
                header:
                    minItems: 1
                    type: array
                    description: "Items included in the header of the request. For example for\
            \ an HTTP request might contain requested locale, basic authentication."
                    items:
                        $ref: '#/components/schemas/HeaderItem'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class entity name"
            description: A response to a request
        ResourceRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                name:
                    type: string
                    description: Name of the related entity.
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                    example: ResourceSpecification
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                    example: https://mycsp.com:8080/tmf-api/schema/Resource/LogicalResourceSpecification.schema.json
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                    example: LogicalResourceSpecification
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
        Response:
            required:
                - body
                - header
            type: object
            properties:
                body:
                    type: string
                    description: The body of the response. For example for an HTTP response
                        might contain HTML for rendering.
                statusCode:
                    type: string
                    description: "The status of the response. For example for an HTTP response\
            \ would be codes such as 200, 400, etc."
                header:
                    minItems: 1
                    type: array
                    description: Items included in the header of the response. For example for
                        an HTTP response might contain negotiated locale.
                    items:
                        $ref: '#/components/schemas/HeaderItem'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class entity name"
            description: A response to a request
        Service:
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier of the service
                href:
                    type: string
                    description: Reference of the service
                category:
                    type: string
                    description: Is it a customer facing or resource facing service
                description:
                    type: string
                    description: Free-text description of the service
                endDate:
                    type: string
                    description: Date when the service ends
                    format: date-time
                hasStarted:
                    type: boolean
                    description: "If TRUE, this Service has already been started"
                isBundle:
                    type: boolean
                    description: "If true, the service is a ServiceBundle which regroup a service\
            \ hierachy. If false, the service is a 'atomic' service (hierachy leaf)."
                isServiceEnabled:
                    type: boolean
                    description: "If FALSE and hasStarted is FALSE, this particular Service\
            \ has NOT been enabled for use - if FALSE and hasStarted is TRUE then\
            \ the service has failed "
                isStateful:
                    type: boolean
                    description: "If TRUE, this Service can be changed without affecting any\
            \ other services"
                name:
                    type: string
                    description: Name of the service
                serviceDate:
                    type: string
                    description: Date when the service was created (whatever its status).
                serviceType:
                    type: string
                    description: Business type of the service
                startDate:
                    type: string
                    description: Date when the service starts
                    format: date-time
                startMode:
                    type: string
                    description: "This attribute is an enumerated integer that indicates how\
            \ the Service is started, such as: 0: Unknown; 1: Automatically by the\
            \ managed environment; 2: Automatically by the owning device; 3: Manually\
            \ by the Provider of the Service; 4: Manually by a Customer of the Provider;\
            \ 5: Any of the above"
                feature:
                    type: array
                    description: 'A list of feature associated with this service '
                    items:
                        $ref: '#/components/schemas/Feature'
                note:
                    type: array
                    description: A list of notes made on this service
                    items:
                        $ref: '#/components/schemas/Note'
                place:
                    type: array
                    description: "A list of places (Place [*]). Used to define a place useful\
            \ for the service (for example a geographical place whre the service is\
            \ installed)"
                    items:
                        $ref: '#/components/schemas/RelatedPlaceRefOrValue'
                relatedEntity:
                    type: array
                    description: 'A list of related  entity in relationship with this service '
                    items:
                        $ref: '#/components/schemas/RelatedEntityRefOrValue'
                relatedParty:
                    type: array
                    description: "A list of related party references (RelatedParty [*]). A related\
            \ party defines party or party role linked to a specific entity"
                    items:
                        $ref: '#/components/schemas/RelatedParty'
                serviceCharacteristic:
                    type: array
                    description: "A list of characteristics that characterize this service (ServiceCharacteristic\
            \ [*]) "
                    items:
                        $ref: '#/components/schemas/Characteristic'
                serviceOrderItem:
                    type: array
                    description: A list of service order items related to this service
                    items:
                        $ref: '#/components/schemas/RelatedServiceOrderItem'
                serviceRelationship:
                    type: array
                    description: "A list of service relationships (ServiceRelationship [*]).\
            \ Describes links with other service(s) in the inventory (useful for describing\
            \ relies-on, relies-from between CFS for example)."
                    items:
                        $ref: '#/components/schemas/ServiceRelationship'
                serviceSpecification:
                    $ref: '#/components/schemas/ServiceSpecificationRef'
                state:
                    $ref: '#/components/schemas/ServiceStateType'
                supportingResource:
                    type: array
                    description: "A list of supporting resources (SupportingResource [*]).Note:\
            \ only Service of type RFS can be associated with Resources"
                    items:
                        $ref: '#/components/schemas/ResourceRef'
                supportingService:
                    type: array
                    description: "A list of supporting services (SupportingService [*]). A collection\
            \ of services that support this service (bundling, link CFS to RFS)"
                    items:
                        $ref: '#/components/schemas/ServiceRefOrValue'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class entity name"
            description: "Service is a base class for defining the Service hierarchy. All\
        \ Services are characterized as either being possibly visible and usable by\
        \ a Customer or not. This gives rise to the two subclasses of Service: CustomerFacingService\
        \ and ResourceFacingService."
        Service_Create:
            required:
                - serviceSpecification
                - state
            type: object
            properties:
                category:
                    type: string
                    description: Is it a customer facing or resource facing service
                description:
                    type: string
                    description: Free-text description of the service
                endDate:
                    type: string
                    description: Date when the service ends
                    format: date-time
                hasStarted:
                    type: boolean
                    description: "If TRUE, this Service has already been started"
                isBundle:
                    type: boolean
                    description: "If true, the service is a ServiceBundle which regroup a service\
            \ hierachy. If false, the service is a 'atomic' service (hierachy leaf)."
                isServiceEnabled:
                    type: boolean
                    description: "If FALSE and hasStarted is FALSE, this particular Service\
            \ has NOT been enabled for use - if FALSE and hasStarted is TRUE then\
            \ the service has failed "
                isStateful:
                    type: boolean
                    description: "If TRUE, this Service can be changed without affecting any\
            \ other services"
                name:
                    type: string
                    description: Name of the service
                serviceDate:
                    type: string
                    description: Date when the service was created (whatever its status).
                serviceType:
                    type: string
                    description: Business type of the service
                startDate:
                    type: string
                    description: Date when the service starts
                    format: date-time
                startMode:
                    type: string
                    description: "This attribute is an enumerated integer that indicates how\
            \ the Service is started, such as: 0: Unknown; 1: Automatically by the\
            \ managed environment; 2: Automatically by the owning device; 3: Manually\
            \ by the Provider of the Service; 4: Manually by a Customer of the Provider;\
            \ 5: Any of the above"
                feature:
                    type: array
                    description: 'A list of feature associated with this service '
                    items:
                        $ref: '#/components/schemas/Feature'
                note:
                    type: array
                    description: A list of notes made on this service
                    items:
                        $ref: '#/components/schemas/Note'
                place:
                    type: array
                    description: "A list of places (Place [*]). Used to define a place useful\
            \ for the service (for example a geographical place whre the service is\
            \ installed)"
                    items:
                        $ref: '#/components/schemas/RelatedPlaceRefOrValue'
                relatedEntity:
                    type: array
                    description: 'A list of related  entity in relationship with this service '
                    items:
                        $ref: '#/components/schemas/RelatedEntityRefOrValue'
                relatedParty:
                    type: array
                    description: "A list of related party references (RelatedParty [*]). A related\
            \ party defines party or party role linked to a specific entity"
                    items:
                        $ref: '#/components/schemas/RelatedParty'
                serviceCharacteristic:
                    type: array
                    description: "A list of characteristics that characterize this service (ServiceCharacteristic\
            \ [*]) "
                    items:
                        $ref: '#/components/schemas/Characteristic'
                serviceOrderItem:
                    type: array
                    description: A list of service order items related to this service
                    items:
                        $ref: '#/components/schemas/RelatedServiceOrderItem'
                serviceRelationship:
                    type: array
                    description: "A list of service relationships (ServiceRelationship [*]).\
            \ Describes links with other service(s) in the inventory (useful for describing\
            \ relies-on, relies-from between CFS for example)."
                    items:
                        $ref: '#/components/schemas/ServiceRelationship'
                serviceSpecification:
                    $ref: '#/components/schemas/ServiceSpecificationRef'
                state:
                    $ref: '#/components/schemas/ServiceStateType'
                supportingResource:
                    type: array
                    description: "A list of supporting resources (SupportingResource [*]).Note:\
            \ only Service of type RFS can be associated with Resources"
                    items:
                        $ref: '#/components/schemas/ResourceRef'
                supportingService:
                    type: array
                    description: "A list of supporting services (SupportingService [*]). A collection\
            \ of services that support this service (bundling, link CFS to RFS)"
                    items:
                        $ref: '#/components/schemas/ServiceRefOrValue'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class entity name"
            description: |-
                Service is a base class for defining the Service hierarchy. All Services are characterized as either being possibly visible and usable by a Customer or not. This gives rise to the two subclasses of Service: CustomerFacingService and ResourceFacingService.
                Skipped properties: id,href
        Service_Update:
            type: object
            properties:
                category:
                    type: string
                    description: Is it a customer facing or resource facing service
                description:
                    type: string
                    description: Free-text description of the service
                endDate:
                    type: string
                    description: Date when the service ends
                    format: date-time
                hasStarted:
                    type: boolean
                    description: "If TRUE, this Service has already been started"
                isBundle:
                    type: boolean
                    description: "If true, the service is a ServiceBundle which regroup a service\
            \ hierachy. If false, the service is a 'atomic' service (hierachy leaf)."
                isServiceEnabled:
                    type: boolean
                    description: "If FALSE and hasStarted is FALSE, this particular Service\
            \ has NOT been enabled for use - if FALSE and hasStarted is TRUE then\
            \ the service has failed "
                isStateful:
                    type: boolean
                    description: "If TRUE, this Service can be changed without affecting any\
            \ other services"
                name:
                    type: string
                    description: Name of the service
                serviceType:
                    type: string
                    description: Business type of the service
                startDate:
                    type: string
                    description: Date when the service starts
                    format: date-time
                startMode:
                    type: string
                    description: "This attribute is an enumerated integer that indicates how\
            \ the Service is started, such as: 0: Unknown; 1: Automatically by the\
            \ managed environment; 2: Automatically by the owning device; 3: Manually\
            \ by the Provider of the Service; 4: Manually by a Customer of the Provider;\
            \ 5: Any of the above"
                feature:
                    type: array
                    description: 'A list of feature associated with this service '
                    items:
                        $ref: '#/components/schemas/Feature'
                note:
                    type: array
                    description: A list of notes made on this service
                    items:
                        $ref: '#/components/schemas/Note'
                place:
                    type: array
                    description: "A list of places (Place [*]). Used to define a place useful\
            \ for the service (for example a geographical place whre the service is\
            \ installed)"
                    items:
                        $ref: '#/components/schemas/RelatedPlaceRefOrValue'
                relatedEntity:
                    type: array
                    description: 'A list of related  entity in relationship with this service '
                    items:
                        $ref: '#/components/schemas/RelatedEntityRefOrValue'
                relatedParty:
                    type: array
                    description: "A list of related party references (RelatedParty [*]). A related\
            \ party defines party or party role linked to a specific entity"
                    items:
                        $ref: '#/components/schemas/RelatedParty'
                serviceCharacteristic:
                    type: array
                    description: "A list of characteristics that characterize this service (ServiceCharacteristic\
            \ [*]) "
                    items:
                        $ref: '#/components/schemas/Characteristic'
                serviceOrderItem:
                    type: array
                    description: A list of service order items related to this service
                    items:
                        $ref: '#/components/schemas/RelatedServiceOrderItem'
                serviceRelationship:
                    type: array
                    description: "A list of service relationships (ServiceRelationship [*]).\
            \ Describes links with other service(s) in the inventory (useful for describing\
            \ relies-on, relies-from between CFS for example)."
                    items:
                        $ref: '#/components/schemas/ServiceRelationship'
                serviceSpecification:
                    $ref: '#/components/schemas/ServiceSpecificationRef'
                state:
                    $ref: '#/components/schemas/ServiceStateType'
                supportingResource:
                    type: array
                    description: "A list of supporting resources (SupportingResource [*]).Note:\
            \ only Service of type RFS can be associated with Resources"
                    items:
                        $ref: '#/components/schemas/ResourceRef'
                supportingService:
                    type: array
                    description: "A list of supporting services (SupportingService [*]). A collection\
            \ of services that support this service (bundling, link CFS to RFS)"
                    items:
                        $ref: '#/components/schemas/ServiceRefOrValue'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class entity name"
            description: |-
                Service is a base class for defining the Service hierarchy. All Services are characterized as either being possibly visible and usable by a Customer or not. This gives rise to the two subclasses of Service: CustomerFacingService and ResourceFacingService.
                Skipped properties: id,href
        ServiceRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                name:
                    type: string
                    description: Name of the related entity.
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                    example: ResourceSpecification
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                    example: https://mycsp.com:8080/tmf-api/schema/Resource/LogicalResourceSpecification.schema.json
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                    example: LogicalResourceSpecification
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: "Service reference, for when Service is used by other entities"
        ServiceRefOrValue:
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier of the service
                href:
                    type: string
                    description: Reference of the service
                category:
                    type: string
                    description: Is it a customer facing or resource facing service
                description:
                    type: string
                    description: Free-text description of the service
                endDate:
                    type: string
                    description: Date when the service ends
                    format: date-time
                hasStarted:
                    type: boolean
                    description: "If TRUE, this Service has already been started"
                isBundle:
                    type: boolean
                    description: "If true, the service is a ServiceBundle which regroup a service\
            \ hierachy. If false, the service is a 'atomic' service (hierachy leaf)."
                isServiceEnabled:
                    type: boolean
                    description: "If FALSE and hasStarted is FALSE, this particular Service\
            \ has NOT been enabled for use - if FALSE and hasStarted is TRUE then\
            \ the service has failed "
                isStateful:
                    type: boolean
                    description: "If TRUE, this Service can be changed without affecting any\
            \ other services"
                name:
                    type: string
                    description: Name of the service
                serviceDate:
                    type: string
                    description: Date when the service was created (whatever its status).
                serviceType:
                    type: string
                    description: Business type of the service
                startDate:
                    type: string
                    description: Date when the service starts
                    format: date-time
                startMode:
                    type: string
                    description: "This attribute is an enumerated integer that indicates how\
            \ the Service is started, such as: 0: Unknown; 1: Automatically by the\
            \ managed environment; 2: Automatically by the owning device; 3: Manually\
            \ by the Provider of the Service; 4: Manually by a Customer of the Provider;\
            \ 5: Any of the above"
                feature:
                    type: array
                    description: 'A list of feature associated with this service '
                    items:
                        $ref: '#/components/schemas/Feature'
                note:
                    type: array
                    description: A list of notes made on this service
                    items:
                        $ref: '#/components/schemas/Note'
                place:
                    type: array
                    description: "A list of places (Place [*]). Used to define a place useful\
            \ for the service (for example a geographical place whre the service is\
            \ installed)"
                    items:
                        $ref: '#/components/schemas/RelatedPlaceRefOrValue'
                relatedEntity:
                    type: array
                    description: 'A list of related  entity in relationship with this service '
                    items:
                        $ref: '#/components/schemas/RelatedEntityRefOrValue'
                relatedParty:
                    type: array
                    description: "A list of related party references (RelatedParty [*]). A related\
            \ party defines party or party role linked to a specific entity"
                    items:
                        $ref: '#/components/schemas/RelatedParty'
                serviceCharacteristic:
                    type: array
                    description: "A list of characteristics that characterize this service (ServiceCharacteristic\
            \ [*]) "
                    items:
                        $ref: '#/components/schemas/Characteristic'
                serviceOrderItem:
                    type: array
                    description: A list of service order items related to this service
                    items:
                        $ref: '#/components/schemas/RelatedServiceOrderItem'
                serviceRelationship:
                    type: array
                    description: "A list of service relationships (ServiceRelationship [*]).\
            \ Describes links with other service(s) in the inventory (useful for describing\
            \ relies-on, relies-from between CFS for example)."
                    items:
                        $ref: '#/components/schemas/ServiceRelationship'
                serviceSpecification:
                    $ref: '#/components/schemas/ServiceSpecificationRef'
                state:
                    $ref: '#/components/schemas/ServiceStateType'
                supportingResource:
                    type: array
                    description: "A list of supporting resources (SupportingResource [*]).Note:\
            \ only Service of type RFS can be associated with Resources"
                    items:
                        $ref: '#/components/schemas/ResourceRef'
                supportingService:
                    type: array
                    description: "A list of supporting services (SupportingService [*]). A collection\
            \ of services that support this service (bundling, link CFS to RFS)"
                    items:
                        $ref: '#/components/schemas/ServiceRefOrValue'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                    example: ResourceSpecification
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                    example: https://mycsp.com:8080/tmf-api/schema/Resource/LogicalResourceSpecification.schema.json
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                    example: LogicalResourceSpecification
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: "A Service to be created defined by value or existing defined by\
        \ reference. The polymorphic attributes @type, @schemaLocation & @referredType\
        \ are related to the Service entity and not the RelatedServiceRefOrValue class\
        \ itself"
        ServiceRelationship:
            required:
                - relationshipType
            type: object
            properties:
                relationshipType:
                    type: string
                ServiceRelationshipCharacteristic:
                    type: array
                    items:
                        $ref: '#/components/schemas/Characteristic'
                service:
                    $ref: '#/components/schemas/ServiceRefOrValue'
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class entity name"
        ServiceSpecificationRef:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: unique identifier
                href:
                    type: string
                    description: Hyperlink reference
                    format: uri
                name:
                    type: string
                    description: Name of the related entity.
                version:
                    type: string
                    description: Service specification version
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                    example: ResourceSpecification
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                    example: https://mycsp.com:8080/tmf-api/schema/Resource/LogicalResourceSpecification.schema.json
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class Extensible name"
                    example: LogicalResourceSpecification
                '@referredType':
                    type: string
                    description: The actual type of the target instance when needed for disambiguation.
            description: "Service specification reference: ServiceSpecification(s) required\
        \ to realize a ProductSpecification."
        ServiceStateType:
            type: string
            description: Valid values for the lifecycle state of the service
            enum:
                - feasibilityChecked
                - designed
                - reserved
                - inactive
                - active
                - terminated
        TimePeriod:
            type: object
            properties:
                endDateTime:
                    type: string
                    description: "End of the time period, using IETC-RFC-3339 format"
                    format: date-time
                    example: 1985-04-12T23:20:50.52Z
                startDateTime:
                    type: string
                    description: "Start of the time period, using IETC-RFC-3339 format. If you\
            \ define a start, you must also define an end"
                    format: date-time
                    example: 1985-04-12T23:20:50.52Z
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class"
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class entity name"
            description: "A period of time, either as a deadline (endDateTime only) a startDateTime\
        \ only, or both"
        EventSubscription:
            required:
                - callback
                - id
            type: object
            properties:
                id:
                    type: string
                    description: Id of the listener
                callback:
                    type: string
                    description: The callback being registered.
                query:
                    type: string
                    description: additional data to be passed
            description: Sets the communication endpoint address the service instance must
                use to deliver notification information
        EventSubscriptionInput:
            required:
                - callback
            type: object
            properties:
                callback:
                    type: string
                    description: The callback being registered.
                query:
                    type: string
                    description: additional data to be passed
            description: Sets the communication endpoint address the service instance must
                use to deliver notification information
        ServiceCreateEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/ServiceCreateEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        ServiceCreateEventPayload:
            type: object
            properties:
                service:
                    $ref: '#/components/schemas/Service'
            description: The event data structure
        ServiceAttributeValueChangeEvent:
            type: object
            properties:
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
                fieldPath:
                    type: string
                    description: The path identifying the object field concerned by this notification.
                event:
                    $ref: '#/components/schemas/ServiceAttributeValueChangeEventPayload'
            description: The notification data structure
        ServiceAttributeValueChangeEventPayload:
            type: object
            properties:
                service:
                    $ref: '#/components/schemas/Service'
            description: The event data structure
        ServiceStateChangeEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/ServiceStateChangeEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        ServiceStateChangeEventPayload:
            type: object
            properties:
                service:
                    $ref: '#/components/schemas/Service'
            description: The event data structure
        ServiceDeleteEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/ServiceDeleteEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        ServiceDeleteEventPayload:
            type: object
            properties:
                service:
                    $ref: '#/components/schemas/Service'
            description: The event data structure
        MonitorCreateEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/MonitorCreateEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        MonitorCreateEventPayload:
            type: object
            properties:
                monitor:
                    $ref: '#/components/schemas/Monitor'
            description: The event data structure
        MonitorAttributeValueChangeEvent:
            type: object
            properties:
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
                fieldPath:
                    type: string
                    description: The path identifying the object field concerned by this notification.
                event:
                    $ref: '#/components/schemas/MonitorAttributeValueChangeEventPayload'
            description: The notification data structure
        MonitorAttributeValueChangeEventPayload:
            type: object
            properties:
                monitor:
                    $ref: '#/components/schemas/Monitor'
            description: The event data structure
        MonitorStateChangeEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/MonitorStateChangeEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        MonitorStateChangeEventPayload:
            type: object
            properties:
                monitor:
                    $ref: '#/components/schemas/Monitor'
            description: The event data structure
        MonitorDeleteEvent:
            type: object
            properties:
                event:
                    $ref: '#/components/schemas/MonitorDeleteEventPayload'
                eventId:
                    type: string
                    description: The identifier of the notification.
                eventTime:
                    type: string
                    description: Time of the event occurrence.
                    format: date-time
                eventType:
                    type: string
                    description: The type of the notification.
                correlationId:
                    type: string
                    description: The correlation id for this event.
                domain:
                    type: string
                    description: The domain of the event.
                title:
                    type: string
                    description: The title of the event.
                description:
                    type: string
                    description: An explnatory of the event.
                priority:
                    type: string
                    description: A priority.
                timeOcurred:
                    type: string
                    description: The time the event occured.
                    format: date-time
            description: The notification data structure
        MonitorDeleteEventPayload:
            type: object
            properties:
                monitor:
                    $ref: '#/components/schemas/Monitor'
            description: The event data structure
        Error:
            required:
                - code
                - reason
            type: object
            properties:
                code:
                    type: string
                    description: "Application relevant detail, defined in the API or a common\
            \ list."
                reason:
                    type: string
                    description: Explanation of the reason for the error which can be shown
                        to a client user.
                message:
                    type: string
                    description: More details and corrective actions related to the error which
                        can be shown to a client user.
                status:
                    type: string
                    description: HTTP Error code extension
                referenceError:
                    type: string
                    description: URI of documentation describing the error.
                    format: uri
                '@baseType':
                    type: string
                    description: "When sub-classing, this defines the super-class."
                '@schemaLocation':
                    type: string
                    description: A URI to a JSON-Schema file that defines additional attributes
                        and relationships
                    format: uri
                '@type':
                    type: string
                    description: "When sub-classing, this defines the sub-class entity name."
            description: "Used when an API throws an Error, typically with a HTTP error\
        \ response-code (3xx, 4xx, 5xx)"
x-original-swagger-version: "2.0"
